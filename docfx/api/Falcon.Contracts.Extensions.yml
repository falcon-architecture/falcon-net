### YamlMime:ManagedReference
items:
- uid: Falcon.Contracts.Extensions
  commentId: T:Falcon.Contracts.Extensions
  id: Extensions
  parent: Falcon.Contracts
  children:
  - Falcon.Contracts.Extensions.Add(Falcon.Contracts.ICompositeRequest,System.String,Falcon.Contracts.IApiRequest)
  - Falcon.Contracts.Extensions.And(Falcon.Contracts.CompositeFilter,Falcon.Contracts.CompositeFilter)
  - Falcon.Contracts.Extensions.And(Falcon.Contracts.CompositeFilter,Falcon.Contracts.ConditionFilter)
  - Falcon.Contracts.Extensions.And(Falcon.Contracts.CompositeFilter,System.Func{Falcon.Contracts.CompositeFilter,Falcon.Contracts.CompositeFilter})
  - Falcon.Contracts.Extensions.And(Falcon.Contracts.CompositeFilter,System.String,Falcon.Contracts.FieldOperator,System.Object)
  - Falcon.Contracts.Extensions.And(Falcon.Contracts.CompositeFilter,System.String,Falcon.Contracts.UnaryOperator)
  - Falcon.Contracts.Extensions.AndEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  - Falcon.Contracts.Extensions.AndGreaterThan(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  - Falcon.Contracts.Extensions.AndGreaterThanOrEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  - Falcon.Contracts.Extensions.AndIn(Falcon.Contracts.CompositeFilter,System.String,System.Object[])
  - Falcon.Contracts.Extensions.AndIsNotNull(Falcon.Contracts.CompositeFilter,System.String)
  - Falcon.Contracts.Extensions.AndIsNull(Falcon.Contracts.CompositeFilter,System.String)
  - Falcon.Contracts.Extensions.AndLessThan(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  - Falcon.Contracts.Extensions.AndLessThanOrEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  - Falcon.Contracts.Extensions.AndNotEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  - Falcon.Contracts.Extensions.AndNotIn(Falcon.Contracts.CompositeFilter,System.String,System.Object[])
  - Falcon.Contracts.Extensions.Or(Falcon.Contracts.CompositeFilter,Falcon.Contracts.CompositeFilter)
  - Falcon.Contracts.Extensions.Or(Falcon.Contracts.CompositeFilter,Falcon.Contracts.ConditionFilter)
  - Falcon.Contracts.Extensions.Or(Falcon.Contracts.CompositeFilter,System.Func{Falcon.Contracts.CompositeFilter,Falcon.Contracts.CompositeFilter})
  - Falcon.Contracts.Extensions.Or(Falcon.Contracts.CompositeFilter,System.String,Falcon.Contracts.FieldOperator,System.Object)
  - Falcon.Contracts.Extensions.Or(Falcon.Contracts.CompositeFilter,System.String,Falcon.Contracts.UnaryOperator)
  - Falcon.Contracts.Extensions.OrEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  - Falcon.Contracts.Extensions.OrGreaterThan(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  - Falcon.Contracts.Extensions.OrGreaterThanOrEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  - Falcon.Contracts.Extensions.OrIn(Falcon.Contracts.CompositeFilter,System.String,System.Object[])
  - Falcon.Contracts.Extensions.OrIsNotNull(Falcon.Contracts.CompositeFilter,System.String)
  - Falcon.Contracts.Extensions.OrIsNull(Falcon.Contracts.CompositeFilter,System.String)
  - Falcon.Contracts.Extensions.OrLessThan(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  - Falcon.Contracts.Extensions.OrLessThanOrEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  - Falcon.Contracts.Extensions.OrNotEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  - Falcon.Contracts.Extensions.OrNotIn(Falcon.Contracts.CompositeFilter,System.String,System.Object[])
  - Falcon.Contracts.Extensions.SetData(Falcon.Contracts.IQueryResponse,System.Collections.Generic.IEnumerable{System.Object})
  - Falcon.Contracts.Extensions.SetPageContext(Falcon.Contracts.IQueryResponse,Falcon.Contracts.IPageContext)
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: Extensions
  fullName: Falcon.Contracts.Extensions
  type: Class
  source:
    remote:
      path: src/Shared/Contracts/Response/QueryResponse.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: Extensions
    path: ../src/Shared/Contracts/Response/QueryResponse.cs
    startLine: 13
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static class Extensions
    content.vb: Public Module Extensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Falcon.Contracts.Extensions.Add(Falcon.Contracts.ICompositeRequest,System.String,Falcon.Contracts.IApiRequest)
  commentId: M:Falcon.Contracts.Extensions.Add(Falcon.Contracts.ICompositeRequest,System.String,Falcon.Contracts.IApiRequest)
  id: Add(Falcon.Contracts.ICompositeRequest,System.String,Falcon.Contracts.IApiRequest)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: Add(ICompositeRequest, string, IApiRequest)
  nameWithType: Extensions.Add(ICompositeRequest, string, IApiRequest)
  fullName: Falcon.Contracts.Extensions.Add(Falcon.Contracts.ICompositeRequest, string, Falcon.Contracts.IApiRequest)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/CompositeRequest.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: Add
    path: ../src/Shared/Contracts/Request/CompositeRequest.cs
    startLine: 14
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static ICompositeRequest Add(this ICompositeRequest source, string key, IApiRequest value)
    parameters:
    - id: source
      type: Falcon.Contracts.ICompositeRequest
    - id: key
      type: System.String
    - id: value
      type: Falcon.Contracts.IApiRequest
    return:
      type: Falcon.Contracts.ICompositeRequest
    content.vb: Public Shared Function Add(source As ICompositeRequest, key As String, value As IApiRequest) As ICompositeRequest
  overload: Falcon.Contracts.Extensions.Add*
  nameWithType.vb: Extensions.Add(ICompositeRequest, String, IApiRequest)
  fullName.vb: Falcon.Contracts.Extensions.Add(Falcon.Contracts.ICompositeRequest, String, Falcon.Contracts.IApiRequest)
  name.vb: Add(ICompositeRequest, String, IApiRequest)
- uid: Falcon.Contracts.Extensions.AndEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  commentId: M:Falcon.Contracts.Extensions.AndEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  id: AndEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: AndEqual(CompositeFilter, string, object)
  nameWithType: Extensions.AndEqual(CompositeFilter, string, object)
  fullName: Falcon.Contracts.Extensions.AndEqual(Falcon.Contracts.CompositeFilter, string, object)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: AndEqual
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 16
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter AndEqual(this CompositeFilter source, string field, object value)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: field
      type: System.String
    - id: value
      type: System.Object
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function AndEqual(source As CompositeFilter, field As String, value As Object) As CompositeFilter
  overload: Falcon.Contracts.Extensions.AndEqual*
  nameWithType.vb: Extensions.AndEqual(CompositeFilter, String, Object)
  fullName.vb: Falcon.Contracts.Extensions.AndEqual(Falcon.Contracts.CompositeFilter, String, Object)
  name.vb: AndEqual(CompositeFilter, String, Object)
- uid: Falcon.Contracts.Extensions.AndNotEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  commentId: M:Falcon.Contracts.Extensions.AndNotEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  id: AndNotEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: AndNotEqual(CompositeFilter, string, object)
  nameWithType: Extensions.AndNotEqual(CompositeFilter, string, object)
  fullName: Falcon.Contracts.Extensions.AndNotEqual(Falcon.Contracts.CompositeFilter, string, object)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: AndNotEqual
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 18
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter AndNotEqual(this CompositeFilter source, string field, object value)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: field
      type: System.String
    - id: value
      type: System.Object
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function AndNotEqual(source As CompositeFilter, field As String, value As Object) As CompositeFilter
  overload: Falcon.Contracts.Extensions.AndNotEqual*
  nameWithType.vb: Extensions.AndNotEqual(CompositeFilter, String, Object)
  fullName.vb: Falcon.Contracts.Extensions.AndNotEqual(Falcon.Contracts.CompositeFilter, String, Object)
  name.vb: AndNotEqual(CompositeFilter, String, Object)
- uid: Falcon.Contracts.Extensions.AndGreaterThan(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  commentId: M:Falcon.Contracts.Extensions.AndGreaterThan(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  id: AndGreaterThan(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: AndGreaterThan(CompositeFilter, string, object)
  nameWithType: Extensions.AndGreaterThan(CompositeFilter, string, object)
  fullName: Falcon.Contracts.Extensions.AndGreaterThan(Falcon.Contracts.CompositeFilter, string, object)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: AndGreaterThan
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 20
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter AndGreaterThan(this CompositeFilter source, string field, object value)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: field
      type: System.String
    - id: value
      type: System.Object
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function AndGreaterThan(source As CompositeFilter, field As String, value As Object) As CompositeFilter
  overload: Falcon.Contracts.Extensions.AndGreaterThan*
  nameWithType.vb: Extensions.AndGreaterThan(CompositeFilter, String, Object)
  fullName.vb: Falcon.Contracts.Extensions.AndGreaterThan(Falcon.Contracts.CompositeFilter, String, Object)
  name.vb: AndGreaterThan(CompositeFilter, String, Object)
- uid: Falcon.Contracts.Extensions.AndGreaterThanOrEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  commentId: M:Falcon.Contracts.Extensions.AndGreaterThanOrEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  id: AndGreaterThanOrEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: AndGreaterThanOrEqual(CompositeFilter, string, object)
  nameWithType: Extensions.AndGreaterThanOrEqual(CompositeFilter, string, object)
  fullName: Falcon.Contracts.Extensions.AndGreaterThanOrEqual(Falcon.Contracts.CompositeFilter, string, object)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: AndGreaterThanOrEqual
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 22
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter AndGreaterThanOrEqual(this CompositeFilter source, string field, object value)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: field
      type: System.String
    - id: value
      type: System.Object
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function AndGreaterThanOrEqual(source As CompositeFilter, field As String, value As Object) As CompositeFilter
  overload: Falcon.Contracts.Extensions.AndGreaterThanOrEqual*
  nameWithType.vb: Extensions.AndGreaterThanOrEqual(CompositeFilter, String, Object)
  fullName.vb: Falcon.Contracts.Extensions.AndGreaterThanOrEqual(Falcon.Contracts.CompositeFilter, String, Object)
  name.vb: AndGreaterThanOrEqual(CompositeFilter, String, Object)
- uid: Falcon.Contracts.Extensions.AndLessThan(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  commentId: M:Falcon.Contracts.Extensions.AndLessThan(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  id: AndLessThan(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: AndLessThan(CompositeFilter, string, object)
  nameWithType: Extensions.AndLessThan(CompositeFilter, string, object)
  fullName: Falcon.Contracts.Extensions.AndLessThan(Falcon.Contracts.CompositeFilter, string, object)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: AndLessThan
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 24
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter AndLessThan(this CompositeFilter source, string field, object value)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: field
      type: System.String
    - id: value
      type: System.Object
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function AndLessThan(source As CompositeFilter, field As String, value As Object) As CompositeFilter
  overload: Falcon.Contracts.Extensions.AndLessThan*
  nameWithType.vb: Extensions.AndLessThan(CompositeFilter, String, Object)
  fullName.vb: Falcon.Contracts.Extensions.AndLessThan(Falcon.Contracts.CompositeFilter, String, Object)
  name.vb: AndLessThan(CompositeFilter, String, Object)
- uid: Falcon.Contracts.Extensions.AndLessThanOrEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  commentId: M:Falcon.Contracts.Extensions.AndLessThanOrEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  id: AndLessThanOrEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: AndLessThanOrEqual(CompositeFilter, string, object)
  nameWithType: Extensions.AndLessThanOrEqual(CompositeFilter, string, object)
  fullName: Falcon.Contracts.Extensions.AndLessThanOrEqual(Falcon.Contracts.CompositeFilter, string, object)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: AndLessThanOrEqual
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 26
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter AndLessThanOrEqual(this CompositeFilter source, string field, object value)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: field
      type: System.String
    - id: value
      type: System.Object
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function AndLessThanOrEqual(source As CompositeFilter, field As String, value As Object) As CompositeFilter
  overload: Falcon.Contracts.Extensions.AndLessThanOrEqual*
  nameWithType.vb: Extensions.AndLessThanOrEqual(CompositeFilter, String, Object)
  fullName.vb: Falcon.Contracts.Extensions.AndLessThanOrEqual(Falcon.Contracts.CompositeFilter, String, Object)
  name.vb: AndLessThanOrEqual(CompositeFilter, String, Object)
- uid: Falcon.Contracts.Extensions.AndIn(Falcon.Contracts.CompositeFilter,System.String,System.Object[])
  commentId: M:Falcon.Contracts.Extensions.AndIn(Falcon.Contracts.CompositeFilter,System.String,System.Object[])
  id: AndIn(Falcon.Contracts.CompositeFilter,System.String,System.Object[])
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: AndIn(CompositeFilter, string, object[])
  nameWithType: Extensions.AndIn(CompositeFilter, string, object[])
  fullName: Falcon.Contracts.Extensions.AndIn(Falcon.Contracts.CompositeFilter, string, object[])
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: AndIn
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 28
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter AndIn(this CompositeFilter source, string field, object[] values)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: field
      type: System.String
    - id: values
      type: System.Object[]
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function AndIn(source As CompositeFilter, field As String, values As Object()) As CompositeFilter
  overload: Falcon.Contracts.Extensions.AndIn*
  nameWithType.vb: Extensions.AndIn(CompositeFilter, String, Object())
  fullName.vb: Falcon.Contracts.Extensions.AndIn(Falcon.Contracts.CompositeFilter, String, Object())
  name.vb: AndIn(CompositeFilter, String, Object())
- uid: Falcon.Contracts.Extensions.AndNotIn(Falcon.Contracts.CompositeFilter,System.String,System.Object[])
  commentId: M:Falcon.Contracts.Extensions.AndNotIn(Falcon.Contracts.CompositeFilter,System.String,System.Object[])
  id: AndNotIn(Falcon.Contracts.CompositeFilter,System.String,System.Object[])
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: AndNotIn(CompositeFilter, string, object[])
  nameWithType: Extensions.AndNotIn(CompositeFilter, string, object[])
  fullName: Falcon.Contracts.Extensions.AndNotIn(Falcon.Contracts.CompositeFilter, string, object[])
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: AndNotIn
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 30
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter AndNotIn(this CompositeFilter source, string field, object[] values)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: field
      type: System.String
    - id: values
      type: System.Object[]
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function AndNotIn(source As CompositeFilter, field As String, values As Object()) As CompositeFilter
  overload: Falcon.Contracts.Extensions.AndNotIn*
  nameWithType.vb: Extensions.AndNotIn(CompositeFilter, String, Object())
  fullName.vb: Falcon.Contracts.Extensions.AndNotIn(Falcon.Contracts.CompositeFilter, String, Object())
  name.vb: AndNotIn(CompositeFilter, String, Object())
- uid: Falcon.Contracts.Extensions.AndIsNull(Falcon.Contracts.CompositeFilter,System.String)
  commentId: M:Falcon.Contracts.Extensions.AndIsNull(Falcon.Contracts.CompositeFilter,System.String)
  id: AndIsNull(Falcon.Contracts.CompositeFilter,System.String)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: AndIsNull(CompositeFilter, string)
  nameWithType: Extensions.AndIsNull(CompositeFilter, string)
  fullName: Falcon.Contracts.Extensions.AndIsNull(Falcon.Contracts.CompositeFilter, string)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: AndIsNull
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 34
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter AndIsNull(this CompositeFilter source, string field)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: field
      type: System.String
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function AndIsNull(source As CompositeFilter, field As String) As CompositeFilter
  overload: Falcon.Contracts.Extensions.AndIsNull*
  nameWithType.vb: Extensions.AndIsNull(CompositeFilter, String)
  fullName.vb: Falcon.Contracts.Extensions.AndIsNull(Falcon.Contracts.CompositeFilter, String)
  name.vb: AndIsNull(CompositeFilter, String)
- uid: Falcon.Contracts.Extensions.AndIsNotNull(Falcon.Contracts.CompositeFilter,System.String)
  commentId: M:Falcon.Contracts.Extensions.AndIsNotNull(Falcon.Contracts.CompositeFilter,System.String)
  id: AndIsNotNull(Falcon.Contracts.CompositeFilter,System.String)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: AndIsNotNull(CompositeFilter, string)
  nameWithType: Extensions.AndIsNotNull(CompositeFilter, string)
  fullName: Falcon.Contracts.Extensions.AndIsNotNull(Falcon.Contracts.CompositeFilter, string)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: AndIsNotNull
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 36
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter AndIsNotNull(this CompositeFilter source, string field)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: field
      type: System.String
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function AndIsNotNull(source As CompositeFilter, field As String) As CompositeFilter
  overload: Falcon.Contracts.Extensions.AndIsNotNull*
  nameWithType.vb: Extensions.AndIsNotNull(CompositeFilter, String)
  fullName.vb: Falcon.Contracts.Extensions.AndIsNotNull(Falcon.Contracts.CompositeFilter, String)
  name.vb: AndIsNotNull(CompositeFilter, String)
- uid: Falcon.Contracts.Extensions.And(Falcon.Contracts.CompositeFilter,System.String,Falcon.Contracts.UnaryOperator)
  commentId: M:Falcon.Contracts.Extensions.And(Falcon.Contracts.CompositeFilter,System.String,Falcon.Contracts.UnaryOperator)
  id: And(Falcon.Contracts.CompositeFilter,System.String,Falcon.Contracts.UnaryOperator)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: And(CompositeFilter, string, UnaryOperator)
  nameWithType: Extensions.And(CompositeFilter, string, UnaryOperator)
  fullName: Falcon.Contracts.Extensions.And(Falcon.Contracts.CompositeFilter, string, Falcon.Contracts.UnaryOperator)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: And
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 40
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter And(this CompositeFilter source, string field, UnaryOperator op)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: field
      type: System.String
    - id: op
      type: Falcon.Contracts.UnaryOperator
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function [And](source As CompositeFilter, field As String, op As UnaryOperator) As CompositeFilter
  overload: Falcon.Contracts.Extensions.And*
  nameWithType.vb: Extensions.And(CompositeFilter, String, UnaryOperator)
  fullName.vb: Falcon.Contracts.Extensions.And(Falcon.Contracts.CompositeFilter, String, Falcon.Contracts.UnaryOperator)
  name.vb: And(CompositeFilter, String, UnaryOperator)
- uid: Falcon.Contracts.Extensions.And(Falcon.Contracts.CompositeFilter,System.String,Falcon.Contracts.FieldOperator,System.Object)
  commentId: M:Falcon.Contracts.Extensions.And(Falcon.Contracts.CompositeFilter,System.String,Falcon.Contracts.FieldOperator,System.Object)
  id: And(Falcon.Contracts.CompositeFilter,System.String,Falcon.Contracts.FieldOperator,System.Object)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: And(CompositeFilter, string, FieldOperator, object)
  nameWithType: Extensions.And(CompositeFilter, string, FieldOperator, object)
  fullName: Falcon.Contracts.Extensions.And(Falcon.Contracts.CompositeFilter, string, Falcon.Contracts.FieldOperator, object)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: And
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 44
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter And(this CompositeFilter source, string field, FieldOperator op, object value)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: field
      type: System.String
    - id: op
      type: Falcon.Contracts.FieldOperator
    - id: value
      type: System.Object
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function [And](source As CompositeFilter, field As String, op As FieldOperator, value As Object) As CompositeFilter
  overload: Falcon.Contracts.Extensions.And*
  nameWithType.vb: Extensions.And(CompositeFilter, String, FieldOperator, Object)
  fullName.vb: Falcon.Contracts.Extensions.And(Falcon.Contracts.CompositeFilter, String, Falcon.Contracts.FieldOperator, Object)
  name.vb: And(CompositeFilter, String, FieldOperator, Object)
- uid: Falcon.Contracts.Extensions.And(Falcon.Contracts.CompositeFilter,Falcon.Contracts.ConditionFilter)
  commentId: M:Falcon.Contracts.Extensions.And(Falcon.Contracts.CompositeFilter,Falcon.Contracts.ConditionFilter)
  id: And(Falcon.Contracts.CompositeFilter,Falcon.Contracts.ConditionFilter)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: And(CompositeFilter, ConditionFilter)
  nameWithType: Extensions.And(CompositeFilter, ConditionFilter)
  fullName: Falcon.Contracts.Extensions.And(Falcon.Contracts.CompositeFilter, Falcon.Contracts.ConditionFilter)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: And
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 48
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter And(this CompositeFilter source, ConditionFilter filter)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: filter
      type: Falcon.Contracts.ConditionFilter
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function [And](source As CompositeFilter, filter As ConditionFilter) As CompositeFilter
  overload: Falcon.Contracts.Extensions.And*
- uid: Falcon.Contracts.Extensions.And(Falcon.Contracts.CompositeFilter,System.Func{Falcon.Contracts.CompositeFilter,Falcon.Contracts.CompositeFilter})
  commentId: M:Falcon.Contracts.Extensions.And(Falcon.Contracts.CompositeFilter,System.Func{Falcon.Contracts.CompositeFilter,Falcon.Contracts.CompositeFilter})
  id: And(Falcon.Contracts.CompositeFilter,System.Func{Falcon.Contracts.CompositeFilter,Falcon.Contracts.CompositeFilter})
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: And(CompositeFilter, Func<CompositeFilter, CompositeFilter>)
  nameWithType: Extensions.And(CompositeFilter, Func<CompositeFilter, CompositeFilter>)
  fullName: Falcon.Contracts.Extensions.And(Falcon.Contracts.CompositeFilter, System.Func<Falcon.Contracts.CompositeFilter, Falcon.Contracts.CompositeFilter>)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: And
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 54
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter And(this CompositeFilter source, Func<CompositeFilter, CompositeFilter> filterAction)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: filterAction
      type: System.Func{Falcon.Contracts.CompositeFilter,Falcon.Contracts.CompositeFilter}
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function [And](source As CompositeFilter, filterAction As Func(Of CompositeFilter, CompositeFilter)) As CompositeFilter
  overload: Falcon.Contracts.Extensions.And*
  nameWithType.vb: Extensions.And(CompositeFilter, Func(Of CompositeFilter, CompositeFilter))
  fullName.vb: Falcon.Contracts.Extensions.And(Falcon.Contracts.CompositeFilter, System.Func(Of Falcon.Contracts.CompositeFilter, Falcon.Contracts.CompositeFilter))
  name.vb: And(CompositeFilter, Func(Of CompositeFilter, CompositeFilter))
- uid: Falcon.Contracts.Extensions.And(Falcon.Contracts.CompositeFilter,Falcon.Contracts.CompositeFilter)
  commentId: M:Falcon.Contracts.Extensions.And(Falcon.Contracts.CompositeFilter,Falcon.Contracts.CompositeFilter)
  id: And(Falcon.Contracts.CompositeFilter,Falcon.Contracts.CompositeFilter)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: And(CompositeFilter, CompositeFilter)
  nameWithType: Extensions.And(CompositeFilter, CompositeFilter)
  fullName: Falcon.Contracts.Extensions.And(Falcon.Contracts.CompositeFilter, Falcon.Contracts.CompositeFilter)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: And
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 59
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter And(this CompositeFilter source, CompositeFilter filter)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: filter
      type: Falcon.Contracts.CompositeFilter
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function [And](source As CompositeFilter, filter As CompositeFilter) As CompositeFilter
  overload: Falcon.Contracts.Extensions.And*
- uid: Falcon.Contracts.Extensions.OrEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  commentId: M:Falcon.Contracts.Extensions.OrEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  id: OrEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: OrEqual(CompositeFilter, string, object)
  nameWithType: Extensions.OrEqual(CompositeFilter, string, object)
  fullName: Falcon.Contracts.Extensions.OrEqual(Falcon.Contracts.CompositeFilter, string, object)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: OrEqual
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 67
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter OrEqual(this CompositeFilter source, string field, object value)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: field
      type: System.String
    - id: value
      type: System.Object
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function OrEqual(source As CompositeFilter, field As String, value As Object) As CompositeFilter
  overload: Falcon.Contracts.Extensions.OrEqual*
  nameWithType.vb: Extensions.OrEqual(CompositeFilter, String, Object)
  fullName.vb: Falcon.Contracts.Extensions.OrEqual(Falcon.Contracts.CompositeFilter, String, Object)
  name.vb: OrEqual(CompositeFilter, String, Object)
- uid: Falcon.Contracts.Extensions.OrNotEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  commentId: M:Falcon.Contracts.Extensions.OrNotEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  id: OrNotEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: OrNotEqual(CompositeFilter, string, object)
  nameWithType: Extensions.OrNotEqual(CompositeFilter, string, object)
  fullName: Falcon.Contracts.Extensions.OrNotEqual(Falcon.Contracts.CompositeFilter, string, object)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: OrNotEqual
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 69
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter OrNotEqual(this CompositeFilter source, string field, object value)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: field
      type: System.String
    - id: value
      type: System.Object
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function OrNotEqual(source As CompositeFilter, field As String, value As Object) As CompositeFilter
  overload: Falcon.Contracts.Extensions.OrNotEqual*
  nameWithType.vb: Extensions.OrNotEqual(CompositeFilter, String, Object)
  fullName.vb: Falcon.Contracts.Extensions.OrNotEqual(Falcon.Contracts.CompositeFilter, String, Object)
  name.vb: OrNotEqual(CompositeFilter, String, Object)
- uid: Falcon.Contracts.Extensions.OrGreaterThan(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  commentId: M:Falcon.Contracts.Extensions.OrGreaterThan(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  id: OrGreaterThan(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: OrGreaterThan(CompositeFilter, string, object)
  nameWithType: Extensions.OrGreaterThan(CompositeFilter, string, object)
  fullName: Falcon.Contracts.Extensions.OrGreaterThan(Falcon.Contracts.CompositeFilter, string, object)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: OrGreaterThan
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 71
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter OrGreaterThan(this CompositeFilter source, string field, object value)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: field
      type: System.String
    - id: value
      type: System.Object
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function OrGreaterThan(source As CompositeFilter, field As String, value As Object) As CompositeFilter
  overload: Falcon.Contracts.Extensions.OrGreaterThan*
  nameWithType.vb: Extensions.OrGreaterThan(CompositeFilter, String, Object)
  fullName.vb: Falcon.Contracts.Extensions.OrGreaterThan(Falcon.Contracts.CompositeFilter, String, Object)
  name.vb: OrGreaterThan(CompositeFilter, String, Object)
- uid: Falcon.Contracts.Extensions.OrGreaterThanOrEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  commentId: M:Falcon.Contracts.Extensions.OrGreaterThanOrEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  id: OrGreaterThanOrEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: OrGreaterThanOrEqual(CompositeFilter, string, object)
  nameWithType: Extensions.OrGreaterThanOrEqual(CompositeFilter, string, object)
  fullName: Falcon.Contracts.Extensions.OrGreaterThanOrEqual(Falcon.Contracts.CompositeFilter, string, object)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: OrGreaterThanOrEqual
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 73
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter OrGreaterThanOrEqual(this CompositeFilter source, string field, object value)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: field
      type: System.String
    - id: value
      type: System.Object
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function OrGreaterThanOrEqual(source As CompositeFilter, field As String, value As Object) As CompositeFilter
  overload: Falcon.Contracts.Extensions.OrGreaterThanOrEqual*
  nameWithType.vb: Extensions.OrGreaterThanOrEqual(CompositeFilter, String, Object)
  fullName.vb: Falcon.Contracts.Extensions.OrGreaterThanOrEqual(Falcon.Contracts.CompositeFilter, String, Object)
  name.vb: OrGreaterThanOrEqual(CompositeFilter, String, Object)
- uid: Falcon.Contracts.Extensions.OrLessThan(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  commentId: M:Falcon.Contracts.Extensions.OrLessThan(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  id: OrLessThan(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: OrLessThan(CompositeFilter, string, object)
  nameWithType: Extensions.OrLessThan(CompositeFilter, string, object)
  fullName: Falcon.Contracts.Extensions.OrLessThan(Falcon.Contracts.CompositeFilter, string, object)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: OrLessThan
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 75
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter OrLessThan(this CompositeFilter source, string field, object value)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: field
      type: System.String
    - id: value
      type: System.Object
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function OrLessThan(source As CompositeFilter, field As String, value As Object) As CompositeFilter
  overload: Falcon.Contracts.Extensions.OrLessThan*
  nameWithType.vb: Extensions.OrLessThan(CompositeFilter, String, Object)
  fullName.vb: Falcon.Contracts.Extensions.OrLessThan(Falcon.Contracts.CompositeFilter, String, Object)
  name.vb: OrLessThan(CompositeFilter, String, Object)
- uid: Falcon.Contracts.Extensions.OrLessThanOrEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  commentId: M:Falcon.Contracts.Extensions.OrLessThanOrEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  id: OrLessThanOrEqual(Falcon.Contracts.CompositeFilter,System.String,System.Object)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: OrLessThanOrEqual(CompositeFilter, string, object)
  nameWithType: Extensions.OrLessThanOrEqual(CompositeFilter, string, object)
  fullName: Falcon.Contracts.Extensions.OrLessThanOrEqual(Falcon.Contracts.CompositeFilter, string, object)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: OrLessThanOrEqual
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 77
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter OrLessThanOrEqual(this CompositeFilter source, string field, object value)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: field
      type: System.String
    - id: value
      type: System.Object
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function OrLessThanOrEqual(source As CompositeFilter, field As String, value As Object) As CompositeFilter
  overload: Falcon.Contracts.Extensions.OrLessThanOrEqual*
  nameWithType.vb: Extensions.OrLessThanOrEqual(CompositeFilter, String, Object)
  fullName.vb: Falcon.Contracts.Extensions.OrLessThanOrEqual(Falcon.Contracts.CompositeFilter, String, Object)
  name.vb: OrLessThanOrEqual(CompositeFilter, String, Object)
- uid: Falcon.Contracts.Extensions.OrIn(Falcon.Contracts.CompositeFilter,System.String,System.Object[])
  commentId: M:Falcon.Contracts.Extensions.OrIn(Falcon.Contracts.CompositeFilter,System.String,System.Object[])
  id: OrIn(Falcon.Contracts.CompositeFilter,System.String,System.Object[])
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: OrIn(CompositeFilter, string, object[])
  nameWithType: Extensions.OrIn(CompositeFilter, string, object[])
  fullName: Falcon.Contracts.Extensions.OrIn(Falcon.Contracts.CompositeFilter, string, object[])
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: OrIn
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 79
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter OrIn(this CompositeFilter source, string field, object[] values)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: field
      type: System.String
    - id: values
      type: System.Object[]
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function OrIn(source As CompositeFilter, field As String, values As Object()) As CompositeFilter
  overload: Falcon.Contracts.Extensions.OrIn*
  nameWithType.vb: Extensions.OrIn(CompositeFilter, String, Object())
  fullName.vb: Falcon.Contracts.Extensions.OrIn(Falcon.Contracts.CompositeFilter, String, Object())
  name.vb: OrIn(CompositeFilter, String, Object())
- uid: Falcon.Contracts.Extensions.OrNotIn(Falcon.Contracts.CompositeFilter,System.String,System.Object[])
  commentId: M:Falcon.Contracts.Extensions.OrNotIn(Falcon.Contracts.CompositeFilter,System.String,System.Object[])
  id: OrNotIn(Falcon.Contracts.CompositeFilter,System.String,System.Object[])
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: OrNotIn(CompositeFilter, string, object[])
  nameWithType: Extensions.OrNotIn(CompositeFilter, string, object[])
  fullName: Falcon.Contracts.Extensions.OrNotIn(Falcon.Contracts.CompositeFilter, string, object[])
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: OrNotIn
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 81
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter OrNotIn(this CompositeFilter source, string field, object[] values)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: field
      type: System.String
    - id: values
      type: System.Object[]
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function OrNotIn(source As CompositeFilter, field As String, values As Object()) As CompositeFilter
  overload: Falcon.Contracts.Extensions.OrNotIn*
  nameWithType.vb: Extensions.OrNotIn(CompositeFilter, String, Object())
  fullName.vb: Falcon.Contracts.Extensions.OrNotIn(Falcon.Contracts.CompositeFilter, String, Object())
  name.vb: OrNotIn(CompositeFilter, String, Object())
- uid: Falcon.Contracts.Extensions.OrIsNull(Falcon.Contracts.CompositeFilter,System.String)
  commentId: M:Falcon.Contracts.Extensions.OrIsNull(Falcon.Contracts.CompositeFilter,System.String)
  id: OrIsNull(Falcon.Contracts.CompositeFilter,System.String)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: OrIsNull(CompositeFilter, string)
  nameWithType: Extensions.OrIsNull(CompositeFilter, string)
  fullName: Falcon.Contracts.Extensions.OrIsNull(Falcon.Contracts.CompositeFilter, string)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: OrIsNull
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 85
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter OrIsNull(this CompositeFilter source, string field)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: field
      type: System.String
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function OrIsNull(source As CompositeFilter, field As String) As CompositeFilter
  overload: Falcon.Contracts.Extensions.OrIsNull*
  nameWithType.vb: Extensions.OrIsNull(CompositeFilter, String)
  fullName.vb: Falcon.Contracts.Extensions.OrIsNull(Falcon.Contracts.CompositeFilter, String)
  name.vb: OrIsNull(CompositeFilter, String)
- uid: Falcon.Contracts.Extensions.OrIsNotNull(Falcon.Contracts.CompositeFilter,System.String)
  commentId: M:Falcon.Contracts.Extensions.OrIsNotNull(Falcon.Contracts.CompositeFilter,System.String)
  id: OrIsNotNull(Falcon.Contracts.CompositeFilter,System.String)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: OrIsNotNull(CompositeFilter, string)
  nameWithType: Extensions.OrIsNotNull(CompositeFilter, string)
  fullName: Falcon.Contracts.Extensions.OrIsNotNull(Falcon.Contracts.CompositeFilter, string)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: OrIsNotNull
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 87
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter OrIsNotNull(this CompositeFilter source, string field)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: field
      type: System.String
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function OrIsNotNull(source As CompositeFilter, field As String) As CompositeFilter
  overload: Falcon.Contracts.Extensions.OrIsNotNull*
  nameWithType.vb: Extensions.OrIsNotNull(CompositeFilter, String)
  fullName.vb: Falcon.Contracts.Extensions.OrIsNotNull(Falcon.Contracts.CompositeFilter, String)
  name.vb: OrIsNotNull(CompositeFilter, String)
- uid: Falcon.Contracts.Extensions.Or(Falcon.Contracts.CompositeFilter,System.String,Falcon.Contracts.UnaryOperator)
  commentId: M:Falcon.Contracts.Extensions.Or(Falcon.Contracts.CompositeFilter,System.String,Falcon.Contracts.UnaryOperator)
  id: Or(Falcon.Contracts.CompositeFilter,System.String,Falcon.Contracts.UnaryOperator)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: Or(CompositeFilter, string, UnaryOperator)
  nameWithType: Extensions.Or(CompositeFilter, string, UnaryOperator)
  fullName: Falcon.Contracts.Extensions.Or(Falcon.Contracts.CompositeFilter, string, Falcon.Contracts.UnaryOperator)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: Or
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 91
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter Or(this CompositeFilter source, string field, UnaryOperator op)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: field
      type: System.String
    - id: op
      type: Falcon.Contracts.UnaryOperator
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function [Or](source As CompositeFilter, field As String, op As UnaryOperator) As CompositeFilter
  overload: Falcon.Contracts.Extensions.Or*
  nameWithType.vb: Extensions.Or(CompositeFilter, String, UnaryOperator)
  fullName.vb: Falcon.Contracts.Extensions.Or(Falcon.Contracts.CompositeFilter, String, Falcon.Contracts.UnaryOperator)
  name.vb: Or(CompositeFilter, String, UnaryOperator)
- uid: Falcon.Contracts.Extensions.Or(Falcon.Contracts.CompositeFilter,System.String,Falcon.Contracts.FieldOperator,System.Object)
  commentId: M:Falcon.Contracts.Extensions.Or(Falcon.Contracts.CompositeFilter,System.String,Falcon.Contracts.FieldOperator,System.Object)
  id: Or(Falcon.Contracts.CompositeFilter,System.String,Falcon.Contracts.FieldOperator,System.Object)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: Or(CompositeFilter, string, FieldOperator, object)
  nameWithType: Extensions.Or(CompositeFilter, string, FieldOperator, object)
  fullName: Falcon.Contracts.Extensions.Or(Falcon.Contracts.CompositeFilter, string, Falcon.Contracts.FieldOperator, object)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: Or
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 95
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter Or(this CompositeFilter source, string field, FieldOperator op, object value)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: field
      type: System.String
    - id: op
      type: Falcon.Contracts.FieldOperator
    - id: value
      type: System.Object
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function [Or](source As CompositeFilter, field As String, op As FieldOperator, value As Object) As CompositeFilter
  overload: Falcon.Contracts.Extensions.Or*
  nameWithType.vb: Extensions.Or(CompositeFilter, String, FieldOperator, Object)
  fullName.vb: Falcon.Contracts.Extensions.Or(Falcon.Contracts.CompositeFilter, String, Falcon.Contracts.FieldOperator, Object)
  name.vb: Or(CompositeFilter, String, FieldOperator, Object)
- uid: Falcon.Contracts.Extensions.Or(Falcon.Contracts.CompositeFilter,Falcon.Contracts.ConditionFilter)
  commentId: M:Falcon.Contracts.Extensions.Or(Falcon.Contracts.CompositeFilter,Falcon.Contracts.ConditionFilter)
  id: Or(Falcon.Contracts.CompositeFilter,Falcon.Contracts.ConditionFilter)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: Or(CompositeFilter, ConditionFilter)
  nameWithType: Extensions.Or(CompositeFilter, ConditionFilter)
  fullName: Falcon.Contracts.Extensions.Or(Falcon.Contracts.CompositeFilter, Falcon.Contracts.ConditionFilter)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: Or
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 99
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter Or(this CompositeFilter source, ConditionFilter filter)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: filter
      type: Falcon.Contracts.ConditionFilter
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function [Or](source As CompositeFilter, filter As ConditionFilter) As CompositeFilter
  overload: Falcon.Contracts.Extensions.Or*
- uid: Falcon.Contracts.Extensions.Or(Falcon.Contracts.CompositeFilter,System.Func{Falcon.Contracts.CompositeFilter,Falcon.Contracts.CompositeFilter})
  commentId: M:Falcon.Contracts.Extensions.Or(Falcon.Contracts.CompositeFilter,System.Func{Falcon.Contracts.CompositeFilter,Falcon.Contracts.CompositeFilter})
  id: Or(Falcon.Contracts.CompositeFilter,System.Func{Falcon.Contracts.CompositeFilter,Falcon.Contracts.CompositeFilter})
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: Or(CompositeFilter, Func<CompositeFilter, CompositeFilter>)
  nameWithType: Extensions.Or(CompositeFilter, Func<CompositeFilter, CompositeFilter>)
  fullName: Falcon.Contracts.Extensions.Or(Falcon.Contracts.CompositeFilter, System.Func<Falcon.Contracts.CompositeFilter, Falcon.Contracts.CompositeFilter>)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: Or
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 105
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter Or(this CompositeFilter source, Func<CompositeFilter, CompositeFilter> filterAction)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: filterAction
      type: System.Func{Falcon.Contracts.CompositeFilter,Falcon.Contracts.CompositeFilter}
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function [Or](source As CompositeFilter, filterAction As Func(Of CompositeFilter, CompositeFilter)) As CompositeFilter
  overload: Falcon.Contracts.Extensions.Or*
  nameWithType.vb: Extensions.Or(CompositeFilter, Func(Of CompositeFilter, CompositeFilter))
  fullName.vb: Falcon.Contracts.Extensions.Or(Falcon.Contracts.CompositeFilter, System.Func(Of Falcon.Contracts.CompositeFilter, Falcon.Contracts.CompositeFilter))
  name.vb: Or(CompositeFilter, Func(Of CompositeFilter, CompositeFilter))
- uid: Falcon.Contracts.Extensions.Or(Falcon.Contracts.CompositeFilter,Falcon.Contracts.CompositeFilter)
  commentId: M:Falcon.Contracts.Extensions.Or(Falcon.Contracts.CompositeFilter,Falcon.Contracts.CompositeFilter)
  id: Or(Falcon.Contracts.CompositeFilter,Falcon.Contracts.CompositeFilter)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: Or(CompositeFilter, CompositeFilter)
  nameWithType: Extensions.Or(CompositeFilter, CompositeFilter)
  fullName: Falcon.Contracts.Extensions.Or(Falcon.Contracts.CompositeFilter, Falcon.Contracts.CompositeFilter)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Request/Filter/CompositeFilter.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: Or
    path: ../src/Shared/Contracts/Request/Filter/CompositeFilter.cs
    startLine: 110
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static CompositeFilter Or(this CompositeFilter source, CompositeFilter filter)
    parameters:
    - id: source
      type: Falcon.Contracts.CompositeFilter
    - id: filter
      type: Falcon.Contracts.CompositeFilter
    return:
      type: Falcon.Contracts.CompositeFilter
    content.vb: Public Shared Function [Or](source As CompositeFilter, filter As CompositeFilter) As CompositeFilter
  overload: Falcon.Contracts.Extensions.Or*
- uid: Falcon.Contracts.Extensions.SetData(Falcon.Contracts.IQueryResponse,System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Falcon.Contracts.Extensions.SetData(Falcon.Contracts.IQueryResponse,System.Collections.Generic.IEnumerable{System.Object})
  id: SetData(Falcon.Contracts.IQueryResponse,System.Collections.Generic.IEnumerable{System.Object})
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: SetData(IQueryResponse, IEnumerable<object>)
  nameWithType: Extensions.SetData(IQueryResponse, IEnumerable<object>)
  fullName: Falcon.Contracts.Extensions.SetData(Falcon.Contracts.IQueryResponse, System.Collections.Generic.IEnumerable<object>)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Response/QueryResponse.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: SetData
    path: ../src/Shared/Contracts/Response/QueryResponse.cs
    startLine: 16
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static IQueryResponse SetData(this IQueryResponse source, IEnumerable<object> data)
    parameters:
    - id: source
      type: Falcon.Contracts.IQueryResponse
    - id: data
      type: System.Collections.Generic.IEnumerable{System.Object}
    return:
      type: Falcon.Contracts.IQueryResponse
    content.vb: Public Shared Function SetData(source As IQueryResponse, data As IEnumerable(Of Object)) As IQueryResponse
  overload: Falcon.Contracts.Extensions.SetData*
  nameWithType.vb: Extensions.SetData(IQueryResponse, IEnumerable(Of Object))
  fullName.vb: Falcon.Contracts.Extensions.SetData(Falcon.Contracts.IQueryResponse, System.Collections.Generic.IEnumerable(Of Object))
  name.vb: SetData(IQueryResponse, IEnumerable(Of Object))
- uid: Falcon.Contracts.Extensions.SetPageContext(Falcon.Contracts.IQueryResponse,Falcon.Contracts.IPageContext)
  commentId: M:Falcon.Contracts.Extensions.SetPageContext(Falcon.Contracts.IQueryResponse,Falcon.Contracts.IPageContext)
  id: SetPageContext(Falcon.Contracts.IQueryResponse,Falcon.Contracts.IPageContext)
  isExtensionMethod: true
  parent: Falcon.Contracts.Extensions
  langs:
  - csharp
  - vb
  name: SetPageContext(IQueryResponse, IPageContext)
  nameWithType: Extensions.SetPageContext(IQueryResponse, IPageContext)
  fullName: Falcon.Contracts.Extensions.SetPageContext(Falcon.Contracts.IQueryResponse, Falcon.Contracts.IPageContext)
  type: Method
  source:
    remote:
      path: src/Shared/Contracts/Response/QueryResponse.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: SetPageContext
    path: ../src/Shared/Contracts/Response/QueryResponse.cs
    startLine: 21
  assemblies:
  - Falcon.Contracts.Abstractions
  namespace: Falcon.Contracts
  syntax:
    content: public static IQueryResponse SetPageContext(this IQueryResponse source, IPageContext pc)
    parameters:
    - id: source
      type: Falcon.Contracts.IQueryResponse
    - id: pc
      type: Falcon.Contracts.IPageContext
    return:
      type: Falcon.Contracts.IQueryResponse
    content.vb: Public Shared Function SetPageContext(source As IQueryResponse, pc As IPageContext) As IQueryResponse
  overload: Falcon.Contracts.Extensions.SetPageContext*
references:
- uid: Falcon.Contracts
  commentId: N:Falcon.Contracts
  href: Falcon.html
  name: Falcon.Contracts
  nameWithType: Falcon.Contracts
  fullName: Falcon.Contracts
  spec.csharp:
  - uid: Falcon
    name: Falcon
    href: Falcon.html
  - name: .
  - uid: Falcon.Contracts
    name: Contracts
    href: Falcon.Contracts.html
  spec.vb:
  - uid: Falcon
    name: Falcon
    href: Falcon.html
  - name: .
  - uid: Falcon.Contracts
    name: Contracts
    href: Falcon.Contracts.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Falcon.Contracts.Extensions.Add*
  commentId: Overload:Falcon.Contracts.Extensions.Add
  href: Falcon.Contracts.Extensions.html#Falcon_Contracts_Extensions_Add_Falcon_Contracts_ICompositeRequest_System_String_Falcon_Contracts_IApiRequest_
  name: Add
  nameWithType: Extensions.Add
  fullName: Falcon.Contracts.Extensions.Add
- uid: Falcon.Contracts.ICompositeRequest
  commentId: T:Falcon.Contracts.ICompositeRequest
  parent: Falcon.Contracts
  href: Falcon.Contracts.ICompositeRequest.html
  name: ICompositeRequest
  nameWithType: ICompositeRequest
  fullName: Falcon.Contracts.ICompositeRequest
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Falcon.Contracts.IApiRequest
  commentId: T:Falcon.Contracts.IApiRequest
  parent: Falcon.Contracts
  href: Falcon.Contracts.IApiRequest.html
  name: IApiRequest
  nameWithType: IApiRequest
  fullName: Falcon.Contracts.IApiRequest
- uid: Falcon.Contracts.Extensions.AndEqual*
  commentId: Overload:Falcon.Contracts.Extensions.AndEqual
  href: Falcon.Contracts.Extensions.html#Falcon_Contracts_Extensions_AndEqual_Falcon_Contracts_CompositeFilter_System_String_System_Object_
  name: AndEqual
  nameWithType: Extensions.AndEqual
  fullName: Falcon.Contracts.Extensions.AndEqual
- uid: Falcon.Contracts.CompositeFilter
  commentId: T:Falcon.Contracts.CompositeFilter
  parent: Falcon.Contracts
  href: Falcon.Contracts.CompositeFilter.html
  name: CompositeFilter
  nameWithType: CompositeFilter
  fullName: Falcon.Contracts.CompositeFilter
- uid: Falcon.Contracts.Extensions.AndNotEqual*
  commentId: Overload:Falcon.Contracts.Extensions.AndNotEqual
  href: Falcon.Contracts.Extensions.html#Falcon_Contracts_Extensions_AndNotEqual_Falcon_Contracts_CompositeFilter_System_String_System_Object_
  name: AndNotEqual
  nameWithType: Extensions.AndNotEqual
  fullName: Falcon.Contracts.Extensions.AndNotEqual
- uid: Falcon.Contracts.Extensions.AndGreaterThan*
  commentId: Overload:Falcon.Contracts.Extensions.AndGreaterThan
  href: Falcon.Contracts.Extensions.html#Falcon_Contracts_Extensions_AndGreaterThan_Falcon_Contracts_CompositeFilter_System_String_System_Object_
  name: AndGreaterThan
  nameWithType: Extensions.AndGreaterThan
  fullName: Falcon.Contracts.Extensions.AndGreaterThan
- uid: Falcon.Contracts.Extensions.AndGreaterThanOrEqual*
  commentId: Overload:Falcon.Contracts.Extensions.AndGreaterThanOrEqual
  href: Falcon.Contracts.Extensions.html#Falcon_Contracts_Extensions_AndGreaterThanOrEqual_Falcon_Contracts_CompositeFilter_System_String_System_Object_
  name: AndGreaterThanOrEqual
  nameWithType: Extensions.AndGreaterThanOrEqual
  fullName: Falcon.Contracts.Extensions.AndGreaterThanOrEqual
- uid: Falcon.Contracts.Extensions.AndLessThan*
  commentId: Overload:Falcon.Contracts.Extensions.AndLessThan
  href: Falcon.Contracts.Extensions.html#Falcon_Contracts_Extensions_AndLessThan_Falcon_Contracts_CompositeFilter_System_String_System_Object_
  name: AndLessThan
  nameWithType: Extensions.AndLessThan
  fullName: Falcon.Contracts.Extensions.AndLessThan
- uid: Falcon.Contracts.Extensions.AndLessThanOrEqual*
  commentId: Overload:Falcon.Contracts.Extensions.AndLessThanOrEqual
  href: Falcon.Contracts.Extensions.html#Falcon_Contracts_Extensions_AndLessThanOrEqual_Falcon_Contracts_CompositeFilter_System_String_System_Object_
  name: AndLessThanOrEqual
  nameWithType: Extensions.AndLessThanOrEqual
  fullName: Falcon.Contracts.Extensions.AndLessThanOrEqual
- uid: Falcon.Contracts.Extensions.AndIn*
  commentId: Overload:Falcon.Contracts.Extensions.AndIn
  href: Falcon.Contracts.Extensions.html#Falcon_Contracts_Extensions_AndIn_Falcon_Contracts_CompositeFilter_System_String_System_Object___
  name: AndIn
  nameWithType: Extensions.AndIn
  fullName: Falcon.Contracts.Extensions.AndIn
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: Falcon.Contracts.Extensions.AndNotIn*
  commentId: Overload:Falcon.Contracts.Extensions.AndNotIn
  href: Falcon.Contracts.Extensions.html#Falcon_Contracts_Extensions_AndNotIn_Falcon_Contracts_CompositeFilter_System_String_System_Object___
  name: AndNotIn
  nameWithType: Extensions.AndNotIn
  fullName: Falcon.Contracts.Extensions.AndNotIn
- uid: Falcon.Contracts.Extensions.AndIsNull*
  commentId: Overload:Falcon.Contracts.Extensions.AndIsNull
  href: Falcon.Contracts.Extensions.html#Falcon_Contracts_Extensions_AndIsNull_Falcon_Contracts_CompositeFilter_System_String_
  name: AndIsNull
  nameWithType: Extensions.AndIsNull
  fullName: Falcon.Contracts.Extensions.AndIsNull
- uid: Falcon.Contracts.Extensions.AndIsNotNull*
  commentId: Overload:Falcon.Contracts.Extensions.AndIsNotNull
  href: Falcon.Contracts.Extensions.html#Falcon_Contracts_Extensions_AndIsNotNull_Falcon_Contracts_CompositeFilter_System_String_
  name: AndIsNotNull
  nameWithType: Extensions.AndIsNotNull
  fullName: Falcon.Contracts.Extensions.AndIsNotNull
- uid: Falcon.Contracts.Extensions.And*
  commentId: Overload:Falcon.Contracts.Extensions.And
  href: Falcon.Contracts.Extensions.html#Falcon_Contracts_Extensions_And_Falcon_Contracts_CompositeFilter_System_String_Falcon_Contracts_UnaryOperator_
  name: And
  nameWithType: Extensions.And
  fullName: Falcon.Contracts.Extensions.And
- uid: Falcon.Contracts.UnaryOperator
  commentId: T:Falcon.Contracts.UnaryOperator
  parent: Falcon.Contracts
  href: Falcon.Contracts.UnaryOperator.html
  name: UnaryOperator
  nameWithType: UnaryOperator
  fullName: Falcon.Contracts.UnaryOperator
- uid: Falcon.Contracts.FieldOperator
  commentId: T:Falcon.Contracts.FieldOperator
  parent: Falcon.Contracts
  href: Falcon.Contracts.FieldOperator.html
  name: FieldOperator
  nameWithType: FieldOperator
  fullName: Falcon.Contracts.FieldOperator
- uid: Falcon.Contracts.ConditionFilter
  commentId: T:Falcon.Contracts.ConditionFilter
  parent: Falcon.Contracts
  href: Falcon.Contracts.ConditionFilter.html
  name: ConditionFilter
  nameWithType: ConditionFilter
  fullName: Falcon.Contracts.ConditionFilter
- uid: System.Func{Falcon.Contracts.CompositeFilter,Falcon.Contracts.CompositeFilter}
  commentId: T:System.Func{Falcon.Contracts.CompositeFilter,Falcon.Contracts.CompositeFilter}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<CompositeFilter, CompositeFilter>
  nameWithType: Func<CompositeFilter, CompositeFilter>
  fullName: System.Func<Falcon.Contracts.CompositeFilter, Falcon.Contracts.CompositeFilter>
  nameWithType.vb: Func(Of CompositeFilter, CompositeFilter)
  fullName.vb: System.Func(Of Falcon.Contracts.CompositeFilter, Falcon.Contracts.CompositeFilter)
  name.vb: Func(Of CompositeFilter, CompositeFilter)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Falcon.Contracts.CompositeFilter
    name: CompositeFilter
    href: Falcon.Contracts.CompositeFilter.html
  - name: ','
  - name: " "
  - uid: Falcon.Contracts.CompositeFilter
    name: CompositeFilter
    href: Falcon.Contracts.CompositeFilter.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Falcon.Contracts.CompositeFilter
    name: CompositeFilter
    href: Falcon.Contracts.CompositeFilter.html
  - name: ','
  - name: " "
  - uid: Falcon.Contracts.CompositeFilter
    name: CompositeFilter
    href: Falcon.Contracts.CompositeFilter.html
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Falcon.Contracts.Extensions.OrEqual*
  commentId: Overload:Falcon.Contracts.Extensions.OrEqual
  href: Falcon.Contracts.Extensions.html#Falcon_Contracts_Extensions_OrEqual_Falcon_Contracts_CompositeFilter_System_String_System_Object_
  name: OrEqual
  nameWithType: Extensions.OrEqual
  fullName: Falcon.Contracts.Extensions.OrEqual
- uid: Falcon.Contracts.Extensions.OrNotEqual*
  commentId: Overload:Falcon.Contracts.Extensions.OrNotEqual
  href: Falcon.Contracts.Extensions.html#Falcon_Contracts_Extensions_OrNotEqual_Falcon_Contracts_CompositeFilter_System_String_System_Object_
  name: OrNotEqual
  nameWithType: Extensions.OrNotEqual
  fullName: Falcon.Contracts.Extensions.OrNotEqual
- uid: Falcon.Contracts.Extensions.OrGreaterThan*
  commentId: Overload:Falcon.Contracts.Extensions.OrGreaterThan
  href: Falcon.Contracts.Extensions.html#Falcon_Contracts_Extensions_OrGreaterThan_Falcon_Contracts_CompositeFilter_System_String_System_Object_
  name: OrGreaterThan
  nameWithType: Extensions.OrGreaterThan
  fullName: Falcon.Contracts.Extensions.OrGreaterThan
- uid: Falcon.Contracts.Extensions.OrGreaterThanOrEqual*
  commentId: Overload:Falcon.Contracts.Extensions.OrGreaterThanOrEqual
  href: Falcon.Contracts.Extensions.html#Falcon_Contracts_Extensions_OrGreaterThanOrEqual_Falcon_Contracts_CompositeFilter_System_String_System_Object_
  name: OrGreaterThanOrEqual
  nameWithType: Extensions.OrGreaterThanOrEqual
  fullName: Falcon.Contracts.Extensions.OrGreaterThanOrEqual
- uid: Falcon.Contracts.Extensions.OrLessThan*
  commentId: Overload:Falcon.Contracts.Extensions.OrLessThan
  href: Falcon.Contracts.Extensions.html#Falcon_Contracts_Extensions_OrLessThan_Falcon_Contracts_CompositeFilter_System_String_System_Object_
  name: OrLessThan
  nameWithType: Extensions.OrLessThan
  fullName: Falcon.Contracts.Extensions.OrLessThan
- uid: Falcon.Contracts.Extensions.OrLessThanOrEqual*
  commentId: Overload:Falcon.Contracts.Extensions.OrLessThanOrEqual
  href: Falcon.Contracts.Extensions.html#Falcon_Contracts_Extensions_OrLessThanOrEqual_Falcon_Contracts_CompositeFilter_System_String_System_Object_
  name: OrLessThanOrEqual
  nameWithType: Extensions.OrLessThanOrEqual
  fullName: Falcon.Contracts.Extensions.OrLessThanOrEqual
- uid: Falcon.Contracts.Extensions.OrIn*
  commentId: Overload:Falcon.Contracts.Extensions.OrIn
  href: Falcon.Contracts.Extensions.html#Falcon_Contracts_Extensions_OrIn_Falcon_Contracts_CompositeFilter_System_String_System_Object___
  name: OrIn
  nameWithType: Extensions.OrIn
  fullName: Falcon.Contracts.Extensions.OrIn
- uid: Falcon.Contracts.Extensions.OrNotIn*
  commentId: Overload:Falcon.Contracts.Extensions.OrNotIn
  href: Falcon.Contracts.Extensions.html#Falcon_Contracts_Extensions_OrNotIn_Falcon_Contracts_CompositeFilter_System_String_System_Object___
  name: OrNotIn
  nameWithType: Extensions.OrNotIn
  fullName: Falcon.Contracts.Extensions.OrNotIn
- uid: Falcon.Contracts.Extensions.OrIsNull*
  commentId: Overload:Falcon.Contracts.Extensions.OrIsNull
  href: Falcon.Contracts.Extensions.html#Falcon_Contracts_Extensions_OrIsNull_Falcon_Contracts_CompositeFilter_System_String_
  name: OrIsNull
  nameWithType: Extensions.OrIsNull
  fullName: Falcon.Contracts.Extensions.OrIsNull
- uid: Falcon.Contracts.Extensions.OrIsNotNull*
  commentId: Overload:Falcon.Contracts.Extensions.OrIsNotNull
  href: Falcon.Contracts.Extensions.html#Falcon_Contracts_Extensions_OrIsNotNull_Falcon_Contracts_CompositeFilter_System_String_
  name: OrIsNotNull
  nameWithType: Extensions.OrIsNotNull
  fullName: Falcon.Contracts.Extensions.OrIsNotNull
- uid: Falcon.Contracts.Extensions.Or*
  commentId: Overload:Falcon.Contracts.Extensions.Or
  href: Falcon.Contracts.Extensions.html#Falcon_Contracts_Extensions_Or_Falcon_Contracts_CompositeFilter_System_String_Falcon_Contracts_UnaryOperator_
  name: Or
  nameWithType: Extensions.Or
  fullName: Falcon.Contracts.Extensions.Or
- uid: Falcon.Contracts.Extensions.SetData*
  commentId: Overload:Falcon.Contracts.Extensions.SetData
  href: Falcon.Contracts.Extensions.html#Falcon_Contracts_Extensions_SetData_Falcon_Contracts_IQueryResponse_System_Collections_Generic_IEnumerable_System_Object__
  name: SetData
  nameWithType: Extensions.SetData
  fullName: Falcon.Contracts.Extensions.SetData
- uid: Falcon.Contracts.IQueryResponse
  commentId: T:Falcon.Contracts.IQueryResponse
  parent: Falcon.Contracts
  href: Falcon.Contracts.IQueryResponse.html
  name: IQueryResponse
  nameWithType: IQueryResponse
  fullName: Falcon.Contracts.IQueryResponse
- uid: System.Collections.Generic.IEnumerable{System.Object}
  commentId: T:System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<object>
  nameWithType: IEnumerable<object>
  fullName: System.Collections.Generic.IEnumerable<object>
  nameWithType.vb: IEnumerable(Of Object)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Object)
  name.vb: IEnumerable(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Falcon.Contracts.Extensions.SetPageContext*
  commentId: Overload:Falcon.Contracts.Extensions.SetPageContext
  href: Falcon.Contracts.Extensions.html#Falcon_Contracts_Extensions_SetPageContext_Falcon_Contracts_IQueryResponse_Falcon_Contracts_IPageContext_
  name: SetPageContext
  nameWithType: Extensions.SetPageContext
  fullName: Falcon.Contracts.Extensions.SetPageContext
- uid: Falcon.Contracts.IPageContext
  commentId: T:Falcon.Contracts.IPageContext
  parent: Falcon.Contracts
  href: Falcon.Contracts.IPageContext.html
  name: IPageContext
  nameWithType: IPageContext
  fullName: Falcon.Contracts.IPageContext
