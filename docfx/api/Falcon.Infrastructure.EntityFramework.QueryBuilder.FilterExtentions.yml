### YamlMime:ManagedReference
items:
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions
  commentId: T:Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions
  id: FilterExtentions
  parent: Falcon.Infrastructure.EntityFramework.QueryBuilder
  children:
  - Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.GetFilterExpression``1(Falcon.Contracts.IFilter)
  - Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.GetFilterExpressions``1(Falcon.Contracts.IFilter[])
  - Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.MergeExpressions``1(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}},Falcon.Contracts.CompositeOperator)
  langs:
  - csharp
  - vb
  name: FilterExtentions
  nameWithType: FilterExtentions
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions
  type: Class
  source:
    remote:
      path: src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/FilterExtentions.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: FilterExtentions
    path: ../src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/FilterExtentions.cs
    startLine: 2
  assemblies:
  - Falcon.Infrastructure.EntityFramework.QueryBuilder
  namespace: Falcon.Infrastructure.EntityFramework.QueryBuilder
  syntax:
    content: public static class FilterExtentions
    content.vb: Public Module FilterExtentions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.GetFilterExpression``1(Falcon.Contracts.IFilter)
  commentId: M:Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.GetFilterExpression``1(Falcon.Contracts.IFilter)
  id: GetFilterExpression``1(Falcon.Contracts.IFilter)
  isExtensionMethod: true
  parent: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions
  langs:
  - csharp
  - vb
  name: GetFilterExpression<TEntity>(IFilter)
  nameWithType: FilterExtentions.GetFilterExpression<TEntity>(IFilter)
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.GetFilterExpression<TEntity>(Falcon.Contracts.IFilter)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/FilterExtentions.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: GetFilterExpression
    path: ../src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/FilterExtentions.cs
    startLine: 7
  assemblies:
  - Falcon.Infrastructure.EntityFramework.QueryBuilder
  namespace: Falcon.Infrastructure.EntityFramework.QueryBuilder
  syntax:
    content: public static Expression<Func<TEntity, bool>>? GetFilterExpression<TEntity>(this IFilter filter)
    parameters:
    - id: filter
      type: Falcon.Contracts.IFilter
    typeParameters:
    - id: TEntity
    return:
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
    content.vb: Public Shared Function GetFilterExpression(Of TEntity)(filter As IFilter) As Expression(Of Func(Of TEntity, Boolean))
  overload: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.GetFilterExpression*
  nameWithType.vb: FilterExtentions.GetFilterExpression(Of TEntity)(IFilter)
  fullName.vb: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.GetFilterExpression(Of TEntity)(Falcon.Contracts.IFilter)
  name.vb: GetFilterExpression(Of TEntity)(IFilter)
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.GetFilterExpressions``1(Falcon.Contracts.IFilter[])
  commentId: M:Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.GetFilterExpressions``1(Falcon.Contracts.IFilter[])
  id: GetFilterExpressions``1(Falcon.Contracts.IFilter[])
  isExtensionMethod: true
  parent: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions
  langs:
  - csharp
  - vb
  name: GetFilterExpressions<TEntity>(IFilter[])
  nameWithType: FilterExtentions.GetFilterExpressions<TEntity>(IFilter[])
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.GetFilterExpressions<TEntity>(Falcon.Contracts.IFilter[])
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/FilterExtentions.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: GetFilterExpressions
    path: ../src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/FilterExtentions.cs
    startLine: 63
  assemblies:
  - Falcon.Infrastructure.EntityFramework.QueryBuilder
  namespace: Falcon.Infrastructure.EntityFramework.QueryBuilder
  syntax:
    content: public static IEnumerable<Expression<Func<TEntity, bool>>?> GetFilterExpressions<TEntity>(this IFilter[] filters)
    parameters:
    - id: filters
      type: Falcon.Contracts.IFilter[]
    typeParameters:
    - id: TEntity
    return:
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}}
    content.vb: Public Shared Function GetFilterExpressions(Of TEntity)(filters As IFilter()) As IEnumerable(Of Expression(Of Func(Of TEntity, Boolean)))
  overload: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.GetFilterExpressions*
  nameWithType.vb: FilterExtentions.GetFilterExpressions(Of TEntity)(IFilter())
  fullName.vb: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.GetFilterExpressions(Of TEntity)(Falcon.Contracts.IFilter())
  name.vb: GetFilterExpressions(Of TEntity)(IFilter())
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.MergeExpressions``1(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}},Falcon.Contracts.CompositeOperator)
  commentId: M:Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.MergeExpressions``1(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}},Falcon.Contracts.CompositeOperator)
  id: MergeExpressions``1(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}},Falcon.Contracts.CompositeOperator)
  isExtensionMethod: true
  parent: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions
  langs:
  - csharp
  - vb
  name: MergeExpressions<TEntity>(IEnumerable<Expression<Func<TEntity, bool>>?>, CompositeOperator)
  nameWithType: FilterExtentions.MergeExpressions<TEntity>(IEnumerable<Expression<Func<TEntity, bool>>?>, CompositeOperator)
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.MergeExpressions<TEntity>(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression<System.Func<TEntity, bool>>?>, Falcon.Contracts.CompositeOperator)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/FilterExtentions.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: MergeExpressions
    path: ../src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/FilterExtentions.cs
    startLine: 67
  assemblies:
  - Falcon.Infrastructure.EntityFramework.QueryBuilder
  namespace: Falcon.Infrastructure.EntityFramework.QueryBuilder
  syntax:
    content: public static Expression<Func<TEntity, bool>>? MergeExpressions<TEntity>(this IEnumerable<Expression<Func<TEntity, bool>>?> expressions, CompositeOperator op)
    parameters:
    - id: expressions
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}}
    - id: op
      type: Falcon.Contracts.CompositeOperator
    typeParameters:
    - id: TEntity
    return:
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
    content.vb: Public Shared Function MergeExpressions(Of TEntity)(expressions As IEnumerable(Of Expression(Of Func(Of TEntity, Boolean))), op As CompositeOperator) As Expression(Of Func(Of TEntity, Boolean))
  overload: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.MergeExpressions*
  nameWithType.vb: FilterExtentions.MergeExpressions(Of TEntity)(IEnumerable(Of Expression(Of Func(Of TEntity, Boolean))), CompositeOperator)
  fullName.vb: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.MergeExpressions(Of TEntity)(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean))), Falcon.Contracts.CompositeOperator)
  name.vb: MergeExpressions(Of TEntity)(IEnumerable(Of Expression(Of Func(Of TEntity, Boolean))), CompositeOperator)
references:
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder
  commentId: N:Falcon.Infrastructure.EntityFramework.QueryBuilder
  href: Falcon.html
  name: Falcon.Infrastructure.EntityFramework.QueryBuilder
  nameWithType: Falcon.Infrastructure.EntityFramework.QueryBuilder
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder
  spec.csharp:
  - uid: Falcon
    name: Falcon
    href: Falcon.html
  - name: .
  - uid: Falcon.Infrastructure
    name: Infrastructure
    href: Falcon.Infrastructure.html
  - name: .
  - uid: Falcon.Infrastructure.EntityFramework
    name: EntityFramework
    href: Falcon.Infrastructure.EntityFramework.html
  - name: .
  - uid: Falcon.Infrastructure.EntityFramework.QueryBuilder
    name: QueryBuilder
    href: Falcon.Infrastructure.EntityFramework.QueryBuilder.html
  spec.vb:
  - uid: Falcon
    name: Falcon
    href: Falcon.html
  - name: .
  - uid: Falcon.Infrastructure
    name: Infrastructure
    href: Falcon.Infrastructure.html
  - name: .
  - uid: Falcon.Infrastructure.EntityFramework
    name: EntityFramework
    href: Falcon.Infrastructure.EntityFramework.html
  - name: .
  - uid: Falcon.Infrastructure.EntityFramework.QueryBuilder
    name: QueryBuilder
    href: Falcon.Infrastructure.EntityFramework.QueryBuilder.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.GetFilterExpression*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.GetFilterExpression
  href: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.html#Falcon_Infrastructure_EntityFramework_QueryBuilder_FilterExtentions_GetFilterExpression__1_Falcon_Contracts_IFilter_
  name: GetFilterExpression
  nameWithType: FilterExtentions.GetFilterExpression
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.GetFilterExpression
- uid: Falcon.Contracts.IFilter
  commentId: T:Falcon.Contracts.IFilter
  parent: Falcon.Contracts
  href: Falcon.Contracts.IFilter.html
  name: IFilter
  nameWithType: IFilter
  fullName: Falcon.Contracts.IFilter
- uid: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TEntity, bool>>
  nameWithType: Expression<Func<TEntity, bool>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity, bool>>
  nameWithType.vb: Expression(Of Func(Of TEntity, Boolean))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean))
  name.vb: Expression(Of Func(Of TEntity, Boolean))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: Falcon.Contracts
  commentId: N:Falcon.Contracts
  href: Falcon.html
  name: Falcon.Contracts
  nameWithType: Falcon.Contracts
  fullName: Falcon.Contracts
  spec.csharp:
  - uid: Falcon
    name: Falcon
    href: Falcon.html
  - name: .
  - uid: Falcon.Contracts
    name: Contracts
    href: Falcon.Contracts.html
  spec.vb:
  - uid: Falcon
    name: Falcon
    href: Falcon.html
  - name: .
  - uid: Falcon.Contracts
    name: Contracts
    href: Falcon.Contracts.html
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.GetFilterExpressions*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.GetFilterExpressions
  href: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.html#Falcon_Infrastructure_EntityFramework_QueryBuilder_FilterExtentions_GetFilterExpressions__1_Falcon_Contracts_IFilter___
  name: GetFilterExpressions
  nameWithType: FilterExtentions.GetFilterExpressions
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.GetFilterExpressions
- uid: Falcon.Contracts.IFilter[]
  isExternal: true
  href: Falcon.Contracts.IFilter.html
  name: IFilter[]
  nameWithType: IFilter[]
  fullName: Falcon.Contracts.IFilter[]
  nameWithType.vb: IFilter()
  fullName.vb: Falcon.Contracts.IFilter()
  name.vb: IFilter()
  spec.csharp:
  - uid: Falcon.Contracts.IFilter
    name: IFilter
    href: Falcon.Contracts.IFilter.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Falcon.Contracts.IFilter
    name: IFilter
    href: Falcon.Contracts.IFilter.html
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Expression<Func<TEntity, bool>>>
  nameWithType: IEnumerable<Expression<Func<TEntity, bool>>>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression<System.Func<TEntity, bool>>>
  nameWithType.vb: IEnumerable(Of Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: IEnumerable(Of Expression(Of Func(Of TEntity, Boolean)))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.MergeExpressions*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.MergeExpressions
  href: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.html#Falcon_Infrastructure_EntityFramework_QueryBuilder_FilterExtentions_MergeExpressions__1_System_Collections_Generic_IEnumerable_System_Linq_Expressions_Expression_System_Func___0_System_Boolean____Falcon_Contracts_CompositeOperator_
  name: MergeExpressions
  nameWithType: FilterExtentions.MergeExpressions
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtentions.MergeExpressions
- uid: Falcon.Contracts.CompositeOperator
  commentId: T:Falcon.Contracts.CompositeOperator
  parent: Falcon.Contracts
  href: Falcon.Contracts.CompositeOperator.html
  name: CompositeOperator
  nameWithType: CompositeOperator
  fullName: Falcon.Contracts.CompositeOperator
