### YamlMime:ManagedReference
items:
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions
  commentId: T:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions
  id: QueryableExtentions
  parent: Falcon.Infrastructure.EntityFramework.QueryBuilder
  children:
  - Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyInclude``1(System.Linq.IQueryable{``0},Falcon.Contracts.Include,System.String)
  - Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyIncludes``1(System.Linq.IQueryable{``0},Falcon.Contracts.Include[],System.String)
  - Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyPageContext``1(System.Linq.IQueryable{``0},Falcon.Contracts.PageContext)
  - Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyProjection``1(System.Linq.IQueryable{``0},System.String[],Falcon.Contracts.Include[])
  - Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplySelector``1(System.Linq.IQueryable{``0},System.String[],Falcon.Contracts.Include[])
  - Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplySort``1(System.Linq.IQueryable{``0},Falcon.Contracts.Sort[])
  - Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyWhere``1(System.Linq.IQueryable{``0},Falcon.Contracts.Filter)
  - Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetCollectionValueExpression(System.Type,System.Linq.Expressions.MemberExpression,System.String[],Falcon.Contracts.Include[])
  - Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetEnumValueExpression(System.Linq.Expressions.MemberExpression)
  - Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetJObjectValueExpression(System.Type,System.Linq.Expressions.Expression,System.String[],Falcon.Contracts.Include[])
  - Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetObjectMethodCallException(System.Type,System.Linq.Expressions.MemberExpression,System.String[],Falcon.Contracts.Include[])
  - Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetPrimitiveMethodCallExpression(System.Type,System.Linq.Expressions.MemberExpression)
  - Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetProperties(System.Type)
  - Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetValueExpression(System.Linq.Expressions.MemberExpression)
  - Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ToCamelCase(System.String)
  langs:
  - csharp
  - vb
  name: QueryableExtentions
  nameWithType: QueryableExtentions
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions
  type: Class
  source:
    remote:
      path: src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: QueryableExtentions
    path: ../src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
    startLine: 2
  assemblies:
  - Falcon.Infrastructure.EntityFramework.QueryBuilder
  namespace: Falcon.Infrastructure.EntityFramework.QueryBuilder
  syntax:
    content: public static class QueryableExtentions
    content.vb: Public Module QueryableExtentions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyIncludes``1(System.Linq.IQueryable{``0},Falcon.Contracts.Include[],System.String)
  commentId: M:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyIncludes``1(System.Linq.IQueryable{``0},Falcon.Contracts.Include[],System.String)
  id: ApplyIncludes``1(System.Linq.IQueryable{``0},Falcon.Contracts.Include[],System.String)
  isExtensionMethod: true
  parent: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions
  langs:
  - csharp
  - vb
  name: ApplyIncludes<TEntity>(IQueryable<TEntity>, Include[]?, string?)
  nameWithType: QueryableExtentions.ApplyIncludes<TEntity>(IQueryable<TEntity>, Include[]?, string?)
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyIncludes<TEntity>(System.Linq.IQueryable<TEntity>, Falcon.Contracts.Include[]?, string?)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: ApplyIncludes
    path: ../src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
    startLine: 12
  assemblies:
  - Falcon.Infrastructure.EntityFramework.QueryBuilder
  namespace: Falcon.Infrastructure.EntityFramework.QueryBuilder
  syntax:
    content: 'public static IQueryable<TEntity> ApplyIncludes<TEntity>(this IQueryable<TEntity> query, Include[]? includes, string? parent = null) where TEntity : class'
    parameters:
    - id: query
      type: System.Linq.IQueryable{{TEntity}}
    - id: includes
      type: Falcon.Contracts.Include[]
    - id: parent
      type: System.String
    typeParameters:
    - id: TEntity
    return:
      type: System.Linq.IQueryable{{TEntity}}
    content.vb: Public Shared Function ApplyIncludes(Of TEntity As Class)(query As IQueryable(Of TEntity), includes As Include(), parent As String = Nothing) As IQueryable(Of TEntity)
  overload: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyIncludes*
  nameWithType.vb: QueryableExtentions.ApplyIncludes(Of TEntity)(IQueryable(Of TEntity), Include(), String)
  fullName.vb: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyIncludes(Of TEntity)(System.Linq.IQueryable(Of TEntity), Falcon.Contracts.Include(), String)
  name.vb: ApplyIncludes(Of TEntity)(IQueryable(Of TEntity), Include(), String)
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyInclude``1(System.Linq.IQueryable{``0},Falcon.Contracts.Include,System.String)
  commentId: M:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyInclude``1(System.Linq.IQueryable{``0},Falcon.Contracts.Include,System.String)
  id: ApplyInclude``1(System.Linq.IQueryable{``0},Falcon.Contracts.Include,System.String)
  isExtensionMethod: true
  parent: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions
  langs:
  - csharp
  - vb
  name: ApplyInclude<TEntity>(IQueryable<TEntity>, Include, string?)
  nameWithType: QueryableExtentions.ApplyInclude<TEntity>(IQueryable<TEntity>, Include, string?)
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyInclude<TEntity>(System.Linq.IQueryable<TEntity>, Falcon.Contracts.Include, string?)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: ApplyInclude
    path: ../src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
    startLine: 16
  assemblies:
  - Falcon.Infrastructure.EntityFramework.QueryBuilder
  namespace: Falcon.Infrastructure.EntityFramework.QueryBuilder
  syntax:
    content: 'public static IQueryable<TEntity> ApplyInclude<TEntity>(this IQueryable<TEntity> query, Include include, string? parent = null) where TEntity : class'
    parameters:
    - id: query
      type: System.Linq.IQueryable{{TEntity}}
    - id: include
      type: Falcon.Contracts.Include
    - id: parent
      type: System.String
    typeParameters:
    - id: TEntity
    return:
      type: System.Linq.IQueryable{{TEntity}}
    content.vb: Public Shared Function ApplyInclude(Of TEntity As Class)(query As IQueryable(Of TEntity), include As Include, parent As String = Nothing) As IQueryable(Of TEntity)
  overload: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyInclude*
  nameWithType.vb: QueryableExtentions.ApplyInclude(Of TEntity)(IQueryable(Of TEntity), Include, String)
  fullName.vb: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyInclude(Of TEntity)(System.Linq.IQueryable(Of TEntity), Falcon.Contracts.Include, String)
  name.vb: ApplyInclude(Of TEntity)(IQueryable(Of TEntity), Include, String)
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyWhere``1(System.Linq.IQueryable{``0},Falcon.Contracts.Filter)
  commentId: M:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyWhere``1(System.Linq.IQueryable{``0},Falcon.Contracts.Filter)
  id: ApplyWhere``1(System.Linq.IQueryable{``0},Falcon.Contracts.Filter)
  isExtensionMethod: true
  parent: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions
  langs:
  - csharp
  - vb
  name: ApplyWhere<TEntity>(IQueryable<TEntity>, Filter?)
  nameWithType: QueryableExtentions.ApplyWhere<TEntity>(IQueryable<TEntity>, Filter?)
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyWhere<TEntity>(System.Linq.IQueryable<TEntity>, Falcon.Contracts.Filter?)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: ApplyWhere
    path: ../src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
    startLine: 27
  assemblies:
  - Falcon.Infrastructure.EntityFramework.QueryBuilder
  namespace: Falcon.Infrastructure.EntityFramework.QueryBuilder
  syntax:
    content: public static IQueryable<TEntity> ApplyWhere<TEntity>(this IQueryable<TEntity> query, Filter? filter)
    parameters:
    - id: query
      type: System.Linq.IQueryable{{TEntity}}
    - id: filter
      type: Falcon.Contracts.Filter
    typeParameters:
    - id: TEntity
    return:
      type: System.Linq.IQueryable{{TEntity}}
    content.vb: Public Shared Function ApplyWhere(Of TEntity)(query As IQueryable(Of TEntity), filter As Filter) As IQueryable(Of TEntity)
  overload: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyWhere*
  nameWithType.vb: QueryableExtentions.ApplyWhere(Of TEntity)(IQueryable(Of TEntity), Filter)
  fullName.vb: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyWhere(Of TEntity)(System.Linq.IQueryable(Of TEntity), Falcon.Contracts.Filter)
  name.vb: ApplyWhere(Of TEntity)(IQueryable(Of TEntity), Filter)
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplySort``1(System.Linq.IQueryable{``0},Falcon.Contracts.Sort[])
  commentId: M:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplySort``1(System.Linq.IQueryable{``0},Falcon.Contracts.Sort[])
  id: ApplySort``1(System.Linq.IQueryable{``0},Falcon.Contracts.Sort[])
  isExtensionMethod: true
  parent: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions
  langs:
  - csharp
  - vb
  name: ApplySort<TEntity>(IQueryable<TEntity>, Sort[]?)
  nameWithType: QueryableExtentions.ApplySort<TEntity>(IQueryable<TEntity>, Sort[]?)
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplySort<TEntity>(System.Linq.IQueryable<TEntity>, Falcon.Contracts.Sort[]?)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: ApplySort
    path: ../src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
    startLine: 37
  assemblies:
  - Falcon.Infrastructure.EntityFramework.QueryBuilder
  namespace: Falcon.Infrastructure.EntityFramework.QueryBuilder
  syntax:
    content: public static IQueryable<TEntity> ApplySort<TEntity>(this IQueryable<TEntity> query, Sort[]? sort)
    parameters:
    - id: query
      type: System.Linq.IQueryable{{TEntity}}
    - id: sort
      type: Falcon.Contracts.Sort[]
    typeParameters:
    - id: TEntity
    return:
      type: System.Linq.IQueryable{{TEntity}}
    content.vb: Public Shared Function ApplySort(Of TEntity)(query As IQueryable(Of TEntity), sort As Sort()) As IQueryable(Of TEntity)
  overload: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplySort*
  nameWithType.vb: QueryableExtentions.ApplySort(Of TEntity)(IQueryable(Of TEntity), Sort())
  fullName.vb: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplySort(Of TEntity)(System.Linq.IQueryable(Of TEntity), Falcon.Contracts.Sort())
  name.vb: ApplySort(Of TEntity)(IQueryable(Of TEntity), Sort())
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyPageContext``1(System.Linq.IQueryable{``0},Falcon.Contracts.PageContext)
  commentId: M:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyPageContext``1(System.Linq.IQueryable{``0},Falcon.Contracts.PageContext)
  id: ApplyPageContext``1(System.Linq.IQueryable{``0},Falcon.Contracts.PageContext)
  isExtensionMethod: true
  parent: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions
  langs:
  - csharp
  - vb
  name: ApplyPageContext<TEntity>(IQueryable<TEntity>, PageContext?)
  nameWithType: QueryableExtentions.ApplyPageContext<TEntity>(IQueryable<TEntity>, PageContext?)
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyPageContext<TEntity>(System.Linq.IQueryable<TEntity>, Falcon.Contracts.PageContext?)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: ApplyPageContext
    path: ../src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
    startLine: 56
  assemblies:
  - Falcon.Infrastructure.EntityFramework.QueryBuilder
  namespace: Falcon.Infrastructure.EntityFramework.QueryBuilder
  syntax:
    content: public static IQueryable<TEntity> ApplyPageContext<TEntity>(this IQueryable<TEntity> query, PageContext? pageContext)
    parameters:
    - id: query
      type: System.Linq.IQueryable{{TEntity}}
    - id: pageContext
      type: Falcon.Contracts.PageContext
    typeParameters:
    - id: TEntity
    return:
      type: System.Linq.IQueryable{{TEntity}}
    content.vb: Public Shared Function ApplyPageContext(Of TEntity)(query As IQueryable(Of TEntity), pageContext As PageContext) As IQueryable(Of TEntity)
  overload: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyPageContext*
  nameWithType.vb: QueryableExtentions.ApplyPageContext(Of TEntity)(IQueryable(Of TEntity), PageContext)
  fullName.vb: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyPageContext(Of TEntity)(System.Linq.IQueryable(Of TEntity), Falcon.Contracts.PageContext)
  name.vb: ApplyPageContext(Of TEntity)(IQueryable(Of TEntity), PageContext)
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyProjection``1(System.Linq.IQueryable{``0},System.String[],Falcon.Contracts.Include[])
  commentId: M:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyProjection``1(System.Linq.IQueryable{``0},System.String[],Falcon.Contracts.Include[])
  id: ApplyProjection``1(System.Linq.IQueryable{``0},System.String[],Falcon.Contracts.Include[])
  isExtensionMethod: true
  parent: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions
  langs:
  - csharp
  - vb
  name: ApplyProjection<TEntity>(IQueryable<TEntity>, string[]?, Include[]?)
  nameWithType: QueryableExtentions.ApplyProjection<TEntity>(IQueryable<TEntity>, string[]?, Include[]?)
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyProjection<TEntity>(System.Linq.IQueryable<TEntity>, string[]?, Falcon.Contracts.Include[]?)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: ApplyProjection
    path: ../src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
    startLine: 64
  assemblies:
  - Falcon.Infrastructure.EntityFramework.QueryBuilder
  namespace: Falcon.Infrastructure.EntityFramework.QueryBuilder
  syntax:
    content: public static IQueryable<JObject> ApplyProjection<TEntity>(this IQueryable<TEntity> query, string[]? select, Include[]? includes)
    parameters:
    - id: query
      type: System.Linq.IQueryable{{TEntity}}
    - id: select
      type: System.String[]
    - id: includes
      type: Falcon.Contracts.Include[]
    typeParameters:
    - id: TEntity
    return:
      type: System.Linq.IQueryable{Newtonsoft.Json.Linq.JObject}
    content.vb: Public Shared Function ApplyProjection(Of TEntity)(query As IQueryable(Of TEntity), [select] As String(), includes As Include()) As IQueryable(Of JObject)
  overload: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyProjection*
  nameWithType.vb: QueryableExtentions.ApplyProjection(Of TEntity)(IQueryable(Of TEntity), String(), Include())
  fullName.vb: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyProjection(Of TEntity)(System.Linq.IQueryable(Of TEntity), String(), Falcon.Contracts.Include())
  name.vb: ApplyProjection(Of TEntity)(IQueryable(Of TEntity), String(), Include())
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetProperties(System.Type)
  commentId: M:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetProperties(System.Type)
  id: GetProperties(System.Type)
  parent: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions
  langs:
  - csharp
  - vb
  name: GetProperties(Type)
  nameWithType: QueryableExtentions.GetProperties(Type)
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetProperties(System.Type)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: GetProperties
    path: ../src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
    startLine: 74
  assemblies:
  - Falcon.Infrastructure.EntityFramework.QueryBuilder
  namespace: Falcon.Infrastructure.EntityFramework.QueryBuilder
  syntax:
    content: public static IEnumerable<string> GetProperties(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Shared Function GetProperties(type As Type) As IEnumerable(Of String)
  overload: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetProperties*
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetValueExpression(System.Linq.Expressions.MemberExpression)
  commentId: M:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetValueExpression(System.Linq.Expressions.MemberExpression)
  id: GetValueExpression(System.Linq.Expressions.MemberExpression)
  parent: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions
  langs:
  - csharp
  - vb
  name: GetValueExpression(MemberExpression)
  nameWithType: QueryableExtentions.GetValueExpression(MemberExpression)
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetValueExpression(System.Linq.Expressions.MemberExpression)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: GetValueExpression
    path: ../src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
    startLine: 81
  assemblies:
  - Falcon.Infrastructure.EntityFramework.QueryBuilder
  namespace: Falcon.Infrastructure.EntityFramework.QueryBuilder
  syntax:
    content: public static Expression GetValueExpression(MemberExpression propAccessExpression)
    parameters:
    - id: propAccessExpression
      type: System.Linq.Expressions.MemberExpression
    return:
      type: System.Linq.Expressions.Expression
    content.vb: Public Shared Function GetValueExpression(propAccessExpression As MemberExpression) As Expression
  overload: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetValueExpression*
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetEnumValueExpression(System.Linq.Expressions.MemberExpression)
  commentId: M:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetEnumValueExpression(System.Linq.Expressions.MemberExpression)
  id: GetEnumValueExpression(System.Linq.Expressions.MemberExpression)
  parent: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions
  langs:
  - csharp
  - vb
  name: GetEnumValueExpression(MemberExpression)
  nameWithType: QueryableExtentions.GetEnumValueExpression(MemberExpression)
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetEnumValueExpression(System.Linq.Expressions.MemberExpression)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: GetEnumValueExpression
    path: ../src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
    startLine: 86
  assemblies:
  - Falcon.Infrastructure.EntityFramework.QueryBuilder
  namespace: Falcon.Infrastructure.EntityFramework.QueryBuilder
  syntax:
    content: public static Expression GetEnumValueExpression(MemberExpression propAccessExpression)
    parameters:
    - id: propAccessExpression
      type: System.Linq.Expressions.MemberExpression
    return:
      type: System.Linq.Expressions.Expression
    content.vb: Public Shared Function GetEnumValueExpression(propAccessExpression As MemberExpression) As Expression
  overload: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetEnumValueExpression*
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetJObjectValueExpression(System.Type,System.Linq.Expressions.Expression,System.String[],Falcon.Contracts.Include[])
  commentId: M:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetJObjectValueExpression(System.Type,System.Linq.Expressions.Expression,System.String[],Falcon.Contracts.Include[])
  id: GetJObjectValueExpression(System.Type,System.Linq.Expressions.Expression,System.String[],Falcon.Contracts.Include[])
  parent: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions
  langs:
  - csharp
  - vb
  name: GetJObjectValueExpression(Type, Expression, string[]?, Include[]?)
  nameWithType: QueryableExtentions.GetJObjectValueExpression(Type, Expression, string[]?, Include[]?)
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetJObjectValueExpression(System.Type, System.Linq.Expressions.Expression, string[]?, Falcon.Contracts.Include[]?)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: GetJObjectValueExpression
    path: ../src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
    startLine: 92
  assemblies:
  - Falcon.Infrastructure.EntityFramework.QueryBuilder
  namespace: Falcon.Infrastructure.EntityFramework.QueryBuilder
  syntax:
    content: public static Expression GetJObjectValueExpression(Type elementType, Expression sourceParameter, string[]? select, Include[]? includes)
    parameters:
    - id: elementType
      type: System.Type
    - id: sourceParameter
      type: System.Linq.Expressions.Expression
    - id: select
      type: System.String[]
    - id: includes
      type: Falcon.Contracts.Include[]
    return:
      type: System.Linq.Expressions.Expression
    content.vb: Public Shared Function GetJObjectValueExpression(elementType As Type, sourceParameter As Expression, [select] As String(), includes As Include()) As Expression
  overload: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetJObjectValueExpression*
  nameWithType.vb: QueryableExtentions.GetJObjectValueExpression(Type, Expression, String(), Include())
  fullName.vb: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetJObjectValueExpression(System.Type, System.Linq.Expressions.Expression, String(), Falcon.Contracts.Include())
  name.vb: GetJObjectValueExpression(Type, Expression, String(), Include())
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetCollectionValueExpression(System.Type,System.Linq.Expressions.MemberExpression,System.String[],Falcon.Contracts.Include[])
  commentId: M:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetCollectionValueExpression(System.Type,System.Linq.Expressions.MemberExpression,System.String[],Falcon.Contracts.Include[])
  id: GetCollectionValueExpression(System.Type,System.Linq.Expressions.MemberExpression,System.String[],Falcon.Contracts.Include[])
  parent: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions
  langs:
  - csharp
  - vb
  name: GetCollectionValueExpression(Type, MemberExpression, string[]?, Include[]?)
  nameWithType: QueryableExtentions.GetCollectionValueExpression(Type, MemberExpression, string[]?, Include[]?)
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetCollectionValueExpression(System.Type, System.Linq.Expressions.MemberExpression, string[]?, Falcon.Contracts.Include[]?)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: GetCollectionValueExpression
    path: ../src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
    startLine: 147
  assemblies:
  - Falcon.Infrastructure.EntityFramework.QueryBuilder
  namespace: Falcon.Infrastructure.EntityFramework.QueryBuilder
  syntax:
    content: public static Expression GetCollectionValueExpression(Type elementType, MemberExpression propAccessExpression, string[]? select, Include[]? includes)
    parameters:
    - id: elementType
      type: System.Type
    - id: propAccessExpression
      type: System.Linq.Expressions.MemberExpression
    - id: select
      type: System.String[]
    - id: includes
      type: Falcon.Contracts.Include[]
    return:
      type: System.Linq.Expressions.Expression
    content.vb: Public Shared Function GetCollectionValueExpression(elementType As Type, propAccessExpression As MemberExpression, [select] As String(), includes As Include()) As Expression
  overload: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetCollectionValueExpression*
  nameWithType.vb: QueryableExtentions.GetCollectionValueExpression(Type, MemberExpression, String(), Include())
  fullName.vb: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetCollectionValueExpression(System.Type, System.Linq.Expressions.MemberExpression, String(), Falcon.Contracts.Include())
  name.vb: GetCollectionValueExpression(Type, MemberExpression, String(), Include())
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetPrimitiveMethodCallExpression(System.Type,System.Linq.Expressions.MemberExpression)
  commentId: M:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetPrimitiveMethodCallExpression(System.Type,System.Linq.Expressions.MemberExpression)
  id: GetPrimitiveMethodCallExpression(System.Type,System.Linq.Expressions.MemberExpression)
  parent: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions
  langs:
  - csharp
  - vb
  name: GetPrimitiveMethodCallExpression(Type, MemberExpression)
  nameWithType: QueryableExtentions.GetPrimitiveMethodCallExpression(Type, MemberExpression)
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetPrimitiveMethodCallExpression(System.Type, System.Linq.Expressions.MemberExpression)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: GetPrimitiveMethodCallExpression
    path: ../src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
    startLine: 158
  assemblies:
  - Falcon.Infrastructure.EntityFramework.QueryBuilder
  namespace: Falcon.Infrastructure.EntityFramework.QueryBuilder
  syntax:
    content: public static MethodCallExpression GetPrimitiveMethodCallExpression(Type elementType, MemberExpression propAccessExpression)
    parameters:
    - id: elementType
      type: System.Type
    - id: propAccessExpression
      type: System.Linq.Expressions.MemberExpression
    return:
      type: System.Linq.Expressions.MethodCallExpression
    content.vb: Public Shared Function GetPrimitiveMethodCallExpression(elementType As Type, propAccessExpression As MemberExpression) As MethodCallExpression
  overload: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetPrimitiveMethodCallExpression*
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetObjectMethodCallException(System.Type,System.Linq.Expressions.MemberExpression,System.String[],Falcon.Contracts.Include[])
  commentId: M:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetObjectMethodCallException(System.Type,System.Linq.Expressions.MemberExpression,System.String[],Falcon.Contracts.Include[])
  id: GetObjectMethodCallException(System.Type,System.Linq.Expressions.MemberExpression,System.String[],Falcon.Contracts.Include[])
  parent: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions
  langs:
  - csharp
  - vb
  name: GetObjectMethodCallException(Type, MemberExpression, string[]?, Include[]?)
  nameWithType: QueryableExtentions.GetObjectMethodCallException(Type, MemberExpression, string[]?, Include[]?)
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetObjectMethodCallException(System.Type, System.Linq.Expressions.MemberExpression, string[]?, Falcon.Contracts.Include[]?)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: GetObjectMethodCallException
    path: ../src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
    startLine: 164
  assemblies:
  - Falcon.Infrastructure.EntityFramework.QueryBuilder
  namespace: Falcon.Infrastructure.EntityFramework.QueryBuilder
  syntax:
    content: public static MethodCallExpression GetObjectMethodCallException(Type elementType, MemberExpression propAccessExpression, string[]? select, Include[]? includes)
    parameters:
    - id: elementType
      type: System.Type
    - id: propAccessExpression
      type: System.Linq.Expressions.MemberExpression
    - id: select
      type: System.String[]
    - id: includes
      type: Falcon.Contracts.Include[]
    return:
      type: System.Linq.Expressions.MethodCallExpression
    content.vb: Public Shared Function GetObjectMethodCallException(elementType As Type, propAccessExpression As MemberExpression, [select] As String(), includes As Include()) As MethodCallExpression
  overload: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetObjectMethodCallException*
  nameWithType.vb: QueryableExtentions.GetObjectMethodCallException(Type, MemberExpression, String(), Include())
  fullName.vb: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetObjectMethodCallException(System.Type, System.Linq.Expressions.MemberExpression, String(), Falcon.Contracts.Include())
  name.vb: GetObjectMethodCallException(Type, MemberExpression, String(), Include())
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ToCamelCase(System.String)
  commentId: M:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ToCamelCase(System.String)
  id: ToCamelCase(System.String)
  isExtensionMethod: true
  parent: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions
  langs:
  - csharp
  - vb
  name: ToCamelCase(string)
  nameWithType: QueryableExtentions.ToCamelCase(string)
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ToCamelCase(string)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: ToCamelCase
    path: ../src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
    startLine: 177
  assemblies:
  - Falcon.Infrastructure.EntityFramework.QueryBuilder
  namespace: Falcon.Infrastructure.EntityFramework.QueryBuilder
  syntax:
    content: public static string ToCamelCase(this string str)
    parameters:
    - id: str
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function ToCamelCase(str As String) As String
  overload: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ToCamelCase*
  nameWithType.vb: QueryableExtentions.ToCamelCase(String)
  fullName.vb: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ToCamelCase(String)
  name.vb: ToCamelCase(String)
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplySelector``1(System.Linq.IQueryable{``0},System.String[],Falcon.Contracts.Include[])
  commentId: M:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplySelector``1(System.Linq.IQueryable{``0},System.String[],Falcon.Contracts.Include[])
  id: ApplySelector``1(System.Linq.IQueryable{``0},System.String[],Falcon.Contracts.Include[])
  isExtensionMethod: true
  parent: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions
  langs:
  - csharp
  - vb
  name: ApplySelector<TEntity>(IQueryable<TEntity>, string[]?, Include[]?)
  nameWithType: QueryableExtentions.ApplySelector<TEntity>(IQueryable<TEntity>, string[]?, Include[]?)
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplySelector<TEntity>(System.Linq.IQueryable<TEntity>, string[]?, Falcon.Contracts.Include[]?)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: ApplySelector
    path: ../src/Infrastructure/EntityFramework/QueryBuilder/QueryBuilder/QueryableExtentions.cs
    startLine: 194
  assemblies:
  - Falcon.Infrastructure.EntityFramework.QueryBuilder
  namespace: Falcon.Infrastructure.EntityFramework.QueryBuilder
  syntax:
    content: public static IQueryable<TEntity> ApplySelector<TEntity>(this IQueryable<TEntity> query, string[]? select, Include[]? includes)
    parameters:
    - id: query
      type: System.Linq.IQueryable{{TEntity}}
    - id: select
      type: System.String[]
    - id: includes
      type: Falcon.Contracts.Include[]
    typeParameters:
    - id: TEntity
    return:
      type: System.Linq.IQueryable{{TEntity}}
    content.vb: Public Shared Function ApplySelector(Of TEntity)(query As IQueryable(Of TEntity), [select] As String(), includes As Include()) As IQueryable(Of TEntity)
  overload: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplySelector*
  nameWithType.vb: QueryableExtentions.ApplySelector(Of TEntity)(IQueryable(Of TEntity), String(), Include())
  fullName.vb: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplySelector(Of TEntity)(System.Linq.IQueryable(Of TEntity), String(), Falcon.Contracts.Include())
  name.vb: ApplySelector(Of TEntity)(IQueryable(Of TEntity), String(), Include())
references:
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder
  commentId: N:Falcon.Infrastructure.EntityFramework.QueryBuilder
  href: Falcon.html
  name: Falcon.Infrastructure.EntityFramework.QueryBuilder
  nameWithType: Falcon.Infrastructure.EntityFramework.QueryBuilder
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder
  spec.csharp:
  - uid: Falcon
    name: Falcon
    href: Falcon.html
  - name: .
  - uid: Falcon.Infrastructure
    name: Infrastructure
    href: Falcon.Infrastructure.html
  - name: .
  - uid: Falcon.Infrastructure.EntityFramework
    name: EntityFramework
    href: Falcon.Infrastructure.EntityFramework.html
  - name: .
  - uid: Falcon.Infrastructure.EntityFramework.QueryBuilder
    name: QueryBuilder
    href: Falcon.Infrastructure.EntityFramework.QueryBuilder.html
  spec.vb:
  - uid: Falcon
    name: Falcon
    href: Falcon.html
  - name: .
  - uid: Falcon.Infrastructure
    name: Infrastructure
    href: Falcon.Infrastructure.html
  - name: .
  - uid: Falcon.Infrastructure.EntityFramework
    name: EntityFramework
    href: Falcon.Infrastructure.EntityFramework.html
  - name: .
  - uid: Falcon.Infrastructure.EntityFramework.QueryBuilder
    name: QueryBuilder
    href: Falcon.Infrastructure.EntityFramework.QueryBuilder.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyIncludes*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyIncludes
  href: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.html#Falcon_Infrastructure_EntityFramework_QueryBuilder_QueryableExtentions_ApplyIncludes__1_System_Linq_IQueryable___0__Falcon_Contracts_Include___System_String_
  name: ApplyIncludes
  nameWithType: QueryableExtentions.ApplyIncludes
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyIncludes
- uid: System.Linq.IQueryable{{TEntity}}
  commentId: T:System.Linq.IQueryable{``0}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  name: IQueryable<TEntity>
  nameWithType: IQueryable<TEntity>
  fullName: System.Linq.IQueryable<TEntity>
  nameWithType.vb: IQueryable(Of TEntity)
  fullName.vb: System.Linq.IQueryable(Of TEntity)
  name.vb: IQueryable(Of TEntity)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: Falcon.Contracts.Include[]
  isExternal: true
  href: Falcon.Contracts.Include.html
  name: Include[]
  nameWithType: Include[]
  fullName: Falcon.Contracts.Include[]
  nameWithType.vb: Include()
  fullName.vb: Falcon.Contracts.Include()
  name.vb: Include()
  spec.csharp:
  - uid: Falcon.Contracts.Include
    name: Include
    href: Falcon.Contracts.Include.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Falcon.Contracts.Include
    name: Include
    href: Falcon.Contracts.Include.html
  - name: (
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyInclude*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyInclude
  href: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.html#Falcon_Infrastructure_EntityFramework_QueryBuilder_QueryableExtentions_ApplyInclude__1_System_Linq_IQueryable___0__Falcon_Contracts_Include_System_String_
  name: ApplyInclude
  nameWithType: QueryableExtentions.ApplyInclude
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyInclude
- uid: Falcon.Contracts.Include
  commentId: T:Falcon.Contracts.Include
  parent: Falcon.Contracts
  href: Falcon.Contracts.Include.html
  name: Include
  nameWithType: Include
  fullName: Falcon.Contracts.Include
- uid: Falcon.Contracts
  commentId: N:Falcon.Contracts
  href: Falcon.html
  name: Falcon.Contracts
  nameWithType: Falcon.Contracts
  fullName: Falcon.Contracts
  spec.csharp:
  - uid: Falcon
    name: Falcon
    href: Falcon.html
  - name: .
  - uid: Falcon.Contracts
    name: Contracts
    href: Falcon.Contracts.html
  spec.vb:
  - uid: Falcon
    name: Falcon
    href: Falcon.html
  - name: .
  - uid: Falcon.Contracts
    name: Contracts
    href: Falcon.Contracts.html
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyWhere*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyWhere
  href: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.html#Falcon_Infrastructure_EntityFramework_QueryBuilder_QueryableExtentions_ApplyWhere__1_System_Linq_IQueryable___0__Falcon_Contracts_Filter_
  name: ApplyWhere
  nameWithType: QueryableExtentions.ApplyWhere
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyWhere
- uid: Falcon.Contracts.Filter
  commentId: T:Falcon.Contracts.Filter
  parent: Falcon.Contracts
  href: Falcon.Contracts.Filter.html
  name: Filter
  nameWithType: Filter
  fullName: Falcon.Contracts.Filter
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplySort*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplySort
  href: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.html#Falcon_Infrastructure_EntityFramework_QueryBuilder_QueryableExtentions_ApplySort__1_System_Linq_IQueryable___0__Falcon_Contracts_Sort___
  name: ApplySort
  nameWithType: QueryableExtentions.ApplySort
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplySort
- uid: Falcon.Contracts.Sort[]
  isExternal: true
  href: Falcon.Contracts.Sort.html
  name: Sort[]
  nameWithType: Sort[]
  fullName: Falcon.Contracts.Sort[]
  nameWithType.vb: Sort()
  fullName.vb: Falcon.Contracts.Sort()
  name.vb: Sort()
  spec.csharp:
  - uid: Falcon.Contracts.Sort
    name: Sort
    href: Falcon.Contracts.Sort.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Falcon.Contracts.Sort
    name: Sort
    href: Falcon.Contracts.Sort.html
  - name: (
  - name: )
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyPageContext*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyPageContext
  href: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.html#Falcon_Infrastructure_EntityFramework_QueryBuilder_QueryableExtentions_ApplyPageContext__1_System_Linq_IQueryable___0__Falcon_Contracts_PageContext_
  name: ApplyPageContext
  nameWithType: QueryableExtentions.ApplyPageContext
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyPageContext
- uid: Falcon.Contracts.PageContext
  commentId: T:Falcon.Contracts.PageContext
  parent: Falcon.Contracts
  href: Falcon.Contracts.PageContext.html
  name: PageContext
  nameWithType: PageContext
  fullName: Falcon.Contracts.PageContext
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyProjection*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyProjection
  href: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.html#Falcon_Infrastructure_EntityFramework_QueryBuilder_QueryableExtentions_ApplyProjection__1_System_Linq_IQueryable___0__System_String___Falcon_Contracts_Include___
  name: ApplyProjection
  nameWithType: QueryableExtentions.ApplyProjection
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplyProjection
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.Linq.IQueryable{Newtonsoft.Json.Linq.JObject}
  commentId: T:System.Linq.IQueryable{Newtonsoft.Json.Linq.JObject}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  name: IQueryable<JObject>
  nameWithType: IQueryable<JObject>
  fullName: System.Linq.IQueryable<Newtonsoft.Json.Linq.JObject>
  nameWithType.vb: IQueryable(Of JObject)
  fullName.vb: System.Linq.IQueryable(Of Newtonsoft.Json.Linq.JObject)
  name.vb: IQueryable(Of JObject)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    isExternal: true
  - name: )
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetProperties*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetProperties
  href: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.html#Falcon_Infrastructure_EntityFramework_QueryBuilder_QueryableExtentions_GetProperties_System_Type_
  name: GetProperties
  nameWithType: QueryableExtentions.GetProperties
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetProperties
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetValueExpression*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetValueExpression
  href: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.html#Falcon_Infrastructure_EntityFramework_QueryBuilder_QueryableExtentions_GetValueExpression_System_Linq_Expressions_MemberExpression_
  name: GetValueExpression
  nameWithType: QueryableExtentions.GetValueExpression
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetValueExpression
- uid: System.Linq.Expressions.MemberExpression
  commentId: T:System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.memberexpression
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetEnumValueExpression*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetEnumValueExpression
  href: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.html#Falcon_Infrastructure_EntityFramework_QueryBuilder_QueryableExtentions_GetEnumValueExpression_System_Linq_Expressions_MemberExpression_
  name: GetEnumValueExpression
  nameWithType: QueryableExtentions.GetEnumValueExpression
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetEnumValueExpression
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetJObjectValueExpression*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetJObjectValueExpression
  href: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.html#Falcon_Infrastructure_EntityFramework_QueryBuilder_QueryableExtentions_GetJObjectValueExpression_System_Type_System_Linq_Expressions_Expression_System_String___Falcon_Contracts_Include___
  name: GetJObjectValueExpression
  nameWithType: QueryableExtentions.GetJObjectValueExpression
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetJObjectValueExpression
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetCollectionValueExpression*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetCollectionValueExpression
  href: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.html#Falcon_Infrastructure_EntityFramework_QueryBuilder_QueryableExtentions_GetCollectionValueExpression_System_Type_System_Linq_Expressions_MemberExpression_System_String___Falcon_Contracts_Include___
  name: GetCollectionValueExpression
  nameWithType: QueryableExtentions.GetCollectionValueExpression
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetCollectionValueExpression
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetPrimitiveMethodCallExpression*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetPrimitiveMethodCallExpression
  href: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.html#Falcon_Infrastructure_EntityFramework_QueryBuilder_QueryableExtentions_GetPrimitiveMethodCallExpression_System_Type_System_Linq_Expressions_MemberExpression_
  name: GetPrimitiveMethodCallExpression
  nameWithType: QueryableExtentions.GetPrimitiveMethodCallExpression
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetPrimitiveMethodCallExpression
- uid: System.Linq.Expressions.MethodCallExpression
  commentId: T:System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.methodcallexpression
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetObjectMethodCallException*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetObjectMethodCallException
  href: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.html#Falcon_Infrastructure_EntityFramework_QueryBuilder_QueryableExtentions_GetObjectMethodCallException_System_Type_System_Linq_Expressions_MemberExpression_System_String___Falcon_Contracts_Include___
  name: GetObjectMethodCallException
  nameWithType: QueryableExtentions.GetObjectMethodCallException
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.GetObjectMethodCallException
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ToCamelCase*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ToCamelCase
  href: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.html#Falcon_Infrastructure_EntityFramework_QueryBuilder_QueryableExtentions_ToCamelCase_System_String_
  name: ToCamelCase
  nameWithType: QueryableExtentions.ToCamelCase
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ToCamelCase
- uid: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplySelector*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplySelector
  href: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.html#Falcon_Infrastructure_EntityFramework_QueryBuilder_QueryableExtentions_ApplySelector__1_System_Linq_IQueryable___0__System_String___Falcon_Contracts_Include___
  name: ApplySelector
  nameWithType: QueryableExtentions.ApplySelector
  fullName: Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtentions.ApplySelector
