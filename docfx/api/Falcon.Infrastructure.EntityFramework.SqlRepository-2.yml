### YamlMime:ManagedReference
items:
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2
  commentId: T:Falcon.Infrastructure.EntityFramework.SqlRepository`2
  id: SqlRepository`2
  parent: Falcon.Infrastructure.EntityFramework
  children:
  - Falcon.Infrastructure.EntityFramework.SqlRepository`2.#ctor(System.IServiceProvider,Falcon.Infrastructure.EntityFramework.Contexts.SqlDbContext)
  - Falcon.Infrastructure.EntityFramework.SqlRepository`2.CountAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  - Falcon.Infrastructure.EntityFramework.SqlRepository`2.CreateAsync(Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
  - Falcon.Infrastructure.EntityFramework.SqlRepository`2.CreateManyAsync(Falcon.Contracts.ICommandRequest{`1[]},System.Threading.CancellationToken)
  - Falcon.Infrastructure.EntityFramework.SqlRepository`2.DbContext
  - Falcon.Infrastructure.EntityFramework.SqlRepository`2.DbSet
  - Falcon.Infrastructure.EntityFramework.SqlRepository`2.DeleteAsync(`0,System.Threading.CancellationToken)
  - Falcon.Infrastructure.EntityFramework.SqlRepository`2.FindAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  - Falcon.Infrastructure.EntityFramework.SqlRepository`2.GetAsync(`0,System.Threading.CancellationToken)
  - Falcon.Infrastructure.EntityFramework.SqlRepository`2.GetDbSet
  - Falcon.Infrastructure.EntityFramework.SqlRepository`2.GetDbSet``1
  - Falcon.Infrastructure.EntityFramework.SqlRepository`2.GetManyAsync(`0[],System.Threading.CancellationToken)
  - Falcon.Infrastructure.EntityFramework.SqlRepository`2.PatchAsync(`0,Falcon.Contracts.ICommandRequest{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{`1}},System.Threading.CancellationToken)
  - Falcon.Infrastructure.EntityFramework.SqlRepository`2.QueryAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  - Falcon.Infrastructure.EntityFramework.SqlRepository`2.ReplaceAsync(`0,Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
  - Falcon.Infrastructure.EntityFramework.SqlRepository`2.UpdateAsync(`0,Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: SqlRepository<TId, TEntity>
  nameWithType: SqlRepository<TId, TEntity>
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>
  type: Class
  source:
    remote:
      path: src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: SqlRepository
    path: ../src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
    startLine: 2
  assemblies:
  - Falcon.Infrastructure.EntityFramework
  namespace: Falcon.Infrastructure.EntityFramework
  syntax:
    content: 'public abstract class SqlRepository<TId, TEntity> : IRepository<TId, TEntity> where TEntity : class, IEntity<TId>, new()'
    typeParameters:
    - id: TId
    - id: TEntity
    content.vb: Public MustInherit Class SqlRepository(Of TId, TEntity As {Class, IEntity(Of TId), New}) Implements IRepository(Of TId, TEntity)
  inheritance:
  - System.Object
  derivedClasses:
  - Falcon.Infrastructure.EntityFramework.HomeRepository`2
  - Falcon.Infrastructure.EntityFramework.TenantRepository`2
  implements:
  - Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Falcon.Infrastructure.EntityFramework.SqlRepository`2.Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForCreate``2({TId},System.DateTime)
  - Falcon.Infrastructure.EntityFramework.SqlRepository`2.Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForUpdate``2({TId},System.DateTime)
  nameWithType.vb: SqlRepository(Of TId, TEntity)
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity)
  name.vb: SqlRepository(Of TId, TEntity)
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.DbContext
  commentId: P:Falcon.Infrastructure.EntityFramework.SqlRepository`2.DbContext
  id: DbContext
  parent: Falcon.Infrastructure.EntityFramework.SqlRepository`2
  langs:
  - csharp
  - vb
  name: DbContext
  nameWithType: SqlRepository<TId, TEntity>.DbContext
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.DbContext
  type: Property
  source:
    remote:
      path: src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: DbContext
    path: ../src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
    startLine: 4
  assemblies:
  - Falcon.Infrastructure.EntityFramework
  namespace: Falcon.Infrastructure.EntityFramework
  syntax:
    content: public SqlDbContext DbContext { get; }
    parameters: []
    return:
      type: Falcon.Infrastructure.EntityFramework.Contexts.SqlDbContext
    content.vb: Public ReadOnly Property DbContext As SqlDbContext
  overload: Falcon.Infrastructure.EntityFramework.SqlRepository`2.DbContext*
  nameWithType.vb: SqlRepository(Of TId, TEntity).DbContext
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).DbContext
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.DbSet
  commentId: P:Falcon.Infrastructure.EntityFramework.SqlRepository`2.DbSet
  id: DbSet
  parent: Falcon.Infrastructure.EntityFramework.SqlRepository`2
  langs:
  - csharp
  - vb
  name: DbSet
  nameWithType: SqlRepository<TId, TEntity>.DbSet
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.DbSet
  type: Property
  source:
    remote:
      path: src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: DbSet
    path: ../src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
    startLine: 8
  assemblies:
  - Falcon.Infrastructure.EntityFramework
  namespace: Falcon.Infrastructure.EntityFramework
  syntax:
    content: public virtual DbSet<TEntity> DbSet { get; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
    content.vb: Public Overridable ReadOnly Property DbSet As DbSet(Of TEntity)
  overload: Falcon.Infrastructure.EntityFramework.SqlRepository`2.DbSet*
  nameWithType.vb: SqlRepository(Of TId, TEntity).DbSet
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).DbSet
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.GetDbSet
  commentId: M:Falcon.Infrastructure.EntityFramework.SqlRepository`2.GetDbSet
  id: GetDbSet
  parent: Falcon.Infrastructure.EntityFramework.SqlRepository`2
  langs:
  - csharp
  - vb
  name: GetDbSet()
  nameWithType: SqlRepository<TId, TEntity>.GetDbSet()
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.GetDbSet()
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: GetDbSet
    path: ../src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
    startLine: 15
  assemblies:
  - Falcon.Infrastructure.EntityFramework
  namespace: Falcon.Infrastructure.EntityFramework
  syntax:
    content: public DbSet<TEntity> GetDbSet()
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
    content.vb: Public Function GetDbSet() As DbSet(Of TEntity)
  overload: Falcon.Infrastructure.EntityFramework.SqlRepository`2.GetDbSet*
  nameWithType.vb: SqlRepository(Of TId, TEntity).GetDbSet()
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).GetDbSet()
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.GetDbSet``1
  commentId: M:Falcon.Infrastructure.EntityFramework.SqlRepository`2.GetDbSet``1
  id: GetDbSet``1
  parent: Falcon.Infrastructure.EntityFramework.SqlRepository`2
  langs:
  - csharp
  - vb
  name: GetDbSet<Entity>()
  nameWithType: SqlRepository<TId, TEntity>.GetDbSet<Entity>()
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.GetDbSet<Entity>()
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: GetDbSet
    path: ../src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
    startLine: 19
  assemblies:
  - Falcon.Infrastructure.EntityFramework
  namespace: Falcon.Infrastructure.EntityFramework
  syntax:
    content: 'public DbSet<Entity> GetDbSet<Entity>() where Entity : class, IEntity<TId>, new()'
    typeParameters:
    - id: Entity
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{{Entity}}
    content.vb: Public Function GetDbSet(Of Entity As {Class, IEntity(Of TId), New})() As DbSet(Of Entity)
  overload: Falcon.Infrastructure.EntityFramework.SqlRepository`2.GetDbSet*
  nameWithType.vb: SqlRepository(Of TId, TEntity).GetDbSet(Of Entity)()
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).GetDbSet(Of Entity)()
  name.vb: GetDbSet(Of Entity)()
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.#ctor(System.IServiceProvider,Falcon.Infrastructure.EntityFramework.Contexts.SqlDbContext)
  commentId: M:Falcon.Infrastructure.EntityFramework.SqlRepository`2.#ctor(System.IServiceProvider,Falcon.Infrastructure.EntityFramework.Contexts.SqlDbContext)
  id: '#ctor(System.IServiceProvider,Falcon.Infrastructure.EntityFramework.Contexts.SqlDbContext)'
  parent: Falcon.Infrastructure.EntityFramework.SqlRepository`2
  langs:
  - csharp
  - vb
  name: SqlRepository(IServiceProvider, SqlDbContext)
  nameWithType: SqlRepository<TId, TEntity>.SqlRepository(IServiceProvider, SqlDbContext)
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.SqlRepository(System.IServiceProvider, Falcon.Infrastructure.EntityFramework.Contexts.SqlDbContext)
  type: Constructor
  source:
    remote:
      path: src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: .ctor
    path: ../src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
    startLine: 23
  assemblies:
  - Falcon.Infrastructure.EntityFramework
  namespace: Falcon.Infrastructure.EntityFramework
  syntax:
    content: protected SqlRepository(IServiceProvider serviceProvider, SqlDbContext dbContext)
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
    - id: dbContext
      type: Falcon.Infrastructure.EntityFramework.Contexts.SqlDbContext
    content.vb: Protected Sub New(serviceProvider As IServiceProvider, dbContext As SqlDbContext)
  overload: Falcon.Infrastructure.EntityFramework.SqlRepository`2.#ctor*
  nameWithType.vb: SqlRepository(Of TId, TEntity).New(IServiceProvider, SqlDbContext)
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).New(System.IServiceProvider, Falcon.Infrastructure.EntityFramework.Contexts.SqlDbContext)
  name.vb: New(IServiceProvider, SqlDbContext)
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.QueryAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  commentId: M:Falcon.Infrastructure.EntityFramework.SqlRepository`2.QueryAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  id: QueryAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  parent: Falcon.Infrastructure.EntityFramework.SqlRepository`2
  langs:
  - csharp
  - vb
  name: QueryAsync(IQueryRequest, CancellationToken)
  nameWithType: SqlRepository<TId, TEntity>.QueryAsync(IQueryRequest, CancellationToken)
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.QueryAsync(Falcon.Contracts.IQueryRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: QueryAsync
    path: ../src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
    startLine: 30
  assemblies:
  - Falcon.Infrastructure.EntityFramework
  namespace: Falcon.Infrastructure.EntityFramework
  example: []
  syntax:
    content: public Task<IList<JObject>> QueryAsync(IQueryRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Falcon.Contracts.IQueryRequest
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IList{Newtonsoft.Json.Linq.JObject}}
    content.vb: Public Function QueryAsync(request As IQueryRequest, cancellationToken As CancellationToken = Nothing) As Task(Of IList(Of JObject))
  overload: Falcon.Infrastructure.EntityFramework.SqlRepository`2.QueryAsync*
  implements:
  - Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}.QueryAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  nameWithType.vb: SqlRepository(Of TId, TEntity).QueryAsync(IQueryRequest, CancellationToken)
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).QueryAsync(Falcon.Contracts.IQueryRequest, System.Threading.CancellationToken)
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.FindAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  commentId: M:Falcon.Infrastructure.EntityFramework.SqlRepository`2.FindAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  id: FindAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  parent: Falcon.Infrastructure.EntityFramework.SqlRepository`2
  langs:
  - csharp
  - vb
  name: FindAsync(IQueryRequest, CancellationToken)
  nameWithType: SqlRepository<TId, TEntity>.FindAsync(IQueryRequest, CancellationToken)
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.FindAsync(Falcon.Contracts.IQueryRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: FindAsync
    path: ../src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
    startLine: 39
  assemblies:
  - Falcon.Infrastructure.EntityFramework
  namespace: Falcon.Infrastructure.EntityFramework
  example: []
  syntax:
    content: public Task<IList<TEntity>> FindAsync(IQueryRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Falcon.Contracts.IQueryRequest
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IList{{TEntity}}}
    content.vb: Public Function FindAsync(request As IQueryRequest, cancellationToken As CancellationToken = Nothing) As Task(Of IList(Of TEntity))
  overload: Falcon.Infrastructure.EntityFramework.SqlRepository`2.FindAsync*
  implements:
  - Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}.FindAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  nameWithType.vb: SqlRepository(Of TId, TEntity).FindAsync(IQueryRequest, CancellationToken)
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).FindAsync(Falcon.Contracts.IQueryRequest, System.Threading.CancellationToken)
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.CountAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  commentId: M:Falcon.Infrastructure.EntityFramework.SqlRepository`2.CountAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  id: CountAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  parent: Falcon.Infrastructure.EntityFramework.SqlRepository`2
  langs:
  - csharp
  - vb
  name: CountAsync(IQueryRequest, CancellationToken)
  nameWithType: SqlRepository<TId, TEntity>.CountAsync(IQueryRequest, CancellationToken)
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.CountAsync(Falcon.Contracts.IQueryRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: CountAsync
    path: ../src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
    startLine: 45
  assemblies:
  - Falcon.Infrastructure.EntityFramework
  namespace: Falcon.Infrastructure.EntityFramework
  example: []
  syntax:
    content: public Task<long> CountAsync(IQueryRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Falcon.Contracts.IQueryRequest
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int64}
    content.vb: Public Function CountAsync(request As IQueryRequest, cancellationToken As CancellationToken = Nothing) As Task(Of Long)
  overload: Falcon.Infrastructure.EntityFramework.SqlRepository`2.CountAsync*
  implements:
  - Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}.CountAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  nameWithType.vb: SqlRepository(Of TId, TEntity).CountAsync(IQueryRequest, CancellationToken)
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).CountAsync(Falcon.Contracts.IQueryRequest, System.Threading.CancellationToken)
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.GetAsync(`0,System.Threading.CancellationToken)
  commentId: M:Falcon.Infrastructure.EntityFramework.SqlRepository`2.GetAsync(`0,System.Threading.CancellationToken)
  id: GetAsync(`0,System.Threading.CancellationToken)
  parent: Falcon.Infrastructure.EntityFramework.SqlRepository`2
  langs:
  - csharp
  - vb
  name: GetAsync(TId, CancellationToken)
  nameWithType: SqlRepository<TId, TEntity>.GetAsync(TId, CancellationToken)
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.GetAsync(TId, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: GetAsync
    path: ../src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
    startLine: 50
  assemblies:
  - Falcon.Infrastructure.EntityFramework
  namespace: Falcon.Infrastructure.EntityFramework
  example: []
  syntax:
    content: public Task<TEntity> GetAsync(TId id, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: '{TId}'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{{TEntity}}
    content.vb: Public Function GetAsync(id As TId, cancellationToken As CancellationToken = Nothing) As Task(Of TEntity)
  overload: Falcon.Infrastructure.EntityFramework.SqlRepository`2.GetAsync*
  implements:
  - Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}.GetAsync({TId},System.Threading.CancellationToken)
  nameWithType.vb: SqlRepository(Of TId, TEntity).GetAsync(TId, CancellationToken)
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).GetAsync(TId, System.Threading.CancellationToken)
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.GetManyAsync(`0[],System.Threading.CancellationToken)
  commentId: M:Falcon.Infrastructure.EntityFramework.SqlRepository`2.GetManyAsync(`0[],System.Threading.CancellationToken)
  id: GetManyAsync(`0[],System.Threading.CancellationToken)
  parent: Falcon.Infrastructure.EntityFramework.SqlRepository`2
  langs:
  - csharp
  - vb
  name: GetManyAsync(TId[], CancellationToken)
  nameWithType: SqlRepository<TId, TEntity>.GetManyAsync(TId[], CancellationToken)
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.GetManyAsync(TId[], System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: GetManyAsync
    path: ../src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
    startLine: 61
  assemblies:
  - Falcon.Infrastructure.EntityFramework
  namespace: Falcon.Infrastructure.EntityFramework
  syntax:
    content: public Task<IEnumerable<TEntity>> GetManyAsync(TId[] ids, CancellationToken cancellationToken = default)
    parameters:
    - id: ids
      type: '{TId}[]'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TEntity}}}
    content.vb: Public Function GetManyAsync(ids As TId(), cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of TEntity))
  overload: Falcon.Infrastructure.EntityFramework.SqlRepository`2.GetManyAsync*
  nameWithType.vb: SqlRepository(Of TId, TEntity).GetManyAsync(TId(), CancellationToken)
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).GetManyAsync(TId(), System.Threading.CancellationToken)
  name.vb: GetManyAsync(TId(), CancellationToken)
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.CreateAsync(Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
  commentId: M:Falcon.Infrastructure.EntityFramework.SqlRepository`2.CreateAsync(Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
  id: CreateAsync(Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
  parent: Falcon.Infrastructure.EntityFramework.SqlRepository`2
  langs:
  - csharp
  - vb
  name: CreateAsync(ICommandRequest<TEntity>, CancellationToken)
  nameWithType: SqlRepository<TId, TEntity>.CreateAsync(ICommandRequest<TEntity>, CancellationToken)
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.CreateAsync(Falcon.Contracts.ICommandRequest<TEntity>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: CreateAsync
    path: ../src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
    startLine: 85
  assemblies:
  - Falcon.Infrastructure.EntityFramework
  namespace: Falcon.Infrastructure.EntityFramework
  example: []
  syntax:
    content: public Task<TEntity> CreateAsync(ICommandRequest<TEntity> request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Falcon.Contracts.ICommandRequest{{TEntity}}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{{TEntity}}
    content.vb: Public Function CreateAsync(request As ICommandRequest(Of TEntity), cancellationToken As CancellationToken = Nothing) As Task(Of TEntity)
  overload: Falcon.Infrastructure.EntityFramework.SqlRepository`2.CreateAsync*
  implements:
  - Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}.CreateAsync(Falcon.Contracts.ICommandRequest{{TEntity}},System.Threading.CancellationToken)
  nameWithType.vb: SqlRepository(Of TId, TEntity).CreateAsync(ICommandRequest(Of TEntity), CancellationToken)
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).CreateAsync(Falcon.Contracts.ICommandRequest(Of TEntity), System.Threading.CancellationToken)
  name.vb: CreateAsync(ICommandRequest(Of TEntity), CancellationToken)
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.CreateManyAsync(Falcon.Contracts.ICommandRequest{`1[]},System.Threading.CancellationToken)
  commentId: M:Falcon.Infrastructure.EntityFramework.SqlRepository`2.CreateManyAsync(Falcon.Contracts.ICommandRequest{`1[]},System.Threading.CancellationToken)
  id: CreateManyAsync(Falcon.Contracts.ICommandRequest{`1[]},System.Threading.CancellationToken)
  parent: Falcon.Infrastructure.EntityFramework.SqlRepository`2
  langs:
  - csharp
  - vb
  name: CreateManyAsync(ICommandRequest<TEntity[]>, CancellationToken)
  nameWithType: SqlRepository<TId, TEntity>.CreateManyAsync(ICommandRequest<TEntity[]>, CancellationToken)
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.CreateManyAsync(Falcon.Contracts.ICommandRequest<TEntity[]>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: CreateManyAsync
    path: ../src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
    startLine: 93
  assemblies:
  - Falcon.Infrastructure.EntityFramework
  namespace: Falcon.Infrastructure.EntityFramework
  syntax:
    content: public Task<IEnumerable<TEntity>> CreateManyAsync(ICommandRequest<TEntity[]> request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Falcon.Contracts.ICommandRequest{{TEntity}[]}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TEntity}}}
    content.vb: Public Function CreateManyAsync(request As ICommandRequest(Of TEntity()), cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of TEntity))
  overload: Falcon.Infrastructure.EntityFramework.SqlRepository`2.CreateManyAsync*
  nameWithType.vb: SqlRepository(Of TId, TEntity).CreateManyAsync(ICommandRequest(Of TEntity()), CancellationToken)
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).CreateManyAsync(Falcon.Contracts.ICommandRequest(Of TEntity()), System.Threading.CancellationToken)
  name.vb: CreateManyAsync(ICommandRequest(Of TEntity()), CancellationToken)
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.UpdateAsync(`0,Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
  commentId: M:Falcon.Infrastructure.EntityFramework.SqlRepository`2.UpdateAsync(`0,Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
  id: UpdateAsync(`0,Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
  parent: Falcon.Infrastructure.EntityFramework.SqlRepository`2
  langs:
  - csharp
  - vb
  name: UpdateAsync(TId, ICommandRequest<TEntity>, CancellationToken)
  nameWithType: SqlRepository<TId, TEntity>.UpdateAsync(TId, ICommandRequest<TEntity>, CancellationToken)
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.UpdateAsync(TId, Falcon.Contracts.ICommandRequest<TEntity>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: UpdateAsync
    path: ../src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
    startLine: 104
  assemblies:
  - Falcon.Infrastructure.EntityFramework
  namespace: Falcon.Infrastructure.EntityFramework
  example: []
  syntax:
    content: public Task<TEntity> UpdateAsync(TId id, ICommandRequest<TEntity> request, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: '{TId}'
    - id: request
      type: Falcon.Contracts.ICommandRequest{{TEntity}}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{{TEntity}}
    content.vb: Public Function UpdateAsync(id As TId, request As ICommandRequest(Of TEntity), cancellationToken As CancellationToken = Nothing) As Task(Of TEntity)
  overload: Falcon.Infrastructure.EntityFramework.SqlRepository`2.UpdateAsync*
  implements:
  - Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}.UpdateAsync({TId},Falcon.Contracts.ICommandRequest{{TEntity}},System.Threading.CancellationToken)
  nameWithType.vb: SqlRepository(Of TId, TEntity).UpdateAsync(TId, ICommandRequest(Of TEntity), CancellationToken)
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).UpdateAsync(TId, Falcon.Contracts.ICommandRequest(Of TEntity), System.Threading.CancellationToken)
  name.vb: UpdateAsync(TId, ICommandRequest(Of TEntity), CancellationToken)
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.DeleteAsync(`0,System.Threading.CancellationToken)
  commentId: M:Falcon.Infrastructure.EntityFramework.SqlRepository`2.DeleteAsync(`0,System.Threading.CancellationToken)
  id: DeleteAsync(`0,System.Threading.CancellationToken)
  parent: Falcon.Infrastructure.EntityFramework.SqlRepository`2
  langs:
  - csharp
  - vb
  name: DeleteAsync(TId, CancellationToken)
  nameWithType: SqlRepository<TId, TEntity>.DeleteAsync(TId, CancellationToken)
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.DeleteAsync(TId, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: DeleteAsync
    path: ../src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
    startLine: 127
  assemblies:
  - Falcon.Infrastructure.EntityFramework
  namespace: Falcon.Infrastructure.EntityFramework
  example: []
  syntax:
    content: public Task<TEntity> DeleteAsync(TId id, CancellationToken cancellationToken)
    parameters:
    - id: id
      type: '{TId}'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{{TEntity}}
    content.vb: Public Function DeleteAsync(id As TId, cancellationToken As CancellationToken) As Task(Of TEntity)
  overload: Falcon.Infrastructure.EntityFramework.SqlRepository`2.DeleteAsync*
  implements:
  - Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}.DeleteAsync({TId},System.Threading.CancellationToken)
  nameWithType.vb: SqlRepository(Of TId, TEntity).DeleteAsync(TId, CancellationToken)
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).DeleteAsync(TId, System.Threading.CancellationToken)
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.PatchAsync(`0,Falcon.Contracts.ICommandRequest{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{`1}},System.Threading.CancellationToken)
  commentId: M:Falcon.Infrastructure.EntityFramework.SqlRepository`2.PatchAsync(`0,Falcon.Contracts.ICommandRequest{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{`1}},System.Threading.CancellationToken)
  id: PatchAsync(`0,Falcon.Contracts.ICommandRequest{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{`1}},System.Threading.CancellationToken)
  parent: Falcon.Infrastructure.EntityFramework.SqlRepository`2
  langs:
  - csharp
  - vb
  name: PatchAsync(TId, ICommandRequest<JsonPatchDocument<TEntity>>, CancellationToken)
  nameWithType: SqlRepository<TId, TEntity>.PatchAsync(TId, ICommandRequest<JsonPatchDocument<TEntity>>, CancellationToken)
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.PatchAsync(TId, Falcon.Contracts.ICommandRequest<Microsoft.AspNetCore.JsonPatch.JsonPatchDocument<TEntity>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: PatchAsync
    path: ../src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
    startLine: 133
  assemblies:
  - Falcon.Infrastructure.EntityFramework
  namespace: Falcon.Infrastructure.EntityFramework
  example: []
  syntax:
    content: public Task<TEntity> PatchAsync(TId id, ICommandRequest<JsonPatchDocument<TEntity>> request, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: '{TId}'
    - id: request
      type: Falcon.Contracts.ICommandRequest{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{{TEntity}}}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{{TEntity}}
    content.vb: Public Function PatchAsync(id As TId, request As ICommandRequest(Of JsonPatchDocument(Of TEntity)), cancellationToken As CancellationToken = Nothing) As Task(Of TEntity)
  overload: Falcon.Infrastructure.EntityFramework.SqlRepository`2.PatchAsync*
  implements:
  - Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}.PatchAsync({TId},Falcon.Contracts.ICommandRequest{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{{TEntity}}},System.Threading.CancellationToken)
  nameWithType.vb: SqlRepository(Of TId, TEntity).PatchAsync(TId, ICommandRequest(Of JsonPatchDocument(Of TEntity)), CancellationToken)
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).PatchAsync(TId, Falcon.Contracts.ICommandRequest(Of Microsoft.AspNetCore.JsonPatch.JsonPatchDocument(Of TEntity)), System.Threading.CancellationToken)
  name.vb: PatchAsync(TId, ICommandRequest(Of JsonPatchDocument(Of TEntity)), CancellationToken)
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.ReplaceAsync(`0,Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
  commentId: M:Falcon.Infrastructure.EntityFramework.SqlRepository`2.ReplaceAsync(`0,Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
  id: ReplaceAsync(`0,Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
  parent: Falcon.Infrastructure.EntityFramework.SqlRepository`2
  langs:
  - csharp
  - vb
  name: ReplaceAsync(TId, ICommandRequest<TEntity>, CancellationToken)
  nameWithType: SqlRepository<TId, TEntity>.ReplaceAsync(TId, ICommandRequest<TEntity>, CancellationToken)
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.ReplaceAsync(TId, Falcon.Contracts.ICommandRequest<TEntity>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
      branch: feature/development
      repo: https://github.com/natarajanganapathi/Falcon.git
    id: ReplaceAsync
    path: ../src/Infrastructure/EntityFramework/EntityFramework/Repository/SqlRepository.cs
    startLine: 140
  assemblies:
  - Falcon.Infrastructure.EntityFramework
  namespace: Falcon.Infrastructure.EntityFramework
  syntax:
    content: public Task<TEntity> ReplaceAsync(TId id, ICommandRequest<TEntity> request, CancellationToken cancellationToken)
    parameters:
    - id: id
      type: '{TId}'
    - id: request
      type: Falcon.Contracts.ICommandRequest{{TEntity}}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{{TEntity}}
    content.vb: Public Function ReplaceAsync(id As TId, request As ICommandRequest(Of TEntity), cancellationToken As CancellationToken) As Task(Of TEntity)
  overload: Falcon.Infrastructure.EntityFramework.SqlRepository`2.ReplaceAsync*
  nameWithType.vb: SqlRepository(Of TId, TEntity).ReplaceAsync(TId, ICommandRequest(Of TEntity), CancellationToken)
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).ReplaceAsync(TId, Falcon.Contracts.ICommandRequest(Of TEntity), System.Threading.CancellationToken)
  name.vb: ReplaceAsync(TId, ICommandRequest(Of TEntity), CancellationToken)
references:
- uid: Falcon.Infrastructure.EntityFramework
  commentId: N:Falcon.Infrastructure.EntityFramework
  href: Falcon.html
  name: Falcon.Infrastructure.EntityFramework
  nameWithType: Falcon.Infrastructure.EntityFramework
  fullName: Falcon.Infrastructure.EntityFramework
  spec.csharp:
  - uid: Falcon
    name: Falcon
    href: Falcon.html
  - name: .
  - uid: Falcon.Infrastructure
    name: Infrastructure
    href: Falcon.Infrastructure.html
  - name: .
  - uid: Falcon.Infrastructure.EntityFramework
    name: EntityFramework
    href: Falcon.Infrastructure.EntityFramework.html
  spec.vb:
  - uid: Falcon
    name: Falcon
    href: Falcon.html
  - name: .
  - uid: Falcon.Infrastructure
    name: Infrastructure
    href: Falcon.Infrastructure.html
  - name: .
  - uid: Falcon.Infrastructure.EntityFramework
    name: EntityFramework
    href: Falcon.Infrastructure.EntityFramework.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}
  commentId: T:Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{``0,``1}
  parent: Falcon.Domain.Abstractions.Interfaces.Repositories
  definition: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2
  href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html
  name: IRepository<TId, TEntity>
  nameWithType: IRepository<TId, TEntity>
  fullName: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository<TId, TEntity>
  nameWithType.vb: IRepository(Of TId, TEntity)
  fullName.vb: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository(Of TId, TEntity)
  name.vb: IRepository(Of TId, TEntity)
  spec.csharp:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2
    name: IRepository
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html
  - name: <
  - name: TId
  - name: ','
  - name: " "
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2
    name: IRepository
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TId
  - name: ','
  - name: " "
  - name: TEntity
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForCreate``2({TId},System.DateTime)
  commentId: M:Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForCreate``2(``1,``0,System.DateTime)
  parent: Falcon.Infrastructure.Abstractions.EntityAuditExtentions
  definition: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForCreate``2(``1,``0,System.DateTime)
  href: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.html#Falcon_Infrastructure_Abstractions_EntityAuditExtentions_AuditForCreate__2___1___0_System_DateTime_
  name: AuditForCreate<TId, SqlRepository<TId, TEntity>>(SqlRepository<TId, TEntity>, TId, DateTime)
  nameWithType: EntityAuditExtentions.AuditForCreate<TId, SqlRepository<TId, TEntity>>(SqlRepository<TId, TEntity>, TId, DateTime)
  fullName: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForCreate<TId, Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>>(Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>, TId, System.DateTime)
  nameWithType.vb: EntityAuditExtentions.AuditForCreate(Of TId, SqlRepository(Of TId, TEntity))(SqlRepository(Of TId, TEntity), TId, Date)
  fullName.vb: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForCreate(Of TId, Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity))(Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity), TId, Date)
  name.vb: AuditForCreate(Of TId, SqlRepository(Of TId, TEntity))(SqlRepository(Of TId, TEntity), TId, Date)
  spec.csharp:
  - uid: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForCreate``2(Falcon.Infrastructure.EntityFramework.SqlRepository{`0,`1},``0,System.DateTime)
    name: AuditForCreate
    href: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.html#Falcon_Infrastructure_Abstractions_EntityAuditExtentions_AuditForCreate__2___1___0_System_DateTime_
  - name: <
  - name: TId
  - name: ','
  - name: " "
  - uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2
    name: SqlRepository
    href: Falcon.Infrastructure.EntityFramework.SqlRepository-2.html
  - name: <
  - name: TId
  - name: ','
  - name: " "
  - name: TEntity
  - name: '>'
  - name: '>'
  - name: (
  - uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2
    name: SqlRepository
    href: Falcon.Infrastructure.EntityFramework.SqlRepository-2.html
  - name: <
  - name: TId
  - name: ','
  - name: " "
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - name: TId
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: )
  spec.vb:
  - uid: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForCreate``2(Falcon.Infrastructure.EntityFramework.SqlRepository{`0,`1},``0,System.DateTime)
    name: AuditForCreate
    href: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.html#Falcon_Infrastructure_Abstractions_EntityAuditExtentions_AuditForCreate__2___1___0_System_DateTime_
  - name: (
  - name: Of
  - name: " "
  - name: TId
  - name: ','
  - name: " "
  - uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2
    name: SqlRepository
    href: Falcon.Infrastructure.EntityFramework.SqlRepository-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TId
  - name: ','
  - name: " "
  - name: TEntity
  - name: )
  - name: )
  - name: (
  - uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2
    name: SqlRepository
    href: Falcon.Infrastructure.EntityFramework.SqlRepository-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TId
  - name: ','
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - name: TId
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: )
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForUpdate``2({TId},System.DateTime)
  commentId: M:Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForUpdate``2(``1,``0,System.DateTime)
  parent: Falcon.Infrastructure.Abstractions.EntityAuditExtentions
  definition: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForUpdate``2(``1,``0,System.DateTime)
  href: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.html#Falcon_Infrastructure_Abstractions_EntityAuditExtentions_AuditForUpdate__2___1___0_System_DateTime_
  name: AuditForUpdate<TId, SqlRepository<TId, TEntity>>(SqlRepository<TId, TEntity>, TId, DateTime)
  nameWithType: EntityAuditExtentions.AuditForUpdate<TId, SqlRepository<TId, TEntity>>(SqlRepository<TId, TEntity>, TId, DateTime)
  fullName: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForUpdate<TId, Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>>(Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>, TId, System.DateTime)
  nameWithType.vb: EntityAuditExtentions.AuditForUpdate(Of TId, SqlRepository(Of TId, TEntity))(SqlRepository(Of TId, TEntity), TId, Date)
  fullName.vb: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForUpdate(Of TId, Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity))(Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity), TId, Date)
  name.vb: AuditForUpdate(Of TId, SqlRepository(Of TId, TEntity))(SqlRepository(Of TId, TEntity), TId, Date)
  spec.csharp:
  - uid: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForUpdate``2(Falcon.Infrastructure.EntityFramework.SqlRepository{`0,`1},``0,System.DateTime)
    name: AuditForUpdate
    href: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.html#Falcon_Infrastructure_Abstractions_EntityAuditExtentions_AuditForUpdate__2___1___0_System_DateTime_
  - name: <
  - name: TId
  - name: ','
  - name: " "
  - uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2
    name: SqlRepository
    href: Falcon.Infrastructure.EntityFramework.SqlRepository-2.html
  - name: <
  - name: TId
  - name: ','
  - name: " "
  - name: TEntity
  - name: '>'
  - name: '>'
  - name: (
  - uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2
    name: SqlRepository
    href: Falcon.Infrastructure.EntityFramework.SqlRepository-2.html
  - name: <
  - name: TId
  - name: ','
  - name: " "
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - name: TId
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: )
  spec.vb:
  - uid: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForUpdate``2(Falcon.Infrastructure.EntityFramework.SqlRepository{`0,`1},``0,System.DateTime)
    name: AuditForUpdate
    href: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.html#Falcon_Infrastructure_Abstractions_EntityAuditExtentions_AuditForUpdate__2___1___0_System_DateTime_
  - name: (
  - name: Of
  - name: " "
  - name: TId
  - name: ','
  - name: " "
  - uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2
    name: SqlRepository
    href: Falcon.Infrastructure.EntityFramework.SqlRepository-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TId
  - name: ','
  - name: " "
  - name: TEntity
  - name: )
  - name: )
  - name: (
  - uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2
    name: SqlRepository
    href: Falcon.Infrastructure.EntityFramework.SqlRepository-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TId
  - name: ','
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - name: TId
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2
  commentId: T:Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2
  href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html
  name: IRepository<TId, TEntity>
  nameWithType: IRepository<TId, TEntity>
  fullName: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository<TId, TEntity>
  nameWithType.vb: IRepository(Of TId, TEntity)
  fullName.vb: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository(Of TId, TEntity)
  name.vb: IRepository(Of TId, TEntity)
  spec.csharp:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2
    name: IRepository
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html
  - name: <
  - name: TId
  - name: ','
  - name: " "
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2
    name: IRepository
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TId
  - name: ','
  - name: " "
  - name: TEntity
  - name: )
- uid: Falcon.Domain.Abstractions.Interfaces.Repositories
  commentId: N:Falcon.Domain.Abstractions.Interfaces.Repositories
  href: Falcon.html
  name: Falcon.Domain.Abstractions.Interfaces.Repositories
  nameWithType: Falcon.Domain.Abstractions.Interfaces.Repositories
  fullName: Falcon.Domain.Abstractions.Interfaces.Repositories
  spec.csharp:
  - uid: Falcon
    name: Falcon
    href: Falcon.html
  - name: .
  - uid: Falcon.Domain
    name: Domain
    href: Falcon.Domain.html
  - name: .
  - uid: Falcon.Domain.Abstractions
    name: Abstractions
    href: Falcon.Domain.Abstractions.html
  - name: .
  - uid: Falcon.Domain.Abstractions.Interfaces
    name: Interfaces
    href: Falcon.Domain.Abstractions.Interfaces.html
  - name: .
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories
    name: Repositories
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.html
  spec.vb:
  - uid: Falcon
    name: Falcon
    href: Falcon.html
  - name: .
  - uid: Falcon.Domain
    name: Domain
    href: Falcon.Domain.html
  - name: .
  - uid: Falcon.Domain.Abstractions
    name: Abstractions
    href: Falcon.Domain.Abstractions.html
  - name: .
  - uid: Falcon.Domain.Abstractions.Interfaces
    name: Interfaces
    href: Falcon.Domain.Abstractions.Interfaces.html
  - name: .
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories
    name: Repositories
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.html
- uid: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForCreate``2(``1,``0,System.DateTime)
  commentId: M:Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForCreate``2(``1,``0,System.DateTime)
  isExternal: true
  href: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.html#Falcon_Infrastructure_Abstractions_EntityAuditExtentions_AuditForCreate__2___1___0_System_DateTime_
  name: AuditForCreate<TId, TEntity>(TEntity, TId, DateTime)
  nameWithType: EntityAuditExtentions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime)
  fullName: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForCreate<TId, TEntity>(TEntity, TId, System.DateTime)
  nameWithType.vb: EntityAuditExtentions.AuditForCreate(Of TId, TEntity)(TEntity, TId, Date)
  fullName.vb: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForCreate(Of TId, TEntity)(TEntity, TId, Date)
  name.vb: AuditForCreate(Of TId, TEntity)(TEntity, TId, Date)
  spec.csharp:
  - uid: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForCreate``2(``1,``0,System.DateTime)
    name: AuditForCreate
    href: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.html#Falcon_Infrastructure_Abstractions_EntityAuditExtentions_AuditForCreate__2___1___0_System_DateTime_
  - name: <
  - name: TId
  - name: ','
  - name: " "
  - name: TEntity
  - name: '>'
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - name: TId
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: )
  spec.vb:
  - uid: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForCreate``2(``1,``0,System.DateTime)
    name: AuditForCreate
    href: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.html#Falcon_Infrastructure_Abstractions_EntityAuditExtentions_AuditForCreate__2___1___0_System_DateTime_
  - name: (
  - name: Of
  - name: " "
  - name: TId
  - name: ','
  - name: " "
  - name: TEntity
  - name: )
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - name: TId
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: )
- uid: Falcon.Infrastructure.Abstractions.EntityAuditExtentions
  commentId: T:Falcon.Infrastructure.Abstractions.EntityAuditExtentions
  parent: Falcon.Infrastructure.Abstractions
  href: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.html
  name: EntityAuditExtentions
  nameWithType: EntityAuditExtentions
  fullName: Falcon.Infrastructure.Abstractions.EntityAuditExtentions
- uid: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForUpdate``2(``1,``0,System.DateTime)
  commentId: M:Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForUpdate``2(``1,``0,System.DateTime)
  isExternal: true
  href: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.html#Falcon_Infrastructure_Abstractions_EntityAuditExtentions_AuditForUpdate__2___1___0_System_DateTime_
  name: AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime)
  nameWithType: EntityAuditExtentions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime)
  fullName: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForUpdate<TId, TEntity>(TEntity, TId, System.DateTime)
  nameWithType.vb: EntityAuditExtentions.AuditForUpdate(Of TId, TEntity)(TEntity, TId, Date)
  fullName.vb: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForUpdate(Of TId, TEntity)(TEntity, TId, Date)
  name.vb: AuditForUpdate(Of TId, TEntity)(TEntity, TId, Date)
  spec.csharp:
  - uid: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForUpdate``2(``1,``0,System.DateTime)
    name: AuditForUpdate
    href: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.html#Falcon_Infrastructure_Abstractions_EntityAuditExtentions_AuditForUpdate__2___1___0_System_DateTime_
  - name: <
  - name: TId
  - name: ','
  - name: " "
  - name: TEntity
  - name: '>'
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - name: TId
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: )
  spec.vb:
  - uid: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.AuditForUpdate``2(``1,``0,System.DateTime)
    name: AuditForUpdate
    href: Falcon.Infrastructure.Abstractions.EntityAuditExtentions.html#Falcon_Infrastructure_Abstractions_EntityAuditExtentions_AuditForUpdate__2___1___0_System_DateTime_
  - name: (
  - name: Of
  - name: " "
  - name: TId
  - name: ','
  - name: " "
  - name: TEntity
  - name: )
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - name: TId
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: )
- uid: Falcon.Infrastructure.Abstractions
  commentId: N:Falcon.Infrastructure.Abstractions
  href: Falcon.html
  name: Falcon.Infrastructure.Abstractions
  nameWithType: Falcon.Infrastructure.Abstractions
  fullName: Falcon.Infrastructure.Abstractions
  spec.csharp:
  - uid: Falcon
    name: Falcon
    href: Falcon.html
  - name: .
  - uid: Falcon.Infrastructure
    name: Infrastructure
    href: Falcon.Infrastructure.html
  - name: .
  - uid: Falcon.Infrastructure.Abstractions
    name: Abstractions
    href: Falcon.Infrastructure.Abstractions.html
  spec.vb:
  - uid: Falcon
    name: Falcon
    href: Falcon.html
  - name: .
  - uid: Falcon.Infrastructure
    name: Infrastructure
    href: Falcon.Infrastructure.html
  - name: .
  - uid: Falcon.Infrastructure.Abstractions
    name: Abstractions
    href: Falcon.Infrastructure.Abstractions.html
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.DbContext*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.SqlRepository`2.DbContext
  href: Falcon.Infrastructure.EntityFramework.SqlRepository-2.html#Falcon_Infrastructure_EntityFramework_SqlRepository_2_DbContext
  name: DbContext
  nameWithType: SqlRepository<TId, TEntity>.DbContext
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.DbContext
  nameWithType.vb: SqlRepository(Of TId, TEntity).DbContext
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).DbContext
- uid: Falcon.Infrastructure.EntityFramework.Contexts.SqlDbContext
  commentId: T:Falcon.Infrastructure.EntityFramework.Contexts.SqlDbContext
  parent: Falcon.Infrastructure.EntityFramework.Contexts
  href: Falcon.Infrastructure.EntityFramework.Contexts.SqlDbContext.html
  name: SqlDbContext
  nameWithType: SqlDbContext
  fullName: Falcon.Infrastructure.EntityFramework.Contexts.SqlDbContext
- uid: Falcon.Infrastructure.EntityFramework.Contexts
  commentId: N:Falcon.Infrastructure.EntityFramework.Contexts
  href: Falcon.html
  name: Falcon.Infrastructure.EntityFramework.Contexts
  nameWithType: Falcon.Infrastructure.EntityFramework.Contexts
  fullName: Falcon.Infrastructure.EntityFramework.Contexts
  spec.csharp:
  - uid: Falcon
    name: Falcon
    href: Falcon.html
  - name: .
  - uid: Falcon.Infrastructure
    name: Infrastructure
    href: Falcon.Infrastructure.html
  - name: .
  - uid: Falcon.Infrastructure.EntityFramework
    name: EntityFramework
    href: Falcon.Infrastructure.EntityFramework.html
  - name: .
  - uid: Falcon.Infrastructure.EntityFramework.Contexts
    name: Contexts
    href: Falcon.Infrastructure.EntityFramework.Contexts.html
  spec.vb:
  - uid: Falcon
    name: Falcon
    href: Falcon.html
  - name: .
  - uid: Falcon.Infrastructure
    name: Infrastructure
    href: Falcon.Infrastructure.html
  - name: .
  - uid: Falcon.Infrastructure.EntityFramework
    name: EntityFramework
    href: Falcon.Infrastructure.EntityFramework.html
  - name: .
  - uid: Falcon.Infrastructure.EntityFramework.Contexts
    name: Contexts
    href: Falcon.Infrastructure.EntityFramework.Contexts.html
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.DbSet*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.SqlRepository`2.DbSet
  href: Falcon.Infrastructure.EntityFramework.SqlRepository-2.html#Falcon_Infrastructure_EntityFramework_SqlRepository_2_DbSet
  name: DbSet
  nameWithType: SqlRepository<TId, TEntity>.DbSet
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.DbSet
  nameWithType.vb: SqlRepository(Of TId, TEntity).DbSet
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).DbSet
- uid: Microsoft.EntityFrameworkCore.DbSet{{TEntity}}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{`1}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1
  name: DbSet<TEntity>
  nameWithType: DbSet<TEntity>
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>
  nameWithType.vb: DbSet(Of TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity)
  name.vb: DbSet(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1
  commentId: T:Microsoft.EntityFrameworkCore.DbSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1
  name: DbSet<TEntity>
  nameWithType: DbSet<TEntity>
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>
  nameWithType.vb: DbSet(Of TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity)
  name.vb: DbSet(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.GetDbSet*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.SqlRepository`2.GetDbSet
  href: Falcon.Infrastructure.EntityFramework.SqlRepository-2.html#Falcon_Infrastructure_EntityFramework_SqlRepository_2_GetDbSet
  name: GetDbSet
  nameWithType: SqlRepository<TId, TEntity>.GetDbSet
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.GetDbSet
  nameWithType.vb: SqlRepository(Of TId, TEntity).GetDbSet
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).GetDbSet
- uid: Microsoft.EntityFrameworkCore.DbSet{{Entity}}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{``0}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1
  name: DbSet<Entity>
  nameWithType: DbSet<Entity>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Entity>
  nameWithType.vb: DbSet(Of Entity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Entity)
  name.vb: DbSet(Of Entity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1
  - name: <
  - name: Entity
  - name: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1
  - name: (
  - name: Of
  - name: " "
  - name: Entity
  - name: )
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.#ctor*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.SqlRepository`2.#ctor
  href: Falcon.Infrastructure.EntityFramework.SqlRepository-2.html#Falcon_Infrastructure_EntityFramework_SqlRepository_2__ctor_System_IServiceProvider_Falcon_Infrastructure_EntityFramework_Contexts_SqlDbContext_
  name: SqlRepository
  nameWithType: SqlRepository<TId, TEntity>.SqlRepository
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.SqlRepository
  nameWithType.vb: SqlRepository(Of TId, TEntity).New
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).New
  name.vb: New
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.QueryAsync*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.SqlRepository`2.QueryAsync
  href: Falcon.Infrastructure.EntityFramework.SqlRepository-2.html#Falcon_Infrastructure_EntityFramework_SqlRepository_2_QueryAsync_Falcon_Contracts_IQueryRequest_System_Threading_CancellationToken_
  name: QueryAsync
  nameWithType: SqlRepository<TId, TEntity>.QueryAsync
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.QueryAsync
  nameWithType.vb: SqlRepository(Of TId, TEntity).QueryAsync
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).QueryAsync
- uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}.QueryAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  commentId: M:Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{`0,`1}.QueryAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  parent: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}
  definition: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.QueryAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_QueryAsync_Falcon_Contracts_IQueryRequest_System_Threading_CancellationToken_
  name: QueryAsync(IQueryRequest, CancellationToken)
  nameWithType: IRepository<TId, TEntity>.QueryAsync(IQueryRequest, CancellationToken)
  fullName: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository<TId, TEntity>.QueryAsync(Falcon.Contracts.IQueryRequest, System.Threading.CancellationToken)
  nameWithType.vb: IRepository(Of TId, TEntity).QueryAsync(IQueryRequest, CancellationToken)
  fullName.vb: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository(Of TId, TEntity).QueryAsync(Falcon.Contracts.IQueryRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{`0,`1}.QueryAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
    name: QueryAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_QueryAsync_Falcon_Contracts_IQueryRequest_System_Threading_CancellationToken_
  - name: (
  - uid: Falcon.Contracts.IQueryRequest
    name: IQueryRequest
    href: Falcon.Contracts.IQueryRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{`0,`1}.QueryAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
    name: QueryAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_QueryAsync_Falcon_Contracts_IQueryRequest_System_Threading_CancellationToken_
  - name: (
  - uid: Falcon.Contracts.IQueryRequest
    name: IQueryRequest
    href: Falcon.Contracts.IQueryRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Falcon.Contracts.IQueryRequest
  commentId: T:Falcon.Contracts.IQueryRequest
  parent: Falcon.Contracts
  href: Falcon.Contracts.IQueryRequest.html
  name: IQueryRequest
  nameWithType: IQueryRequest
  fullName: Falcon.Contracts.IQueryRequest
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IList{Newtonsoft.Json.Linq.JObject}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IList{Newtonsoft.Json.Linq.JObject}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IList<JObject>>
  nameWithType: Task<IList<JObject>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IList<Newtonsoft.Json.Linq.JObject>>
  nameWithType.vb: Task(Of IList(Of JObject))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IList(Of Newtonsoft.Json.Linq.JObject))
  name.vb: Task(Of IList(Of JObject))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    isExternal: true
  - name: )
  - name: )
- uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.QueryAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  commentId: M:Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.QueryAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  isExternal: true
  href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_QueryAsync_Falcon_Contracts_IQueryRequest_System_Threading_CancellationToken_
  name: QueryAsync(IQueryRequest, CancellationToken)
  nameWithType: IRepository<TId, TEntity>.QueryAsync(IQueryRequest, CancellationToken)
  fullName: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository<TId, TEntity>.QueryAsync(Falcon.Contracts.IQueryRequest, System.Threading.CancellationToken)
  nameWithType.vb: IRepository(Of TId, TEntity).QueryAsync(IQueryRequest, CancellationToken)
  fullName.vb: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository(Of TId, TEntity).QueryAsync(Falcon.Contracts.IQueryRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.QueryAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
    name: QueryAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_QueryAsync_Falcon_Contracts_IQueryRequest_System_Threading_CancellationToken_
  - name: (
  - uid: Falcon.Contracts.IQueryRequest
    name: IQueryRequest
    href: Falcon.Contracts.IQueryRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.QueryAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
    name: QueryAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_QueryAsync_Falcon_Contracts_IQueryRequest_System_Threading_CancellationToken_
  - name: (
  - uid: Falcon.Contracts.IQueryRequest
    name: IQueryRequest
    href: Falcon.Contracts.IQueryRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Falcon.Contracts
  commentId: N:Falcon.Contracts
  href: Falcon.html
  name: Falcon.Contracts
  nameWithType: Falcon.Contracts
  fullName: Falcon.Contracts
  spec.csharp:
  - uid: Falcon
    name: Falcon
    href: Falcon.html
  - name: .
  - uid: Falcon.Contracts
    name: Contracts
    href: Falcon.Contracts.html
  spec.vb:
  - uid: Falcon
    name: Falcon
    href: Falcon.html
  - name: .
  - uid: Falcon.Contracts
    name: Contracts
    href: Falcon.Contracts.html
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.FindAsync*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.SqlRepository`2.FindAsync
  href: Falcon.Infrastructure.EntityFramework.SqlRepository-2.html#Falcon_Infrastructure_EntityFramework_SqlRepository_2_FindAsync_Falcon_Contracts_IQueryRequest_System_Threading_CancellationToken_
  name: FindAsync
  nameWithType: SqlRepository<TId, TEntity>.FindAsync
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.FindAsync
  nameWithType.vb: SqlRepository(Of TId, TEntity).FindAsync
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).FindAsync
- uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}.FindAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  commentId: M:Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{`0,`1}.FindAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  parent: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}
  definition: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.FindAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_FindAsync_Falcon_Contracts_IQueryRequest_System_Threading_CancellationToken_
  name: FindAsync(IQueryRequest, CancellationToken)
  nameWithType: IRepository<TId, TEntity>.FindAsync(IQueryRequest, CancellationToken)
  fullName: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository<TId, TEntity>.FindAsync(Falcon.Contracts.IQueryRequest, System.Threading.CancellationToken)
  nameWithType.vb: IRepository(Of TId, TEntity).FindAsync(IQueryRequest, CancellationToken)
  fullName.vb: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository(Of TId, TEntity).FindAsync(Falcon.Contracts.IQueryRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{`0,`1}.FindAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
    name: FindAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_FindAsync_Falcon_Contracts_IQueryRequest_System_Threading_CancellationToken_
  - name: (
  - uid: Falcon.Contracts.IQueryRequest
    name: IQueryRequest
    href: Falcon.Contracts.IQueryRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{`0,`1}.FindAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
    name: FindAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_FindAsync_Falcon_Contracts_IQueryRequest_System_Threading_CancellationToken_
  - name: (
  - uid: Falcon.Contracts.IQueryRequest
    name: IQueryRequest
    href: Falcon.Contracts.IQueryRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IList{{TEntity}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IList{`1}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IList<TEntity>>
  nameWithType: Task<IList<TEntity>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IList<TEntity>>
  nameWithType.vb: Task(Of IList(Of TEntity))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IList(Of TEntity))
  name.vb: Task(Of IList(Of TEntity))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
- uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.FindAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  commentId: M:Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.FindAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  isExternal: true
  href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_FindAsync_Falcon_Contracts_IQueryRequest_System_Threading_CancellationToken_
  name: FindAsync(IQueryRequest, CancellationToken)
  nameWithType: IRepository<TId, TEntity>.FindAsync(IQueryRequest, CancellationToken)
  fullName: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository<TId, TEntity>.FindAsync(Falcon.Contracts.IQueryRequest, System.Threading.CancellationToken)
  nameWithType.vb: IRepository(Of TId, TEntity).FindAsync(IQueryRequest, CancellationToken)
  fullName.vb: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository(Of TId, TEntity).FindAsync(Falcon.Contracts.IQueryRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.FindAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
    name: FindAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_FindAsync_Falcon_Contracts_IQueryRequest_System_Threading_CancellationToken_
  - name: (
  - uid: Falcon.Contracts.IQueryRequest
    name: IQueryRequest
    href: Falcon.Contracts.IQueryRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.FindAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
    name: FindAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_FindAsync_Falcon_Contracts_IQueryRequest_System_Threading_CancellationToken_
  - name: (
  - uid: Falcon.Contracts.IQueryRequest
    name: IQueryRequest
    href: Falcon.Contracts.IQueryRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.CountAsync*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.SqlRepository`2.CountAsync
  href: Falcon.Infrastructure.EntityFramework.SqlRepository-2.html#Falcon_Infrastructure_EntityFramework_SqlRepository_2_CountAsync_Falcon_Contracts_IQueryRequest_System_Threading_CancellationToken_
  name: CountAsync
  nameWithType: SqlRepository<TId, TEntity>.CountAsync
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.CountAsync
  nameWithType.vb: SqlRepository(Of TId, TEntity).CountAsync
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).CountAsync
- uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}.CountAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  commentId: M:Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{`0,`1}.CountAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  parent: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}
  definition: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.CountAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_CountAsync_Falcon_Contracts_IQueryRequest_System_Threading_CancellationToken_
  name: CountAsync(IQueryRequest, CancellationToken)
  nameWithType: IRepository<TId, TEntity>.CountAsync(IQueryRequest, CancellationToken)
  fullName: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository<TId, TEntity>.CountAsync(Falcon.Contracts.IQueryRequest, System.Threading.CancellationToken)
  nameWithType.vb: IRepository(Of TId, TEntity).CountAsync(IQueryRequest, CancellationToken)
  fullName.vb: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository(Of TId, TEntity).CountAsync(Falcon.Contracts.IQueryRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{`0,`1}.CountAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
    name: CountAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_CountAsync_Falcon_Contracts_IQueryRequest_System_Threading_CancellationToken_
  - name: (
  - uid: Falcon.Contracts.IQueryRequest
    name: IQueryRequest
    href: Falcon.Contracts.IQueryRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{`0,`1}.CountAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
    name: CountAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_CountAsync_Falcon_Contracts_IQueryRequest_System_Threading_CancellationToken_
  - name: (
  - uid: Falcon.Contracts.IQueryRequest
    name: IQueryRequest
    href: Falcon.Contracts.IQueryRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{System.Int64}
  commentId: T:System.Threading.Tasks.Task{System.Int64}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<long>
  nameWithType: Task<long>
  fullName: System.Threading.Tasks.Task<long>
  nameWithType.vb: Task(Of Long)
  fullName.vb: System.Threading.Tasks.Task(Of Long)
  name.vb: Task(Of Long)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.CountAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  commentId: M:Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.CountAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
  isExternal: true
  href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_CountAsync_Falcon_Contracts_IQueryRequest_System_Threading_CancellationToken_
  name: CountAsync(IQueryRequest, CancellationToken)
  nameWithType: IRepository<TId, TEntity>.CountAsync(IQueryRequest, CancellationToken)
  fullName: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository<TId, TEntity>.CountAsync(Falcon.Contracts.IQueryRequest, System.Threading.CancellationToken)
  nameWithType.vb: IRepository(Of TId, TEntity).CountAsync(IQueryRequest, CancellationToken)
  fullName.vb: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository(Of TId, TEntity).CountAsync(Falcon.Contracts.IQueryRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.CountAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
    name: CountAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_CountAsync_Falcon_Contracts_IQueryRequest_System_Threading_CancellationToken_
  - name: (
  - uid: Falcon.Contracts.IQueryRequest
    name: IQueryRequest
    href: Falcon.Contracts.IQueryRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.CountAsync(Falcon.Contracts.IQueryRequest,System.Threading.CancellationToken)
    name: CountAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_CountAsync_Falcon_Contracts_IQueryRequest_System_Threading_CancellationToken_
  - name: (
  - uid: Falcon.Contracts.IQueryRequest
    name: IQueryRequest
    href: Falcon.Contracts.IQueryRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.GetAsync*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.SqlRepository`2.GetAsync
  href: Falcon.Infrastructure.EntityFramework.SqlRepository-2.html#Falcon_Infrastructure_EntityFramework_SqlRepository_2_GetAsync__0_System_Threading_CancellationToken_
  name: GetAsync
  nameWithType: SqlRepository<TId, TEntity>.GetAsync
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.GetAsync
  nameWithType.vb: SqlRepository(Of TId, TEntity).GetAsync
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).GetAsync
- uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}.GetAsync({TId},System.Threading.CancellationToken)
  commentId: M:Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{`0,`1}.GetAsync(`0,System.Threading.CancellationToken)
  parent: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}
  definition: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.GetAsync(`0,System.Threading.CancellationToken)
  href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_GetAsync__0_System_Threading_CancellationToken_
  name: GetAsync(TId, CancellationToken)
  nameWithType: IRepository<TId, TEntity>.GetAsync(TId, CancellationToken)
  fullName: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository<TId, TEntity>.GetAsync(TId, System.Threading.CancellationToken)
  nameWithType.vb: IRepository(Of TId, TEntity).GetAsync(TId, CancellationToken)
  fullName.vb: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository(Of TId, TEntity).GetAsync(TId, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{`0,`1}.GetAsync(`0,System.Threading.CancellationToken)
    name: GetAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_GetAsync__0_System_Threading_CancellationToken_
  - name: (
  - name: TId
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{`0,`1}.GetAsync(`0,System.Threading.CancellationToken)
    name: GetAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_GetAsync__0_System_Threading_CancellationToken_
  - name: (
  - name: TId
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: '{TId}'
  commentId: '!:TId'
  definition: TId
  name: TId
  nameWithType: TId
  fullName: TId
- uid: System.Threading.Tasks.Task{{TEntity}}
  commentId: T:System.Threading.Tasks.Task{`1}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TEntity>
  nameWithType: Task<TEntity>
  fullName: System.Threading.Tasks.Task<TEntity>
  nameWithType.vb: Task(Of TEntity)
  fullName.vb: System.Threading.Tasks.Task(Of TEntity)
  name.vb: Task(Of TEntity)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.GetAsync(`0,System.Threading.CancellationToken)
  commentId: M:Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.GetAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_GetAsync__0_System_Threading_CancellationToken_
  name: GetAsync(TId, CancellationToken)
  nameWithType: IRepository<TId, TEntity>.GetAsync(TId, CancellationToken)
  fullName: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository<TId, TEntity>.GetAsync(TId, System.Threading.CancellationToken)
  nameWithType.vb: IRepository(Of TId, TEntity).GetAsync(TId, CancellationToken)
  fullName.vb: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository(Of TId, TEntity).GetAsync(TId, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.GetAsync(`0,System.Threading.CancellationToken)
    name: GetAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_GetAsync__0_System_Threading_CancellationToken_
  - name: (
  - name: TId
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.GetAsync(`0,System.Threading.CancellationToken)
    name: GetAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_GetAsync__0_System_Threading_CancellationToken_
  - name: (
  - name: TId
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: TId
  name: TId
  nameWithType: TId
  fullName: TId
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.GetManyAsync*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.SqlRepository`2.GetManyAsync
  href: Falcon.Infrastructure.EntityFramework.SqlRepository-2.html#Falcon_Infrastructure_EntityFramework_SqlRepository_2_GetManyAsync__0___System_Threading_CancellationToken_
  name: GetManyAsync
  nameWithType: SqlRepository<TId, TEntity>.GetManyAsync
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.GetManyAsync
  nameWithType.vb: SqlRepository(Of TId, TEntity).GetManyAsync
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).GetManyAsync
- uid: '{TId}[]'
  isExternal: true
  name: TId[]
  nameWithType: TId[]
  fullName: TId[]
  nameWithType.vb: TId()
  fullName.vb: TId()
  name.vb: TId()
  spec.csharp:
  - name: TId
  - name: '['
  - name: ']'
  spec.vb:
  - name: TId
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TEntity}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<TEntity>>
  nameWithType: Task<IEnumerable<TEntity>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<TEntity>>
  nameWithType.vb: Task(Of IEnumerable(Of TEntity))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: Task(Of IEnumerable(Of TEntity))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.CreateAsync*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.SqlRepository`2.CreateAsync
  href: Falcon.Infrastructure.EntityFramework.SqlRepository-2.html#Falcon_Infrastructure_EntityFramework_SqlRepository_2_CreateAsync_Falcon_Contracts_ICommandRequest__1__System_Threading_CancellationToken_
  name: CreateAsync
  nameWithType: SqlRepository<TId, TEntity>.CreateAsync
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.CreateAsync
  nameWithType.vb: SqlRepository(Of TId, TEntity).CreateAsync
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).CreateAsync
- uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}.CreateAsync(Falcon.Contracts.ICommandRequest{{TEntity}},System.Threading.CancellationToken)
  commentId: M:Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{`0,`1}.CreateAsync(Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
  parent: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}
  definition: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.CreateAsync(Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
  href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_CreateAsync_Falcon_Contracts_ICommandRequest__1__System_Threading_CancellationToken_
  name: CreateAsync(ICommandRequest<TEntity>, CancellationToken)
  nameWithType: IRepository<TId, TEntity>.CreateAsync(ICommandRequest<TEntity>, CancellationToken)
  fullName: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository<TId, TEntity>.CreateAsync(Falcon.Contracts.ICommandRequest<TEntity>, System.Threading.CancellationToken)
  nameWithType.vb: IRepository(Of TId, TEntity).CreateAsync(ICommandRequest(Of TEntity), CancellationToken)
  fullName.vb: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository(Of TId, TEntity).CreateAsync(Falcon.Contracts.ICommandRequest(Of TEntity), System.Threading.CancellationToken)
  name.vb: CreateAsync(ICommandRequest(Of TEntity), CancellationToken)
  spec.csharp:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{`0,`1}.CreateAsync(Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
    name: CreateAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_CreateAsync_Falcon_Contracts_ICommandRequest__1__System_Threading_CancellationToken_
  - name: (
  - uid: Falcon.Contracts.ICommandRequest`1
    name: ICommandRequest
    href: Falcon.Contracts.ICommandRequest-1.html
  - name: <
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{`0,`1}.CreateAsync(Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
    name: CreateAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_CreateAsync_Falcon_Contracts_ICommandRequest__1__System_Threading_CancellationToken_
  - name: (
  - uid: Falcon.Contracts.ICommandRequest`1
    name: ICommandRequest
    href: Falcon.Contracts.ICommandRequest-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Falcon.Contracts.ICommandRequest{{TEntity}}
  commentId: T:Falcon.Contracts.ICommandRequest{`0}
  parent: Falcon.Contracts
  definition: Falcon.Contracts.ICommandRequest`1
  href: Falcon.Contracts.ICommandRequest-1.html
  name: ICommandRequest<TEntity>
  nameWithType: ICommandRequest<TEntity>
  fullName: Falcon.Contracts.ICommandRequest<TEntity>
  nameWithType.vb: ICommandRequest(Of TEntity)
  fullName.vb: Falcon.Contracts.ICommandRequest(Of TEntity)
  name.vb: ICommandRequest(Of TEntity)
  spec.csharp:
  - uid: Falcon.Contracts.ICommandRequest`1
    name: ICommandRequest
    href: Falcon.Contracts.ICommandRequest-1.html
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: Falcon.Contracts.ICommandRequest`1
    name: ICommandRequest
    href: Falcon.Contracts.ICommandRequest-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.CreateAsync(Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
  commentId: M:Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.CreateAsync(Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
  isExternal: true
  href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_CreateAsync_Falcon_Contracts_ICommandRequest__1__System_Threading_CancellationToken_
  name: CreateAsync(ICommandRequest<TEntity>, CancellationToken)
  nameWithType: IRepository<TId, TEntity>.CreateAsync(ICommandRequest<TEntity>, CancellationToken)
  fullName: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository<TId, TEntity>.CreateAsync(Falcon.Contracts.ICommandRequest<TEntity>, System.Threading.CancellationToken)
  nameWithType.vb: IRepository(Of TId, TEntity).CreateAsync(ICommandRequest(Of TEntity), CancellationToken)
  fullName.vb: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository(Of TId, TEntity).CreateAsync(Falcon.Contracts.ICommandRequest(Of TEntity), System.Threading.CancellationToken)
  name.vb: CreateAsync(ICommandRequest(Of TEntity), CancellationToken)
  spec.csharp:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.CreateAsync(Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
    name: CreateAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_CreateAsync_Falcon_Contracts_ICommandRequest__1__System_Threading_CancellationToken_
  - name: (
  - uid: Falcon.Contracts.ICommandRequest`1
    name: ICommandRequest
    href: Falcon.Contracts.ICommandRequest-1.html
  - name: <
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.CreateAsync(Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
    name: CreateAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_CreateAsync_Falcon_Contracts_ICommandRequest__1__System_Threading_CancellationToken_
  - name: (
  - uid: Falcon.Contracts.ICommandRequest`1
    name: ICommandRequest
    href: Falcon.Contracts.ICommandRequest-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Falcon.Contracts.ICommandRequest`1
  commentId: T:Falcon.Contracts.ICommandRequest`1
  href: Falcon.Contracts.ICommandRequest-1.html
  name: ICommandRequest<TEntity>
  nameWithType: ICommandRequest<TEntity>
  fullName: Falcon.Contracts.ICommandRequest<TEntity>
  nameWithType.vb: ICommandRequest(Of TEntity)
  fullName.vb: Falcon.Contracts.ICommandRequest(Of TEntity)
  name.vb: ICommandRequest(Of TEntity)
  spec.csharp:
  - uid: Falcon.Contracts.ICommandRequest`1
    name: ICommandRequest
    href: Falcon.Contracts.ICommandRequest-1.html
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: Falcon.Contracts.ICommandRequest`1
    name: ICommandRequest
    href: Falcon.Contracts.ICommandRequest-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.CreateManyAsync*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.SqlRepository`2.CreateManyAsync
  href: Falcon.Infrastructure.EntityFramework.SqlRepository-2.html#Falcon_Infrastructure_EntityFramework_SqlRepository_2_CreateManyAsync_Falcon_Contracts_ICommandRequest__1____System_Threading_CancellationToken_
  name: CreateManyAsync
  nameWithType: SqlRepository<TId, TEntity>.CreateManyAsync
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.CreateManyAsync
  nameWithType.vb: SqlRepository(Of TId, TEntity).CreateManyAsync
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).CreateManyAsync
- uid: Falcon.Contracts.ICommandRequest{{TEntity}[]}
  commentId: T:Falcon.Contracts.ICommandRequest{`1[]}
  parent: Falcon.Contracts
  definition: Falcon.Contracts.ICommandRequest`1
  href: Falcon.Contracts.ICommandRequest-1.html
  name: ICommandRequest<TEntity[]>
  nameWithType: ICommandRequest<TEntity[]>
  fullName: Falcon.Contracts.ICommandRequest<TEntity[]>
  nameWithType.vb: ICommandRequest(Of TEntity())
  fullName.vb: Falcon.Contracts.ICommandRequest(Of TEntity())
  name.vb: ICommandRequest(Of TEntity())
  spec.csharp:
  - uid: Falcon.Contracts.ICommandRequest`1
    name: ICommandRequest
    href: Falcon.Contracts.ICommandRequest-1.html
  - name: <
  - name: TEntity
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: Falcon.Contracts.ICommandRequest`1
    name: ICommandRequest
    href: Falcon.Contracts.ICommandRequest-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: (
  - name: )
  - name: )
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.UpdateAsync*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.SqlRepository`2.UpdateAsync
  href: Falcon.Infrastructure.EntityFramework.SqlRepository-2.html#Falcon_Infrastructure_EntityFramework_SqlRepository_2_UpdateAsync__0_Falcon_Contracts_ICommandRequest__1__System_Threading_CancellationToken_
  name: UpdateAsync
  nameWithType: SqlRepository<TId, TEntity>.UpdateAsync
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.UpdateAsync
  nameWithType.vb: SqlRepository(Of TId, TEntity).UpdateAsync
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).UpdateAsync
- uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}.UpdateAsync({TId},Falcon.Contracts.ICommandRequest{{TEntity}},System.Threading.CancellationToken)
  commentId: M:Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{`0,`1}.UpdateAsync(`0,Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
  parent: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}
  definition: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.UpdateAsync(`0,Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
  href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_UpdateAsync__0_Falcon_Contracts_ICommandRequest__1__System_Threading_CancellationToken_
  name: UpdateAsync(TId, ICommandRequest<TEntity>, CancellationToken)
  nameWithType: IRepository<TId, TEntity>.UpdateAsync(TId, ICommandRequest<TEntity>, CancellationToken)
  fullName: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository<TId, TEntity>.UpdateAsync(TId, Falcon.Contracts.ICommandRequest<TEntity>, System.Threading.CancellationToken)
  nameWithType.vb: IRepository(Of TId, TEntity).UpdateAsync(TId, ICommandRequest(Of TEntity), CancellationToken)
  fullName.vb: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository(Of TId, TEntity).UpdateAsync(TId, Falcon.Contracts.ICommandRequest(Of TEntity), System.Threading.CancellationToken)
  name.vb: UpdateAsync(TId, ICommandRequest(Of TEntity), CancellationToken)
  spec.csharp:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{`0,`1}.UpdateAsync(`0,Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
    name: UpdateAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_UpdateAsync__0_Falcon_Contracts_ICommandRequest__1__System_Threading_CancellationToken_
  - name: (
  - name: TId
  - name: ','
  - name: " "
  - uid: Falcon.Contracts.ICommandRequest`1
    name: ICommandRequest
    href: Falcon.Contracts.ICommandRequest-1.html
  - name: <
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{`0,`1}.UpdateAsync(`0,Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
    name: UpdateAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_UpdateAsync__0_Falcon_Contracts_ICommandRequest__1__System_Threading_CancellationToken_
  - name: (
  - name: TId
  - name: ','
  - name: " "
  - uid: Falcon.Contracts.ICommandRequest`1
    name: ICommandRequest
    href: Falcon.Contracts.ICommandRequest-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.UpdateAsync(`0,Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
  commentId: M:Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.UpdateAsync(`0,Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
  isExternal: true
  href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_UpdateAsync__0_Falcon_Contracts_ICommandRequest__1__System_Threading_CancellationToken_
  name: UpdateAsync(TId, ICommandRequest<TEntity>, CancellationToken)
  nameWithType: IRepository<TId, TEntity>.UpdateAsync(TId, ICommandRequest<TEntity>, CancellationToken)
  fullName: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository<TId, TEntity>.UpdateAsync(TId, Falcon.Contracts.ICommandRequest<TEntity>, System.Threading.CancellationToken)
  nameWithType.vb: IRepository(Of TId, TEntity).UpdateAsync(TId, ICommandRequest(Of TEntity), CancellationToken)
  fullName.vb: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository(Of TId, TEntity).UpdateAsync(TId, Falcon.Contracts.ICommandRequest(Of TEntity), System.Threading.CancellationToken)
  name.vb: UpdateAsync(TId, ICommandRequest(Of TEntity), CancellationToken)
  spec.csharp:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.UpdateAsync(`0,Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
    name: UpdateAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_UpdateAsync__0_Falcon_Contracts_ICommandRequest__1__System_Threading_CancellationToken_
  - name: (
  - name: TId
  - name: ','
  - name: " "
  - uid: Falcon.Contracts.ICommandRequest`1
    name: ICommandRequest
    href: Falcon.Contracts.ICommandRequest-1.html
  - name: <
  - name: TEntity
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.UpdateAsync(`0,Falcon.Contracts.ICommandRequest{`1},System.Threading.CancellationToken)
    name: UpdateAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_UpdateAsync__0_Falcon_Contracts_ICommandRequest__1__System_Threading_CancellationToken_
  - name: (
  - name: TId
  - name: ','
  - name: " "
  - uid: Falcon.Contracts.ICommandRequest`1
    name: ICommandRequest
    href: Falcon.Contracts.ICommandRequest-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.DeleteAsync*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.SqlRepository`2.DeleteAsync
  href: Falcon.Infrastructure.EntityFramework.SqlRepository-2.html#Falcon_Infrastructure_EntityFramework_SqlRepository_2_DeleteAsync__0_System_Threading_CancellationToken_
  name: DeleteAsync
  nameWithType: SqlRepository<TId, TEntity>.DeleteAsync
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.DeleteAsync
  nameWithType.vb: SqlRepository(Of TId, TEntity).DeleteAsync
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).DeleteAsync
- uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}.DeleteAsync({TId},System.Threading.CancellationToken)
  commentId: M:Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{`0,`1}.DeleteAsync(`0,System.Threading.CancellationToken)
  parent: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}
  definition: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.DeleteAsync(`0,System.Threading.CancellationToken)
  href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_DeleteAsync__0_System_Threading_CancellationToken_
  name: DeleteAsync(TId, CancellationToken)
  nameWithType: IRepository<TId, TEntity>.DeleteAsync(TId, CancellationToken)
  fullName: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository<TId, TEntity>.DeleteAsync(TId, System.Threading.CancellationToken)
  nameWithType.vb: IRepository(Of TId, TEntity).DeleteAsync(TId, CancellationToken)
  fullName.vb: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository(Of TId, TEntity).DeleteAsync(TId, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{`0,`1}.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_DeleteAsync__0_System_Threading_CancellationToken_
  - name: (
  - name: TId
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{`0,`1}.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_DeleteAsync__0_System_Threading_CancellationToken_
  - name: (
  - name: TId
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.DeleteAsync(`0,System.Threading.CancellationToken)
  commentId: M:Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.DeleteAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_DeleteAsync__0_System_Threading_CancellationToken_
  name: DeleteAsync(TId, CancellationToken)
  nameWithType: IRepository<TId, TEntity>.DeleteAsync(TId, CancellationToken)
  fullName: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository<TId, TEntity>.DeleteAsync(TId, System.Threading.CancellationToken)
  nameWithType.vb: IRepository(Of TId, TEntity).DeleteAsync(TId, CancellationToken)
  fullName.vb: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository(Of TId, TEntity).DeleteAsync(TId, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_DeleteAsync__0_System_Threading_CancellationToken_
  - name: (
  - name: TId
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_DeleteAsync__0_System_Threading_CancellationToken_
  - name: (
  - name: TId
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.PatchAsync*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.SqlRepository`2.PatchAsync
  href: Falcon.Infrastructure.EntityFramework.SqlRepository-2.html#Falcon_Infrastructure_EntityFramework_SqlRepository_2_PatchAsync__0_Falcon_Contracts_ICommandRequest_Microsoft_AspNetCore_JsonPatch_JsonPatchDocument__1___System_Threading_CancellationToken_
  name: PatchAsync
  nameWithType: SqlRepository<TId, TEntity>.PatchAsync
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.PatchAsync
  nameWithType.vb: SqlRepository(Of TId, TEntity).PatchAsync
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).PatchAsync
- uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}.PatchAsync({TId},Falcon.Contracts.ICommandRequest{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{{TEntity}}},System.Threading.CancellationToken)
  commentId: M:Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{`0,`1}.PatchAsync(`0,Falcon.Contracts.ICommandRequest{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{`1}},System.Threading.CancellationToken)
  parent: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{{TId},{TEntity}}
  definition: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.PatchAsync(`0,Falcon.Contracts.ICommandRequest{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{`1}},System.Threading.CancellationToken)
  href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_PatchAsync__0_Falcon_Contracts_ICommandRequest_Microsoft_AspNetCore_JsonPatch_JsonPatchDocument__1___System_Threading_CancellationToken_
  name: PatchAsync(TId, ICommandRequest<JsonPatchDocument<TEntity>>, CancellationToken)
  nameWithType: IRepository<TId, TEntity>.PatchAsync(TId, ICommandRequest<JsonPatchDocument<TEntity>>, CancellationToken)
  fullName: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository<TId, TEntity>.PatchAsync(TId, Falcon.Contracts.ICommandRequest<Microsoft.AspNetCore.JsonPatch.JsonPatchDocument<TEntity>>, System.Threading.CancellationToken)
  nameWithType.vb: IRepository(Of TId, TEntity).PatchAsync(TId, ICommandRequest(Of JsonPatchDocument(Of TEntity)), CancellationToken)
  fullName.vb: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository(Of TId, TEntity).PatchAsync(TId, Falcon.Contracts.ICommandRequest(Of Microsoft.AspNetCore.JsonPatch.JsonPatchDocument(Of TEntity)), System.Threading.CancellationToken)
  name.vb: PatchAsync(TId, ICommandRequest(Of JsonPatchDocument(Of TEntity)), CancellationToken)
  spec.csharp:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{`0,`1}.PatchAsync(`0,Falcon.Contracts.ICommandRequest{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{`1}},System.Threading.CancellationToken)
    name: PatchAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_PatchAsync__0_Falcon_Contracts_ICommandRequest_Microsoft_AspNetCore_JsonPatch_JsonPatchDocument__1___System_Threading_CancellationToken_
  - name: (
  - name: TId
  - name: ','
  - name: " "
  - uid: Falcon.Contracts.ICommandRequest`1
    name: ICommandRequest
    href: Falcon.Contracts.ICommandRequest-1.html
  - name: <
  - uid: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument`1
    name: JsonPatchDocument
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.jsonpatch.jsonpatchdocument-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository{`0,`1}.PatchAsync(`0,Falcon.Contracts.ICommandRequest{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{`1}},System.Threading.CancellationToken)
    name: PatchAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_PatchAsync__0_Falcon_Contracts_ICommandRequest_Microsoft_AspNetCore_JsonPatch_JsonPatchDocument__1___System_Threading_CancellationToken_
  - name: (
  - name: TId
  - name: ','
  - name: " "
  - uid: Falcon.Contracts.ICommandRequest`1
    name: ICommandRequest
    href: Falcon.Contracts.ICommandRequest-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument`1
    name: JsonPatchDocument
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.jsonpatch.jsonpatchdocument-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Falcon.Contracts.ICommandRequest{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{{TEntity}}}
  commentId: T:Falcon.Contracts.ICommandRequest{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{`1}}
  parent: Falcon.Contracts
  definition: Falcon.Contracts.ICommandRequest`1
  href: Falcon.Contracts.ICommandRequest-1.html
  name: ICommandRequest<JsonPatchDocument<TEntity>>
  nameWithType: ICommandRequest<JsonPatchDocument<TEntity>>
  fullName: Falcon.Contracts.ICommandRequest<Microsoft.AspNetCore.JsonPatch.JsonPatchDocument<TEntity>>
  nameWithType.vb: ICommandRequest(Of JsonPatchDocument(Of TEntity))
  fullName.vb: Falcon.Contracts.ICommandRequest(Of Microsoft.AspNetCore.JsonPatch.JsonPatchDocument(Of TEntity))
  name.vb: ICommandRequest(Of JsonPatchDocument(Of TEntity))
  spec.csharp:
  - uid: Falcon.Contracts.ICommandRequest`1
    name: ICommandRequest
    href: Falcon.Contracts.ICommandRequest-1.html
  - name: <
  - uid: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument`1
    name: JsonPatchDocument
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.jsonpatch.jsonpatchdocument-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Falcon.Contracts.ICommandRequest`1
    name: ICommandRequest
    href: Falcon.Contracts.ICommandRequest-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument`1
    name: JsonPatchDocument
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.jsonpatch.jsonpatchdocument-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
- uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.PatchAsync(`0,Falcon.Contracts.ICommandRequest{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{`1}},System.Threading.CancellationToken)
  commentId: M:Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.PatchAsync(`0,Falcon.Contracts.ICommandRequest{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{`1}},System.Threading.CancellationToken)
  isExternal: true
  href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_PatchAsync__0_Falcon_Contracts_ICommandRequest_Microsoft_AspNetCore_JsonPatch_JsonPatchDocument__1___System_Threading_CancellationToken_
  name: PatchAsync(TId, ICommandRequest<JsonPatchDocument<TEntity>>, CancellationToken)
  nameWithType: IRepository<TId, TEntity>.PatchAsync(TId, ICommandRequest<JsonPatchDocument<TEntity>>, CancellationToken)
  fullName: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository<TId, TEntity>.PatchAsync(TId, Falcon.Contracts.ICommandRequest<Microsoft.AspNetCore.JsonPatch.JsonPatchDocument<TEntity>>, System.Threading.CancellationToken)
  nameWithType.vb: IRepository(Of TId, TEntity).PatchAsync(TId, ICommandRequest(Of JsonPatchDocument(Of TEntity)), CancellationToken)
  fullName.vb: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository(Of TId, TEntity).PatchAsync(TId, Falcon.Contracts.ICommandRequest(Of Microsoft.AspNetCore.JsonPatch.JsonPatchDocument(Of TEntity)), System.Threading.CancellationToken)
  name.vb: PatchAsync(TId, ICommandRequest(Of JsonPatchDocument(Of TEntity)), CancellationToken)
  spec.csharp:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.PatchAsync(`0,Falcon.Contracts.ICommandRequest{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{`1}},System.Threading.CancellationToken)
    name: PatchAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_PatchAsync__0_Falcon_Contracts_ICommandRequest_Microsoft_AspNetCore_JsonPatch_JsonPatchDocument__1___System_Threading_CancellationToken_
  - name: (
  - name: TId
  - name: ','
  - name: " "
  - uid: Falcon.Contracts.ICommandRequest`1
    name: ICommandRequest
    href: Falcon.Contracts.ICommandRequest-1.html
  - name: <
  - uid: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument`1
    name: JsonPatchDocument
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.jsonpatch.jsonpatchdocument-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository`2.PatchAsync(`0,Falcon.Contracts.ICommandRequest{Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{`1}},System.Threading.CancellationToken)
    name: PatchAsync
    href: Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html#Falcon_Domain_Abstractions_Interfaces_Repositories_IRepository_2_PatchAsync__0_Falcon_Contracts_ICommandRequest_Microsoft_AspNetCore_JsonPatch_JsonPatchDocument__1___System_Threading_CancellationToken_
  - name: (
  - name: TId
  - name: ','
  - name: " "
  - uid: Falcon.Contracts.ICommandRequest`1
    name: ICommandRequest
    href: Falcon.Contracts.ICommandRequest-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument`1
    name: JsonPatchDocument
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.jsonpatch.jsonpatchdocument-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Falcon.Infrastructure.EntityFramework.SqlRepository`2.ReplaceAsync*
  commentId: Overload:Falcon.Infrastructure.EntityFramework.SqlRepository`2.ReplaceAsync
  href: Falcon.Infrastructure.EntityFramework.SqlRepository-2.html#Falcon_Infrastructure_EntityFramework_SqlRepository_2_ReplaceAsync__0_Falcon_Contracts_ICommandRequest__1__System_Threading_CancellationToken_
  name: ReplaceAsync
  nameWithType: SqlRepository<TId, TEntity>.ReplaceAsync
  fullName: Falcon.Infrastructure.EntityFramework.SqlRepository<TId, TEntity>.ReplaceAsync
  nameWithType.vb: SqlRepository(Of TId, TEntity).ReplaceAsync
  fullName.vb: Falcon.Infrastructure.EntityFramework.SqlRepository(Of TId, TEntity).ReplaceAsync
