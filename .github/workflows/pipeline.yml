name: Falcon Build

on:
  push:
    branches: [ "feature/*" ]
    paths-ignore: ["docfx", "samples", ".github"]
  pull_request:
    branches: [ "master"]
    paths-ignore: ["docfx", "samples", ".github"]
  workflow_dispatch:

env:
  PROJECT: ./Falcon.sln

jobs:
  build:
    name: Build Falcon Web API Framework
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            os: [ubuntu-latest, windows-latest]
            dotnet-version: [9.0.x]
    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT }}

    - name: Build
      run: dotnet build ${{ env.PROJECT }} --no-restore
  sast:
    name: Static Application Security Testing
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
            distribution: "zulu"
            java-version: 17

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
            dotnet-version: 9.0.x

      - uses: actions/checkout@v4
        with:
            fetch-depth: 0

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
            path: .\.sonar\cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
            path: .\.sonar\scanner
            key: ${{ runner.os }}-sonar-scanner
            restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install tools
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
            New-Item -Path .\.sonar\scanner -ItemType Directory
            dotnet tool update dotnet-sonarscanner  --version 9.0.1  --tool-path .\.sonar\scanner
            dotnet tool update dotnet-coverage --version 17.12.6  --tool-path .\.sonar\scanner
            dotnet tool list --tool-path .\.sonar\scanner

      - name: Restore NuGet packages
        run: dotnet restore
        
      - name: Run tests and collect coverage
        run: |
            .\.sonar\scanner\dotnet-coverage collect "dotnet test ./tests/Falcon.Tests.sln" -f xml -o "coverage.xml"

      - name: SonarCloud Scan
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
            .\.sonar\scanner\dotnet-sonarscanner begin `
                /k:"natarajanganapathi_falcon" `
                /o:"natarajan-ganapathi" `
                /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
                /d:sonar.cs.vscoveragexml.reportsPaths="coverage.xml" `
                /d:sonar.host.url="https://sonarcloud.io" `
                /d:sonar.sources="src" `
                /d:sonar.exclusions="docfx/**,samples/**" `
                /d:sonar.scanner.skipJreProvisioning=true `
                /d:sonar.verbose=true `
                /d:sonar.tests="tests/" 
            dotnet build --no-restore --no-incremental
            .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]
        dotnet-version: [9.0.x]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
        
    - name: Restore NuGet packages
      run: dotnet restore


    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.

        # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality


    # Autobuild attempts to build any compiled languages  (C/C++, C#, Go, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

    #   If the Autobuild fails above, remove it and uncomment the following three lines.
    #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

    # - run: |
    #   echo "Run, Build Application using script"
    #   ./location_of_script_within_repo/buildscript.sh

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
            