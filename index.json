{
  "api/Falcon.Application.Abstractions.Endpoints-2.html": {
    "href": "api/Falcon.Application.Abstractions.Endpoints-2.html",
    "title": "Class Endpoints<TId, TEntity> | Falcon Documentation",
    "keywords": "Class Endpoints<TId, TEntity> Namespace Falcon.Application.Abstractions Assembly Falcon.Application.Abstractions.dll public abstract class Endpoints<TId, TEntity> : IEndpoints where TEntity : class, IEntity<TId>, IAggregateRoot, new() Type Parameters TId TEntity Inheritance object Endpoints<TId, TEntity> Implements IEndpoints Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties Route public abstract string Route { get; } Property Value string Methods GetAsync(TId, QueryService<TId, TEntity>, CancellationToken) public Task<Results<Ok<TEntity>, NotFound>> GetAsync(TId id, QueryService<TId, TEntity> service, CancellationToken cancellationToken) Parameters id TId service QueryService<TId, TEntity> cancellationToken CancellationToken Returns Task<Results<Ok<TEntity>, NotFound>> MapApis(IEndpointRouteBuilder) public IEndpointRouteBuilder MapApis(IEndpointRouteBuilder route) Parameters route IEndpointRouteBuilder Returns IEndpointRouteBuilder MapDefaultApis(IEndpointRouteBuilder) public virtual IEndpointRouteBuilder MapDefaultApis(IEndpointRouteBuilder group) Parameters group IEndpointRouteBuilder Returns IEndpointRouteBuilder"
  },
  "api/Falcon.Application.Abstractions.Endpoints.EndpointOptions.html": {
    "href": "api/Falcon.Application.Abstractions.Endpoints.EndpointOptions.html",
    "title": "Class EndpointOptions | Falcon Documentation",
    "keywords": "Class EndpointOptions Namespace Falcon.Application.Abstractions.Endpoints Assembly Falcon.Application.Abstractions.dll public class EndpointOptions Inheritance object EndpointOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime)"
  },
  "api/Falcon.Application.Abstractions.Endpoints.html": {
    "href": "api/Falcon.Application.Abstractions.Endpoints.html",
    "title": "Namespace Falcon.Application.Abstractions.Endpoints | Falcon Documentation",
    "keywords": "Namespace Falcon.Application.Abstractions.Endpoints Classes EndpointOptions"
  },
  "api/Falcon.Application.Abstractions.IEndpoints.html": {
    "href": "api/Falcon.Application.Abstractions.IEndpoints.html",
    "title": "Interface IEndpoints | Falcon Documentation",
    "keywords": "Interface IEndpoints Namespace Falcon.Application.Abstractions Assembly Falcon.Application.Abstractions.dll public interface IEndpoints Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Methods MapApis(IEndpointRouteBuilder) IEndpointRouteBuilder MapApis(IEndpointRouteBuilder route) Parameters route IEndpointRouteBuilder Returns IEndpointRouteBuilder"
  },
  "api/Falcon.Application.Abstractions.Infrastructure.Services.IIdentityService.html": {
    "href": "api/Falcon.Application.Abstractions.Infrastructure.Services.IIdentityService.html",
    "title": "Interface IIdentityService | Falcon Documentation",
    "keywords": "Interface IIdentityService Namespace Falcon.Application.Abstractions.Infrastructure.Services Assembly Falcon.Application.Abstractions.dll public interface IIdentityService Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Methods GetUserIdentity() string? GetUserIdentity() Returns string GetUserName() string? GetUserName() Returns string"
  },
  "api/Falcon.Application.Abstractions.Infrastructure.Services.IdentityService.html": {
    "href": "api/Falcon.Application.Abstractions.Infrastructure.Services.IdentityService.html",
    "title": "Class IdentityService | Falcon Documentation",
    "keywords": "Class IdentityService Namespace Falcon.Application.Abstractions.Infrastructure.Services Assembly Falcon.Application.Abstractions.dll public class IdentityService : IIdentityService Inheritance object IdentityService Implements IIdentityService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors IdentityService(IHttpContextAccessor) public IdentityService(IHttpContextAccessor context) Parameters context IHttpContextAccessor Methods GetUserIdentity() public string? GetUserIdentity() Returns string GetUserName() public string? GetUserName() Returns string"
  },
  "api/Falcon.Application.Abstractions.Infrastructure.Services.html": {
    "href": "api/Falcon.Application.Abstractions.Infrastructure.Services.html",
    "title": "Namespace Falcon.Application.Abstractions.Infrastructure.Services | Falcon Documentation",
    "keywords": "Namespace Falcon.Application.Abstractions.Infrastructure.Services Classes IdentityService Interfaces IIdentityService"
  },
  "api/Falcon.Application.Abstractions.ServiceCollectionExtensions.html": {
    "href": "api/Falcon.Application.Abstractions.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | Falcon Documentation",
    "keywords": "Class ServiceCollectionExtensions Namespace Falcon.Application.Abstractions Assembly Falcon.Application.Abstractions.dll public static class ServiceCollectionExtensions Inheritance object ServiceCollectionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddApplicationModule(IServiceCollection, IConfiguration, string) public static IServiceCollection AddApplicationModule(this IServiceCollection services, IConfiguration configuration, string configPath) Parameters services IServiceCollection configuration IConfiguration configPath string Returns IServiceCollection UseInfrastructureMiddlewares(IApplicationBuilder) public static IApplicationBuilder UseInfrastructureMiddlewares(this IApplicationBuilder app) Parameters app IApplicationBuilder Returns IApplicationBuilder UseInfrastructureModule(IApplicationBuilder) public static IApplicationBuilder UseInfrastructureModule(this IApplicationBuilder app) Parameters app IApplicationBuilder Returns IApplicationBuilder"
  },
  "api/Falcon.Application.Abstractions.Services.ApplicationService-2.html": {
    "href": "api/Falcon.Application.Abstractions.Services.ApplicationService-2.html",
    "title": "Class ApplicationService<TId, TEntity> | Falcon Documentation",
    "keywords": "Class ApplicationService<TId, TEntity> Namespace Falcon.Application.Abstractions.Services Assembly Falcon.Application.Abstractions.dll public abstract class ApplicationService<TId, TEntity> where TEntity : class, IEntity<TId>, new() Type Parameters TId TEntity Inheritance object ApplicationService<TId, TEntity> Derived CommandService<TId, TEntity> QueryService<TId, TEntity> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors ApplicationService(IServiceProvider) protected ApplicationService(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider Methods GetRepository() public IRepository<TId, TEntity> GetRepository() Returns IRepository<TId, TEntity> GetService<TService>() public TService GetService<TService>() where TService : class Returns TService Type Parameters TService"
  },
  "api/Falcon.Application.Abstractions.Services.CommandService-2.html": {
    "href": "api/Falcon.Application.Abstractions.Services.CommandService-2.html",
    "title": "Class CommandService<TId, TEntity> | Falcon Documentation",
    "keywords": "Class CommandService<TId, TEntity> Namespace Falcon.Application.Abstractions.Services Assembly Falcon.Application.Abstractions.dll public class CommandService<TId, TEntity> : ApplicationService<TId, TEntity> where TEntity : class, IEntity<TId>, new() Type Parameters TId TEntity Inheritance object ApplicationService<TId, TEntity> CommandService<TId, TEntity> Inherited Members ApplicationService<TId, TEntity>.GetRepository() ApplicationService<TId, TEntity>.GetService<TService>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors CommandService(IServiceProvider) public CommandService(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider Methods CreateAsync(ICommandRequest<TEntity>, CancellationToken) public Task<TEntity> CreateAsync(ICommandRequest<TEntity> request, CancellationToken cancellationToken) Parameters request ICommandRequest<TEntity> cancellationToken CancellationToken Returns Task<TEntity> DeleteAsync(TId, CancellationToken) public Task<TEntity> DeleteAsync(TId id, CancellationToken cancellationToken) Parameters id TId cancellationToken CancellationToken Returns Task<TEntity> PatchAsync(TId, ICommandRequest<JsonPatchDocument<TEntity>>, CancellationToken) public Task<TEntity> PatchAsync(TId id, ICommandRequest<JsonPatchDocument<TEntity>> request, CancellationToken cancellationToken) Parameters id TId request ICommandRequest<JsonPatchDocument<TEntity>> cancellationToken CancellationToken Returns Task<TEntity> UpdateAsync(TId, ICommandRequest<TEntity>, CancellationToken) public Task<TEntity> UpdateAsync(TId id, ICommandRequest<TEntity> request, CancellationToken cancellationToken) Parameters id TId request ICommandRequest<TEntity> cancellationToken CancellationToken Returns Task<TEntity>"
  },
  "api/Falcon.Application.Abstractions.Services.QueryService-2.html": {
    "href": "api/Falcon.Application.Abstractions.Services.QueryService-2.html",
    "title": "Class QueryService<TId, TEntity> | Falcon Documentation",
    "keywords": "Class QueryService<TId, TEntity> Namespace Falcon.Application.Abstractions.Services Assembly Falcon.Application.Abstractions.dll public class QueryService<TId, TEntity> : ApplicationService<TId, TEntity> where TEntity : class, IEntity<TId>, new() Type Parameters TId TEntity Inheritance object ApplicationService<TId, TEntity> QueryService<TId, TEntity> Inherited Members ApplicationService<TId, TEntity>.GetRepository() ApplicationService<TId, TEntity>.GetService<TService>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors QueryService(IServiceProvider) public QueryService(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider Methods CountAsync(IQueryRequest, CancellationToken) public Task<long> CountAsync(IQueryRequest request, CancellationToken cancellationToken) Parameters request IQueryRequest cancellationToken CancellationToken Returns Task<long> FindAsync(IQueryRequest, CancellationToken) public Task<IList<TEntity>> FindAsync(IQueryRequest request, CancellationToken cancellationToken) Parameters request IQueryRequest cancellationToken CancellationToken Returns Task<IList<TEntity>> GetAsync(TId, CancellationToken) public Task<TEntity> GetAsync(TId id, CancellationToken cancellationToken) Parameters id TId cancellationToken CancellationToken Returns Task<TEntity> QueryAsync(IQueryRequest, CancellationToken) public Task<IList<JObject>> QueryAsync(IQueryRequest request, CancellationToken cancellationToken) Parameters request IQueryRequest cancellationToken CancellationToken Returns Task<IList<JObject>>"
  },
  "api/Falcon.Application.Abstractions.Services.html": {
    "href": "api/Falcon.Application.Abstractions.Services.html",
    "title": "Namespace Falcon.Application.Abstractions.Services | Falcon Documentation",
    "keywords": "Namespace Falcon.Application.Abstractions.Services Classes ApplicationService<TId, TEntity> CommandService<TId, TEntity> QueryService<TId, TEntity>"
  },
  "api/Falcon.Application.Abstractions.html": {
    "href": "api/Falcon.Application.Abstractions.html",
    "title": "Namespace Falcon.Application.Abstractions | Falcon Documentation",
    "keywords": "Namespace Falcon.Application.Abstractions Classes Endpoints<TId, TEntity> ServiceCollectionExtensions Interfaces IEndpoints"
  },
  "api/Falcon.Contracts.CommandRequest-1.html": {
    "href": "api/Falcon.Contracts.CommandRequest-1.html",
    "title": "Class CommandRequest<TEntity> | Falcon Documentation",
    "keywords": "Class CommandRequest<TEntity> Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public class CommandRequest<TEntity> : ICommandRequest<TEntity>, IApiRequest Type Parameters TEntity Inheritance object CommandRequest<TEntity> Implements ICommandRequest<TEntity> IApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors CommandRequest(TEntity?) public CommandRequest(TEntity? data = default) Parameters data TEntity Properties Data public TEntity? Data { get; set; } Property Value TEntity"
  },
  "api/Falcon.Contracts.CommandResponse-1.html": {
    "href": "api/Falcon.Contracts.CommandResponse-1.html",
    "title": "Class CommandResponse<TEntity> | Falcon Documentation",
    "keywords": "Class CommandResponse<TEntity> Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public record CommandResponse<TEntity> : ICommandResponse<TEntity>, IApiResponse, IEquatable<CommandResponse<TEntity>> Type Parameters TEntity Inheritance object CommandResponse<TEntity> Implements ICommandResponse<TEntity> IApiResponse IEquatable<CommandResponse<TEntity>> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors CommandResponse(TEntity?) public CommandResponse(TEntity? data = default) Parameters data TEntity Properties Data public TEntity? Data { get; set; } Property Value TEntity"
  },
  "api/Falcon.Contracts.CompositeFilter.html": {
    "href": "api/Falcon.Contracts.CompositeFilter.html",
    "title": "Class CompositeFilter | Falcon Documentation",
    "keywords": "Class CompositeFilter Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public class CompositeFilter : Filter, ICompositeFilter, IFilter Inheritance object Filter CompositeFilter Implements ICompositeFilter IFilter Inherited Members Filter.Kind object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.And(CompositeFilter, CompositeFilter) Extensions.And(CompositeFilter, ConditionFilter) Extensions.And(CompositeFilter, Func<CompositeFilter, CompositeFilter>) Extensions.And(CompositeFilter, string, FieldOperator, object) Extensions.And(CompositeFilter, string, UnaryOperator) Extensions.AndEqual(CompositeFilter, string, object) Extensions.AndGreaterThan(CompositeFilter, string, object) Extensions.AndGreaterThanOrEqual(CompositeFilter, string, object) Extensions.AndIn(CompositeFilter, string, object[]) Extensions.AndIsNotNull(CompositeFilter, string) Extensions.AndIsNull(CompositeFilter, string) Extensions.AndLessThan(CompositeFilter, string, object) Extensions.AndLessThanOrEqual(CompositeFilter, string, object) Extensions.AndNotEqual(CompositeFilter, string, object) Extensions.AndNotIn(CompositeFilter, string, object[]) Extensions.Or(CompositeFilter, CompositeFilter) Extensions.Or(CompositeFilter, ConditionFilter) Extensions.Or(CompositeFilter, Func<CompositeFilter, CompositeFilter>) Extensions.Or(CompositeFilter, string, FieldOperator, object) Extensions.Or(CompositeFilter, string, UnaryOperator) Extensions.OrEqual(CompositeFilter, string, object) Extensions.OrGreaterThan(CompositeFilter, string, object) Extensions.OrGreaterThanOrEqual(CompositeFilter, string, object) Extensions.OrIn(CompositeFilter, string, object[]) Extensions.OrIsNotNull(CompositeFilter, string) Extensions.OrIsNull(CompositeFilter, string) Extensions.OrLessThan(CompositeFilter, string, object) Extensions.OrLessThanOrEqual(CompositeFilter, string, object) Extensions.OrNotEqual(CompositeFilter, string, object) Extensions.OrNotIn(CompositeFilter, string, object[]) EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) FilterExtensions.GetFilterExpression<TEntity>(IFilter) Constructors CompositeFilter(CompositeOperator, params Filter[]?) public CompositeFilter(CompositeOperator op = CompositeOperator.And, params Filter[]? filters) Parameters op CompositeOperator filters Filter[] Properties Filters public Filter[]? Filters { get; set; } Property Value Filter[] Op public CompositeOperator Op { get; set; } Property Value CompositeOperator"
  },
  "api/Falcon.Contracts.CompositeOperator.html": {
    "href": "api/Falcon.Contracts.CompositeOperator.html",
    "title": "Enum CompositeOperator | Falcon Documentation",
    "keywords": "Enum CompositeOperator Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public enum CompositeOperator Fields [EnumMember] And = 0 [EnumMember] Or = 1"
  },
  "api/Falcon.Contracts.CompositeRequest.html": {
    "href": "api/Falcon.Contracts.CompositeRequest.html",
    "title": "Class CompositeRequest | Falcon Documentation",
    "keywords": "Class CompositeRequest Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public class CompositeRequest : ICompositeRequest, IApiRequest Inheritance object CompositeRequest Implements ICompositeRequest IApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Extensions.Add(ICompositeRequest, string, IApiRequest) Constructors CompositeRequest() public CompositeRequest() Properties Requests public Dictionary<string, IApiRequest>? Requests { get; set; } Property Value Dictionary<string, IApiRequest>"
  },
  "api/Falcon.Contracts.CompositeResponse.html": {
    "href": "api/Falcon.Contracts.CompositeResponse.html",
    "title": "Class CompositeResponse | Falcon Documentation",
    "keywords": "Class CompositeResponse Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public record CompositeResponse : ICompositeResponse, IApiResponse, IEquatable<CompositeResponse> Inheritance object CompositeResponse Implements ICompositeResponse IApiResponse IEquatable<CompositeResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors CompositeResponse(Dictionary<string, IApiResponse>?) public CompositeResponse(Dictionary<string, IApiResponse>? data = null) Parameters data Dictionary<string, IApiResponse> Properties Data public Dictionary<string, IApiResponse>? Data { get; set; } Property Value Dictionary<string, IApiResponse>"
  },
  "api/Falcon.Contracts.ConditionFilter.html": {
    "href": "api/Falcon.Contracts.ConditionFilter.html",
    "title": "Class ConditionFilter | Falcon Documentation",
    "keywords": "Class ConditionFilter Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public class ConditionFilter : Filter, IConditionFilter, IFilter Inheritance object Filter ConditionFilter Implements IConditionFilter IFilter Derived FieldFilter UnaryFilter Inherited Members Filter.Kind object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) FilterExtensions.GetFilterExpression<TEntity>(IFilter) Constructors ConditionFilter(string, FilterType) public ConditionFilter(string field, FilterType filterType) Parameters field string filterType FilterType Properties Field public string Field { get; set; } Property Value string"
  },
  "api/Falcon.Contracts.Direction.html": {
    "href": "api/Falcon.Contracts.Direction.html",
    "title": "Enum Direction | Falcon Documentation",
    "keywords": "Enum Direction Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public enum Direction Fields [EnumMember(Value = \"ASC\")] Ascending = 0 [EnumMember(Value = \"DESC\")] Descending = 1"
  },
  "api/Falcon.Contracts.ErrorResponse.html": {
    "href": "api/Falcon.Contracts.ErrorResponse.html",
    "title": "Class ErrorResponse | Falcon Documentation",
    "keywords": "Class ErrorResponse Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public record ErrorResponse : IErrorResponse, IApiResponse, IEquatable<ErrorResponse> Inheritance object ErrorResponse Implements IErrorResponse IApiResponse IEquatable<ErrorResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ExceptionExtension.SetCode(ErrorResponse, string) ExceptionExtension.SetFromException(ErrorResponse, Exception) ExceptionExtension.SetMessage(ErrorResponse, string) ExceptionExtension.SetStackTrace(ErrorResponse, string) EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties Code public string? Code { get; set; } Property Value string Message public string? Message { get; set; } Property Value string StackTrace public string? StackTrace { get; set; } Property Value string"
  },
  "api/Falcon.Contracts.ExceptionExtension.html": {
    "href": "api/Falcon.Contracts.ExceptionExtension.html",
    "title": "Class ExceptionExtension | Falcon Documentation",
    "keywords": "Class ExceptionExtension Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public static class ExceptionExtension Inheritance object ExceptionExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetInnerStackTrace(Exception?) public static string GetInnerStackTrace(this Exception? exception) Parameters exception Exception Returns string SetCode(ErrorResponse, string) public static ErrorResponse SetCode(this ErrorResponse error, string code) Parameters error ErrorResponse code string Returns ErrorResponse SetFromException(ErrorResponse, Exception) public static ErrorResponse SetFromException(this ErrorResponse error, Exception ex) Parameters error ErrorResponse ex Exception Returns ErrorResponse SetMessage(ErrorResponse, string) public static ErrorResponse SetMessage(this ErrorResponse error, string message) Parameters error ErrorResponse message string Returns ErrorResponse SetStackTrace(ErrorResponse, string) public static ErrorResponse SetStackTrace(this ErrorResponse error, string stackTrace) Parameters error ErrorResponse stackTrace string Returns ErrorResponse"
  },
  "api/Falcon.Contracts.Extensions.html": {
    "href": "api/Falcon.Contracts.Extensions.html",
    "title": "Class Extensions | Falcon Documentation",
    "keywords": "Class Extensions Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public static class Extensions Inheritance object Extensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Add(ICompositeRequest, string, IApiRequest) public static ICompositeRequest Add(this ICompositeRequest source, string key, IApiRequest value) Parameters source ICompositeRequest key string value IApiRequest Returns ICompositeRequest And(CompositeFilter, CompositeFilter) public static CompositeFilter And(this CompositeFilter source, CompositeFilter filter) Parameters source CompositeFilter filter CompositeFilter Returns CompositeFilter And(CompositeFilter, ConditionFilter) public static CompositeFilter And(this CompositeFilter source, ConditionFilter filter) Parameters source CompositeFilter filter ConditionFilter Returns CompositeFilter And(CompositeFilter, Func<CompositeFilter, CompositeFilter>) public static CompositeFilter And(this CompositeFilter source, Func<CompositeFilter, CompositeFilter> filterAction) Parameters source CompositeFilter filterAction Func<CompositeFilter, CompositeFilter> Returns CompositeFilter And(CompositeFilter, string, FieldOperator, object) public static CompositeFilter And(this CompositeFilter source, string field, FieldOperator op, object value) Parameters source CompositeFilter field string op FieldOperator value object Returns CompositeFilter And(CompositeFilter, string, UnaryOperator) public static CompositeFilter And(this CompositeFilter source, string field, UnaryOperator op) Parameters source CompositeFilter field string op UnaryOperator Returns CompositeFilter AndEqual(CompositeFilter, string, object) public static CompositeFilter AndEqual(this CompositeFilter source, string field, object value) Parameters source CompositeFilter field string value object Returns CompositeFilter AndGreaterThan(CompositeFilter, string, object) public static CompositeFilter AndGreaterThan(this CompositeFilter source, string field, object value) Parameters source CompositeFilter field string value object Returns CompositeFilter AndGreaterThanOrEqual(CompositeFilter, string, object) public static CompositeFilter AndGreaterThanOrEqual(this CompositeFilter source, string field, object value) Parameters source CompositeFilter field string value object Returns CompositeFilter AndIn(CompositeFilter, string, object[]) public static CompositeFilter AndIn(this CompositeFilter source, string field, object[] values) Parameters source CompositeFilter field string values object[] Returns CompositeFilter AndIsNotNull(CompositeFilter, string) public static CompositeFilter AndIsNotNull(this CompositeFilter source, string field) Parameters source CompositeFilter field string Returns CompositeFilter AndIsNull(CompositeFilter, string) public static CompositeFilter AndIsNull(this CompositeFilter source, string field) Parameters source CompositeFilter field string Returns CompositeFilter AndLessThan(CompositeFilter, string, object) public static CompositeFilter AndLessThan(this CompositeFilter source, string field, object value) Parameters source CompositeFilter field string value object Returns CompositeFilter AndLessThanOrEqual(CompositeFilter, string, object) public static CompositeFilter AndLessThanOrEqual(this CompositeFilter source, string field, object value) Parameters source CompositeFilter field string value object Returns CompositeFilter AndNotEqual(CompositeFilter, string, object) public static CompositeFilter AndNotEqual(this CompositeFilter source, string field, object value) Parameters source CompositeFilter field string value object Returns CompositeFilter AndNotIn(CompositeFilter, string, object[]) public static CompositeFilter AndNotIn(this CompositeFilter source, string field, object[] values) Parameters source CompositeFilter field string values object[] Returns CompositeFilter Or(CompositeFilter, CompositeFilter) public static CompositeFilter Or(this CompositeFilter source, CompositeFilter filter) Parameters source CompositeFilter filter CompositeFilter Returns CompositeFilter Or(CompositeFilter, ConditionFilter) public static CompositeFilter Or(this CompositeFilter source, ConditionFilter filter) Parameters source CompositeFilter filter ConditionFilter Returns CompositeFilter Or(CompositeFilter, Func<CompositeFilter, CompositeFilter>) public static CompositeFilter Or(this CompositeFilter source, Func<CompositeFilter, CompositeFilter> filterAction) Parameters source CompositeFilter filterAction Func<CompositeFilter, CompositeFilter> Returns CompositeFilter Or(CompositeFilter, string, FieldOperator, object) public static CompositeFilter Or(this CompositeFilter source, string field, FieldOperator op, object value) Parameters source CompositeFilter field string op FieldOperator value object Returns CompositeFilter Or(CompositeFilter, string, UnaryOperator) public static CompositeFilter Or(this CompositeFilter source, string field, UnaryOperator op) Parameters source CompositeFilter field string op UnaryOperator Returns CompositeFilter OrEqual(CompositeFilter, string, object) public static CompositeFilter OrEqual(this CompositeFilter source, string field, object value) Parameters source CompositeFilter field string value object Returns CompositeFilter OrGreaterThan(CompositeFilter, string, object) public static CompositeFilter OrGreaterThan(this CompositeFilter source, string field, object value) Parameters source CompositeFilter field string value object Returns CompositeFilter OrGreaterThanOrEqual(CompositeFilter, string, object) public static CompositeFilter OrGreaterThanOrEqual(this CompositeFilter source, string field, object value) Parameters source CompositeFilter field string value object Returns CompositeFilter OrIn(CompositeFilter, string, object[]) public static CompositeFilter OrIn(this CompositeFilter source, string field, object[] values) Parameters source CompositeFilter field string values object[] Returns CompositeFilter OrIsNotNull(CompositeFilter, string) public static CompositeFilter OrIsNotNull(this CompositeFilter source, string field) Parameters source CompositeFilter field string Returns CompositeFilter OrIsNull(CompositeFilter, string) public static CompositeFilter OrIsNull(this CompositeFilter source, string field) Parameters source CompositeFilter field string Returns CompositeFilter OrLessThan(CompositeFilter, string, object) public static CompositeFilter OrLessThan(this CompositeFilter source, string field, object value) Parameters source CompositeFilter field string value object Returns CompositeFilter OrLessThanOrEqual(CompositeFilter, string, object) public static CompositeFilter OrLessThanOrEqual(this CompositeFilter source, string field, object value) Parameters source CompositeFilter field string value object Returns CompositeFilter OrNotEqual(CompositeFilter, string, object) public static CompositeFilter OrNotEqual(this CompositeFilter source, string field, object value) Parameters source CompositeFilter field string value object Returns CompositeFilter OrNotIn(CompositeFilter, string, object[]) public static CompositeFilter OrNotIn(this CompositeFilter source, string field, object[] values) Parameters source CompositeFilter field string values object[] Returns CompositeFilter SetData(IQueryResponse, IEnumerable<object>) public static IQueryResponse SetData(this IQueryResponse source, IEnumerable<object> data) Parameters source IQueryResponse data IEnumerable<object> Returns IQueryResponse SetPageContext(IQueryResponse, IPageContext) public static IQueryResponse SetPageContext(this IQueryResponse source, IPageContext pc) Parameters source IQueryResponse pc IPageContext Returns IQueryResponse"
  },
  "api/Falcon.Contracts.FieldFilter.html": {
    "href": "api/Falcon.Contracts.FieldFilter.html",
    "title": "Class FieldFilter | Falcon Documentation",
    "keywords": "Class FieldFilter Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public class FieldFilter : ConditionFilter, IFieldFilter, IConditionFilter, IFilter Inheritance object Filter ConditionFilter FieldFilter Implements IFieldFilter IConditionFilter IFilter Inherited Members ConditionFilter.Field Filter.Kind object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) FilterExtensions.GetFilterExpression<TEntity>(IFilter) Constructors FieldFilter(string, FieldOperator, object, FilterValueType?) public FieldFilter(string field, FieldOperator op, object value, FilterValueType? type = null) Parameters field string op FieldOperator value object type FilterValueType? Properties Op public FieldOperator Op { get; set; } Property Value FieldOperator Type public FilterValueType? Type { get; set; } Property Value FilterValueType? Value public object? Value { get; set; } Property Value object"
  },
  "api/Falcon.Contracts.FieldOperator.html": {
    "href": "api/Falcon.Contracts.FieldOperator.html",
    "title": "Enum FieldOperator | Falcon Documentation",
    "keywords": "Enum FieldOperator Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public enum FieldOperator Fields [EnumMember(Value = \"bw\")] Between = 6 [EnumMember(Value = \"contains\")] Contains = 11 [EnumMember(Value = \"ends\")] EndsWith = 9 [EnumMember(Value = \"eq\")] Equal = 0 [EnumMember(Value = \"gt\")] GreaterThan = 2 [EnumMember(Value = \"ge\")] GreaterThanOrEqual = 3 [EnumMember(Value = \"in\")] In = 7 [EnumMember(Value = \"lt\")] LessThan = 4 [EnumMember(Value = \"le\")] LessThanOrEqual = 5 [EnumMember(Value = \"ne\")] NotEqual = 1 [EnumMember(Value = \"notin\")] NotIn = 8 [EnumMember(Value = \"starts\")] StartsWith = 10"
  },
  "api/Falcon.Contracts.Filter.html": {
    "href": "api/Falcon.Contracts.Filter.html",
    "title": "Class Filter | Falcon Documentation",
    "keywords": "Class Filter Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll [JsonConverter(typeof(FilterConverter))] public class Filter : IFilter Inheritance object Filter Implements IFilter Derived CompositeFilter ConditionFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) FilterExtensions.GetFilterExpression<TEntity>(IFilter) Constructors Filter(FilterType) public Filter(FilterType filterType) Parameters filterType FilterType Properties Kind public FilterType Kind { get; set; } Property Value FilterType"
  },
  "api/Falcon.Contracts.FilterConverter.html": {
    "href": "api/Falcon.Contracts.FilterConverter.html",
    "title": "Class FilterConverter | Falcon Documentation",
    "keywords": "Class FilterConverter Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public class FilterConverter : JsonConverter Inheritance object JsonConverter FilterConverter Inherited Members JsonConverter.CanRead object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties CanWrite Gets a value indicating whether this Newtonsoft.Json.JsonConverter can write JSON. public override bool CanWrite { get; } Property Value bool true if this Newtonsoft.Json.JsonConverter can write JSON; otherwise, false. Methods CanConvert(Type) Determines whether this instance can convert the specified object type. public override bool CanConvert(Type objectType) Parameters objectType Type Type of the object. Returns bool true if this instance can convert the specified object type; otherwise, false. ReadJson(JsonReader, Type, object?, JsonSerializer) Reads the JSON representation of the object. public override Filter ReadJson(JsonReader reader, Type objectType, object? existingValue, JsonSerializer serializer) Parameters reader JsonReader The Newtonsoft.Json.JsonReader to read from. objectType Type Type of the object. existingValue object The existing value of object being read. serializer JsonSerializer The calling serializer. Returns Filter The object value. WriteJson(JsonWriter, object?, JsonSerializer) Writes the JSON representation of the object. public override void WriteJson(JsonWriter writer, object? value, JsonSerializer serializer) Parameters writer JsonWriter The Newtonsoft.Json.JsonWriter to write to. value object The value. serializer JsonSerializer The calling serializer."
  },
  "api/Falcon.Contracts.FilterType.html": {
    "href": "api/Falcon.Contracts.FilterType.html",
    "title": "Enum FilterType | Falcon Documentation",
    "keywords": "Enum FilterType Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public enum FilterType Fields [EnumMember(Value = \"c\")] Composite = 0 [EnumMember(Value = \"f\")] Field = 1 [EnumMember(Value = \"u\")] Unary = 2"
  },
  "api/Falcon.Contracts.FilterValueType.html": {
    "href": "api/Falcon.Contracts.FilterValueType.html",
    "title": "Enum FilterValueType | Falcon Documentation",
    "keywords": "Enum FilterValueType Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public enum FilterValueType Fields [EnumMember] DateOnly = 1 [EnumMember] UtcDateTime = 0"
  },
  "api/Falcon.Contracts.IApiRequest.html": {
    "href": "api/Falcon.Contracts.IApiRequest.html",
    "title": "Interface IApiRequest | Falcon Documentation",
    "keywords": "Interface IApiRequest Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public interface IApiRequest Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime)"
  },
  "api/Falcon.Contracts.IApiResponse.html": {
    "href": "api/Falcon.Contracts.IApiResponse.html",
    "title": "Interface IApiResponse | Falcon Documentation",
    "keywords": "Interface IApiResponse Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public interface IApiResponse Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime)"
  },
  "api/Falcon.Contracts.ICommandRequest-1.html": {
    "href": "api/Falcon.Contracts.ICommandRequest-1.html",
    "title": "Interface ICommandRequest<TEntity> | Falcon Documentation",
    "keywords": "Interface ICommandRequest<TEntity> Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public interface ICommandRequest<TEntity> : IApiRequest Type Parameters TEntity Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties Data TEntity? Data { get; set; } Property Value TEntity"
  },
  "api/Falcon.Contracts.ICommandResponse-1.html": {
    "href": "api/Falcon.Contracts.ICommandResponse-1.html",
    "title": "Interface ICommandResponse<TEntity> | Falcon Documentation",
    "keywords": "Interface ICommandResponse<TEntity> Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public interface ICommandResponse<TEntity> : IApiResponse Type Parameters TEntity Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties Data TEntity? Data { get; set; } Property Value TEntity"
  },
  "api/Falcon.Contracts.ICompositeFilter.html": {
    "href": "api/Falcon.Contracts.ICompositeFilter.html",
    "title": "Interface ICompositeFilter | Falcon Documentation",
    "keywords": "Interface ICompositeFilter Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public interface ICompositeFilter : IFilter Inherited Members IFilter.Kind Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) FilterExtensions.GetFilterExpression<TEntity>(IFilter) Properties Filters Filter[]? Filters { get; set; } Property Value Filter[] Op CompositeOperator Op { get; set; } Property Value CompositeOperator"
  },
  "api/Falcon.Contracts.ICompositeRequest.html": {
    "href": "api/Falcon.Contracts.ICompositeRequest.html",
    "title": "Interface ICompositeRequest | Falcon Documentation",
    "keywords": "Interface ICompositeRequest Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public interface ICompositeRequest : IApiRequest Extension Methods Extensions.Add(ICompositeRequest, string, IApiRequest) EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties Requests Dictionary<string, IApiRequest>? Requests { get; set; } Property Value Dictionary<string, IApiRequest>"
  },
  "api/Falcon.Contracts.ICompositeResponse.html": {
    "href": "api/Falcon.Contracts.ICompositeResponse.html",
    "title": "Interface ICompositeResponse | Falcon Documentation",
    "keywords": "Interface ICompositeResponse Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public interface ICompositeResponse : IApiResponse Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties Data Dictionary<string, IApiResponse>? Data { get; set; } Property Value Dictionary<string, IApiResponse>"
  },
  "api/Falcon.Contracts.IConditionFilter.html": {
    "href": "api/Falcon.Contracts.IConditionFilter.html",
    "title": "Interface IConditionFilter | Falcon Documentation",
    "keywords": "Interface IConditionFilter Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public interface IConditionFilter : IFilter Inherited Members IFilter.Kind Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) FilterExtensions.GetFilterExpression<TEntity>(IFilter) Properties Field string Field { get; set; } Property Value string"
  },
  "api/Falcon.Contracts.IErrorResponse.html": {
    "href": "api/Falcon.Contracts.IErrorResponse.html",
    "title": "Interface IErrorResponse | Falcon Documentation",
    "keywords": "Interface IErrorResponse Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public interface IErrorResponse : IApiResponse Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties Code string? Code { get; set; } Property Value string Message string? Message { get; set; } Property Value string StackTrace string? StackTrace { get; set; } Property Value string"
  },
  "api/Falcon.Contracts.IFieldFilter.html": {
    "href": "api/Falcon.Contracts.IFieldFilter.html",
    "title": "Interface IFieldFilter | Falcon Documentation",
    "keywords": "Interface IFieldFilter Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public interface IFieldFilter : IConditionFilter, IFilter Inherited Members IConditionFilter.Field IFilter.Kind Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) FilterExtensions.GetFilterExpression<TEntity>(IFilter) Properties Op FieldOperator Op { get; set; } Property Value FieldOperator Type FilterValueType? Type { get; set; } Property Value FilterValueType? Value object? Value { get; set; } Property Value object"
  },
  "api/Falcon.Contracts.IFilter.html": {
    "href": "api/Falcon.Contracts.IFilter.html",
    "title": "Interface IFilter | Falcon Documentation",
    "keywords": "Interface IFilter Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public interface IFilter Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) FilterExtensions.GetFilterExpression<TEntity>(IFilter) Properties Kind FilterType Kind { get; set; } Property Value FilterType"
  },
  "api/Falcon.Contracts.IInclude.html": {
    "href": "api/Falcon.Contracts.IInclude.html",
    "title": "Interface IInclude | Falcon Documentation",
    "keywords": "Interface IInclude Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public interface IInclude Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties Includes Include[]? Includes { get; set; } Property Value Include[] Name string Name { get; set; } Property Value string Select string[]? Select { get; set; } Property Value string[]"
  },
  "api/Falcon.Contracts.IPageContext.html": {
    "href": "api/Falcon.Contracts.IPageContext.html",
    "title": "Interface IPageContext | Falcon Documentation",
    "keywords": "Interface IPageContext Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public interface IPageContext Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties PageNo int PageNo { get; set; } Property Value int PageSize int PageSize { get; } Property Value int Skip int Skip { get; } Property Value int Total long Total { get; set; } Property Value long"
  },
  "api/Falcon.Contracts.IQueryRequest.html": {
    "href": "api/Falcon.Contracts.IQueryRequest.html",
    "title": "Interface IQueryRequest | Falcon Documentation",
    "keywords": "Interface IQueryRequest Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public interface IQueryRequest : IApiRequest Extension Methods IQueryRequestExtensions.AndWhere(IQueryRequest, Func<CompositeFilter, CompositeFilter>) IQueryRequestExtensions.Include(IQueryRequest, Include) IQueryRequestExtensions.Include(IQueryRequest, string) IQueryRequestExtensions.Includes(IQueryRequest, params Include[]) IQueryRequestExtensions.NextPage(IQueryRequest) IQueryRequestExtensions.OrWhere(IQueryRequest, Func<CompositeFilter, CompositeFilter>) IQueryRequestExtensions.Page(IQueryRequest, PageContext) IQueryRequestExtensions.Page(IQueryRequest, int, int) IQueryRequestExtensions.Select(IQueryRequest, params string[]) IQueryRequestExtensions.Sort(IQueryRequest, Sort) IQueryRequestExtensions.Sort(IQueryRequest, Sort[]) IQueryRequestExtensions.Sort(IQueryRequest, string, Direction) IQueryRequestExtensions.Where(IQueryRequest, IFilter) IQueryRequestExtensions.Where(IQueryRequest, string, FieldOperator, object) EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties Includes Include[]? Includes { get; set; } Property Value Include[] Page PageContext? Page { get; set; } Property Value PageContext Select string[]? Select { get; set; } Property Value string[] Sort Sort[]? Sort { get; set; } Property Value Sort[] Where Filter? Where { get; set; } Property Value Filter"
  },
  "api/Falcon.Contracts.IQueryRequestExtensions.html": {
    "href": "api/Falcon.Contracts.IQueryRequestExtensions.html",
    "title": "Class IQueryRequestExtensions | Falcon Documentation",
    "keywords": "Class IQueryRequestExtensions Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public static class IQueryRequestExtensions Inheritance object IQueryRequestExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AndWhere(IQueryRequest, Func<CompositeFilter, CompositeFilter>) public static IQueryRequest AndWhere(this IQueryRequest request, Func<CompositeFilter, CompositeFilter> filterAction) Parameters request IQueryRequest filterAction Func<CompositeFilter, CompositeFilter> Returns IQueryRequest Include(IQueryRequest, Include) public static IQueryRequest Include(this IQueryRequest request, Include include) Parameters request IQueryRequest include Include Returns IQueryRequest Include(IQueryRequest, string) public static IQueryRequest Include(this IQueryRequest request, string name) Parameters request IQueryRequest name string Returns IQueryRequest Includes(IQueryRequest, params Include[]) public static IQueryRequest Includes(this IQueryRequest request, params Include[] includes) Parameters request IQueryRequest includes Include[] Returns IQueryRequest NextPage(IQueryRequest) public static IQueryRequest NextPage(this IQueryRequest request) Parameters request IQueryRequest Returns IQueryRequest OrWhere(IQueryRequest, Func<CompositeFilter, CompositeFilter>) public static IQueryRequest OrWhere(this IQueryRequest request, Func<CompositeFilter, CompositeFilter> filterAction) Parameters request IQueryRequest filterAction Func<CompositeFilter, CompositeFilter> Returns IQueryRequest Page(IQueryRequest, PageContext) public static IQueryRequest Page(this IQueryRequest request, PageContext page) Parameters request IQueryRequest page PageContext Returns IQueryRequest Page(IQueryRequest, int, int) public static IQueryRequest Page(this IQueryRequest request, int pageNo, int pageSize) Parameters request IQueryRequest pageNo int pageSize int Returns IQueryRequest Select(IQueryRequest, params string[]) public static IQueryRequest Select(this IQueryRequest request, params string[] fields) Parameters request IQueryRequest fields string[] Returns IQueryRequest Sort(IQueryRequest, Sort) public static IQueryRequest Sort(this IQueryRequest request, Sort sort) Parameters request IQueryRequest sort Sort Returns IQueryRequest Sort(IQueryRequest, Sort[]) public static IQueryRequest Sort(this IQueryRequest request, Sort[] sort) Parameters request IQueryRequest sort Sort[] Returns IQueryRequest Sort(IQueryRequest, string, Direction) public static IQueryRequest Sort(this IQueryRequest request, string field, Direction direction) Parameters request IQueryRequest field string direction Direction Returns IQueryRequest Where(IQueryRequest, IFilter) public static IQueryRequest Where(this IQueryRequest request, IFilter filter) Parameters request IQueryRequest filter IFilter Returns IQueryRequest Where(IQueryRequest, string, FieldOperator, object) public static IQueryRequest Where(this IQueryRequest request, string field, FieldOperator op, object value) Parameters request IQueryRequest field string op FieldOperator value object Returns IQueryRequest"
  },
  "api/Falcon.Contracts.IQueryResponse.html": {
    "href": "api/Falcon.Contracts.IQueryResponse.html",
    "title": "Interface IQueryResponse | Falcon Documentation",
    "keywords": "Interface IQueryResponse Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public interface IQueryResponse : IApiResponse Extension Methods Extensions.SetData(IQueryResponse, IEnumerable<object>) Extensions.SetPageContext(IQueryResponse, IPageContext) EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties Data IEnumerable<object>? Data { get; set; } Property Value IEnumerable<object> Page IPageContext? Page { get; set; } Property Value IPageContext"
  },
  "api/Falcon.Contracts.ISort.html": {
    "href": "api/Falcon.Contracts.ISort.html",
    "title": "Interface ISort | Falcon Documentation",
    "keywords": "Interface ISort Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public interface ISort Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties Direction Direction Direction { get; set; } Property Value Direction Field string Field { get; set; } Property Value string"
  },
  "api/Falcon.Contracts.IUnaryFilter.html": {
    "href": "api/Falcon.Contracts.IUnaryFilter.html",
    "title": "Interface IUnaryFilter | Falcon Documentation",
    "keywords": "Interface IUnaryFilter Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public interface IUnaryFilter : IConditionFilter, IFilter Inherited Members IConditionFilter.Field IFilter.Kind Extension Methods FilterExtensions.GetFilterExpression<TEntity>(IFilter) EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties Op UnaryOperator Op { get; set; } Property Value UnaryOperator"
  },
  "api/Falcon.Contracts.Include.html": {
    "href": "api/Falcon.Contracts.Include.html",
    "title": "Class Include | Falcon Documentation",
    "keywords": "Class Include Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public class Include : IInclude Inheritance object Include Implements IInclude Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors Include(string) public Include(string name) Parameters name string Include(string, string[], Include[]?) public Include(string name, string[] columns, Include[]? includes) Parameters name string columns string[] includes Include[] Properties Includes public Include[]? Includes { get; set; } Property Value Include[] Name public string Name { get; set; } Property Value string Select public string[]? Select { get; set; } Property Value string[]"
  },
  "api/Falcon.Contracts.PageContext.html": {
    "href": "api/Falcon.Contracts.PageContext.html",
    "title": "Class PageContext | Falcon Documentation",
    "keywords": "Class PageContext Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public class PageContext : IPageContext Inheritance object PageContext Implements IPageContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods PageContextExtensions.NextPage(PageContext) PageContextExtensions.SetTotal(PageContext, long) EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors PageContext(int, int) public PageContext(int pageNo = 1, int pageSize = 25) Parameters pageNo int pageSize int Properties PageNo public int PageNo { get; set; } Property Value int PageSize public int PageSize { get; } Property Value int Skip public int Skip { get; } Property Value int Total public long Total { get; set; } Property Value long"
  },
  "api/Falcon.Contracts.PageContextExtensions.html": {
    "href": "api/Falcon.Contracts.PageContextExtensions.html",
    "title": "Class PageContextExtensions | Falcon Documentation",
    "keywords": "Class PageContextExtensions Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public static class PageContextExtensions Inheritance object PageContextExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods NextPage(PageContext) public static PageContext NextPage(this PageContext pc) Parameters pc PageContext Returns PageContext SetTotal(PageContext, long) public static PageContext SetTotal(this PageContext pc, long total) Parameters pc PageContext total long Returns PageContext"
  },
  "api/Falcon.Contracts.QueryRequest.html": {
    "href": "api/Falcon.Contracts.QueryRequest.html",
    "title": "Class QueryRequest | Falcon Documentation",
    "keywords": "Class QueryRequest Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public class QueryRequest : IQueryRequest, IApiRequest Inheritance object QueryRequest Implements IQueryRequest IApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IQueryRequestExtensions.AndWhere(IQueryRequest, Func<CompositeFilter, CompositeFilter>) IQueryRequestExtensions.Include(IQueryRequest, Include) IQueryRequestExtensions.Include(IQueryRequest, string) IQueryRequestExtensions.Includes(IQueryRequest, params Include[]) IQueryRequestExtensions.NextPage(IQueryRequest) IQueryRequestExtensions.OrWhere(IQueryRequest, Func<CompositeFilter, CompositeFilter>) IQueryRequestExtensions.Page(IQueryRequest, PageContext) IQueryRequestExtensions.Page(IQueryRequest, int, int) IQueryRequestExtensions.Select(IQueryRequest, params string[]) IQueryRequestExtensions.Sort(IQueryRequest, Sort) IQueryRequestExtensions.Sort(IQueryRequest, Sort[]) IQueryRequestExtensions.Sort(IQueryRequest, string, Direction) IQueryRequestExtensions.Where(IQueryRequest, IFilter) IQueryRequestExtensions.Where(IQueryRequest, string, FieldOperator, object) EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors QueryRequest() public QueryRequest() QueryRequest(PageContext) public QueryRequest(PageContext page) Parameters page PageContext QueryRequest(string[], Include[]?, Filter?, Sort[]?, PageContext?) public QueryRequest(string[] select, Include[]? includes = null, Filter? where = null, Sort[]? sort = null, PageContext? page = null) Parameters select string[] includes Include[] where Filter sort Sort[] page PageContext Properties Includes public Include[]? Includes { get; set; } Property Value Include[] Page public PageContext? Page { get; set; } Property Value PageContext Select public string[]? Select { get; set; } Property Value string[] Sort public Sort[]? Sort { get; set; } Property Value Sort[] Where public Filter? Where { get; set; } Property Value Filter"
  },
  "api/Falcon.Contracts.QueryResponse.html": {
    "href": "api/Falcon.Contracts.QueryResponse.html",
    "title": "Class QueryResponse | Falcon Documentation",
    "keywords": "Class QueryResponse Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public record QueryResponse : IQueryResponse, IApiResponse, IEquatable<QueryResponse> Inheritance object QueryResponse Implements IQueryResponse IApiResponse IEquatable<QueryResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.SetData(IQueryResponse, IEnumerable<object>) Extensions.SetPageContext(IQueryResponse, IPageContext) EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors QueryResponse(IEnumerable<object>?, IPageContext?) public QueryResponse(IEnumerable<object>? data = null, IPageContext? pc = null) Parameters data IEnumerable<object> pc IPageContext Properties Data public IEnumerable<object>? Data { get; set; } Property Value IEnumerable<object> Page public IPageContext? Page { get; set; } Property Value IPageContext"
  },
  "api/Falcon.Contracts.Sort.html": {
    "href": "api/Falcon.Contracts.Sort.html",
    "title": "Class Sort | Falcon Documentation",
    "keywords": "Class Sort Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public class Sort : ISort Inheritance object Sort Implements ISort Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors Sort(string, Direction) public Sort(string field, Direction direction) Parameters field string direction Direction Properties Direction public Direction Direction { get; set; } Property Value Direction Field public string Field { get; set; } Property Value string"
  },
  "api/Falcon.Contracts.UnaryFilter.html": {
    "href": "api/Falcon.Contracts.UnaryFilter.html",
    "title": "Class UnaryFilter | Falcon Documentation",
    "keywords": "Class UnaryFilter Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public class UnaryFilter : ConditionFilter, IUnaryFilter, IConditionFilter, IFilter Inheritance object Filter ConditionFilter UnaryFilter Implements IUnaryFilter IConditionFilter IFilter Inherited Members ConditionFilter.Field Filter.Kind object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FilterExtensions.GetFilterExpression<TEntity>(IFilter) EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors UnaryFilter(string, UnaryOperator) public UnaryFilter(string field, UnaryOperator op) Parameters field string op UnaryOperator Properties Op public UnaryOperator Op { get; set; } Property Value UnaryOperator"
  },
  "api/Falcon.Contracts.UnaryOperator.html": {
    "href": "api/Falcon.Contracts.UnaryOperator.html",
    "title": "Enum UnaryOperator | Falcon Documentation",
    "keywords": "Enum UnaryOperator Namespace Falcon.Contracts Assembly Falcon.Contracts.Abstractions.dll public enum UnaryOperator Fields [EnumMember(Value = \"notnull\")] IsNotNull = 1 [EnumMember(Value = \"null\")] IsNull = 0"
  },
  "api/Falcon.Contracts.html": {
    "href": "api/Falcon.Contracts.html",
    "title": "Namespace Falcon.Contracts | Falcon Documentation",
    "keywords": "Namespace Falcon.Contracts Classes CommandRequest<TEntity> CommandResponse<TEntity> CompositeFilter CompositeRequest CompositeResponse ConditionFilter ErrorResponse ExceptionExtension Extensions FieldFilter Filter FilterConverter IQueryRequestExtensions Include PageContext PageContextExtensions QueryRequest QueryResponse Sort UnaryFilter Interfaces IApiRequest IApiResponse ICommandRequest<TEntity> ICommandResponse<TEntity> ICompositeFilter ICompositeRequest ICompositeResponse IConditionFilter IErrorResponse IFieldFilter IFilter IInclude IPageContext IQueryRequest IQueryResponse ISort IUnaryFilter Enums CompositeOperator Direction FieldOperator FilterType FilterValueType UnaryOperator"
  },
  "api/Falcon.Domain.Abstractions.Entity-1.html": {
    "href": "api/Falcon.Domain.Abstractions.Entity-1.html",
    "title": "Class Entity<TId> | Falcon Documentation",
    "keywords": "Class Entity<TId> Namespace Falcon.Domain.Abstractions Assembly Falcon.Domain.Abstractions.dll public abstract class Entity<TId> : IEntity<TId> Type Parameters TId Inheritance object Entity<TId> Implements IEntity<TId> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties Id public virtual required TId Id { get; set; } Property Value TId Methods GetId() public virtual TId GetId() Returns TId"
  },
  "api/Falcon.Domain.Abstractions.Exceptions.DomainException.html": {
    "href": "api/Falcon.Domain.Abstractions.Exceptions.DomainException.html",
    "title": "Class DomainException | Falcon Documentation",
    "keywords": "Class DomainException Namespace Falcon.Domain.Abstractions.Exceptions Assembly Falcon.Domain.Abstractions.dll [Serializable] public class DomainException : Exception, ISerializable Inheritance object Exception DomainException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) ExceptionExtension.GetInnerStackTrace(Exception?) Constructors DomainException() public DomainException() DomainException(string) public DomainException(string message) Parameters message string DomainException(string, Exception) public DomainException(string message, Exception innerException) Parameters message string innerException Exception"
  },
  "api/Falcon.Domain.Abstractions.Exceptions.html": {
    "href": "api/Falcon.Domain.Abstractions.Exceptions.html",
    "title": "Namespace Falcon.Domain.Abstractions.Exceptions | Falcon Documentation",
    "keywords": "Namespace Falcon.Domain.Abstractions.Exceptions Classes DomainException"
  },
  "api/Falcon.Domain.Abstractions.Interfaces.Entities.DeletableEntityStatus.html": {
    "href": "api/Falcon.Domain.Abstractions.Interfaces.Entities.DeletableEntityStatus.html",
    "title": "Enum DeletableEntityStatus | Falcon Documentation",
    "keywords": "Enum DeletableEntityStatus Namespace Falcon.Domain.Abstractions.Interfaces.Entities Assembly Falcon.Domain.Abstractions.dll public enum DeletableEntityStatus Fields [EnumMember] Active = 1 [EnumMember] Deleted = 2"
  },
  "api/Falcon.Domain.Abstractions.Interfaces.Entities.IAuditableEntity-1.html": {
    "href": "api/Falcon.Domain.Abstractions.Interfaces.Entities.IAuditableEntity-1.html",
    "title": "Interface IAuditableEntity<TUserId> | Falcon Documentation",
    "keywords": "Interface IAuditableEntity<TUserId> Namespace Falcon.Domain.Abstractions.Interfaces.Entities Assembly Falcon.Domain.Abstractions.dll public interface IAuditableEntity<TUserId> Type Parameters TUserId Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties CreatedAtUtc DateTime CreatedAtUtc { get; set; } Property Value DateTime CreatedByUserId TUserId CreatedByUserId { get; set; } Property Value TUserId ModifiedAtUtc DateTime ModifiedAtUtc { get; set; } Property Value DateTime ModifiedByUserId TUserId ModifiedByUserId { get; set; } Property Value TUserId"
  },
  "api/Falcon.Domain.Abstractions.Interfaces.Entities.ICompositeEntity.html": {
    "href": "api/Falcon.Domain.Abstractions.Interfaces.Entities.ICompositeEntity.html",
    "title": "Interface ICompositeEntity | Falcon Documentation",
    "keywords": "Interface ICompositeEntity Namespace Falcon.Domain.Abstractions.Interfaces.Entities Assembly Falcon.Domain.Abstractions.dll public interface ICompositeEntity Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime)"
  },
  "api/Falcon.Domain.Abstractions.Interfaces.Entities.IConcurrencyEntity.html": {
    "href": "api/Falcon.Domain.Abstractions.Interfaces.Entities.IConcurrencyEntity.html",
    "title": "Interface IConcurrencyEntity | Falcon Documentation",
    "keywords": "Interface IConcurrencyEntity Namespace Falcon.Domain.Abstractions.Interfaces.Entities Assembly Falcon.Domain.Abstractions.dll public interface IConcurrencyEntity Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties ConcurrencyStamp int ConcurrencyStamp { get; set; } Property Value int"
  },
  "api/Falcon.Domain.Abstractions.Interfaces.Entities.IDeletableEntity.html": {
    "href": "api/Falcon.Domain.Abstractions.Interfaces.Entities.IDeletableEntity.html",
    "title": "Interface IDeletableEntity | Falcon Documentation",
    "keywords": "Interface IDeletableEntity Namespace Falcon.Domain.Abstractions.Interfaces.Entities Assembly Falcon.Domain.Abstractions.dll public interface IDeletableEntity Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties Status DeletableEntityStatus Status { get; set; } Property Value DeletableEntityStatus"
  },
  "api/Falcon.Domain.Abstractions.Interfaces.Entities.IEntity-1.html": {
    "href": "api/Falcon.Domain.Abstractions.Interfaces.Entities.IEntity-1.html",
    "title": "Interface IEntity<TId> | Falcon Documentation",
    "keywords": "Interface IEntity<TId> Namespace Falcon.Domain.Abstractions.Interfaces.Entities Assembly Falcon.Domain.Abstractions.dll public interface IEntity<TId> Type Parameters TId Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties Id TId Id { get; set; } Property Value TId"
  },
  "api/Falcon.Domain.Abstractions.Interfaces.Entities.IMultiTenantEntity-1.html": {
    "href": "api/Falcon.Domain.Abstractions.Interfaces.Entities.IMultiTenantEntity-1.html",
    "title": "Interface IMultiTenantEntity<TId> | Falcon Documentation",
    "keywords": "Interface IMultiTenantEntity<TId> Namespace Falcon.Domain.Abstractions.Interfaces.Entities Assembly Falcon.Domain.Abstractions.dll public interface IMultiTenantEntity<TId> Type Parameters TId Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties TenantId TId TenantId { get; set; } Property Value TId"
  },
  "api/Falcon.Domain.Abstractions.Interfaces.Entities.html": {
    "href": "api/Falcon.Domain.Abstractions.Interfaces.Entities.html",
    "title": "Namespace Falcon.Domain.Abstractions.Interfaces.Entities | Falcon Documentation",
    "keywords": "Namespace Falcon.Domain.Abstractions.Interfaces.Entities Interfaces IAuditableEntity<TUserId> ICompositeEntity IConcurrencyEntity IDeletableEntity IEntity<TId> IMultiTenantEntity<TId> Enums DeletableEntityStatus"
  },
  "api/Falcon.Domain.Abstractions.Interfaces.Messages.INotification.html": {
    "href": "api/Falcon.Domain.Abstractions.Interfaces.Messages.INotification.html",
    "title": "Interface INotification | Falcon Documentation",
    "keywords": "Interface INotification Namespace Falcon.Domain.Abstractions.Interfaces.Messages Assembly Falcon.Domain.Abstractions.dll public interface INotification Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Methods PublishAsync<T>(T) Task PublishAsync<T>(T message) Parameters message T Returns Task Type Parameters T Subscribe<T>(Func<T, Task>) void Subscribe<T>(Func<T, Task> handler) Parameters handler Func<T, Task> Type Parameters T"
  },
  "api/Falcon.Domain.Abstractions.Interfaces.Messages.html": {
    "href": "api/Falcon.Domain.Abstractions.Interfaces.Messages.html",
    "title": "Namespace Falcon.Domain.Abstractions.Interfaces.Messages | Falcon Documentation",
    "keywords": "Namespace Falcon.Domain.Abstractions.Interfaces.Messages Interfaces INotification"
  },
  "api/Falcon.Domain.Abstractions.Interfaces.Repositories.IAggregateRoot.html": {
    "href": "api/Falcon.Domain.Abstractions.Interfaces.Repositories.IAggregateRoot.html",
    "title": "Interface IAggregateRoot | Falcon Documentation",
    "keywords": "Interface IAggregateRoot Namespace Falcon.Domain.Abstractions.Interfaces.Repositories Assembly Falcon.Domain.Abstractions.dll public interface IAggregateRoot Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime)"
  },
  "api/Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html": {
    "href": "api/Falcon.Domain.Abstractions.Interfaces.Repositories.IRepository-2.html",
    "title": "Interface IRepository<TId, TEntity> | Falcon Documentation",
    "keywords": "Interface IRepository<TId, TEntity> Namespace Falcon.Domain.Abstractions.Interfaces.Repositories Assembly Falcon.Domain.Abstractions.dll public interface IRepository<TId, TEntity> where TEntity : class, IEntity<TId> Type Parameters TId TEntity Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Methods CountAsync(IQueryRequest, CancellationToken) Task<long> CountAsync(IQueryRequest request, CancellationToken cancellationToken = default) Parameters request IQueryRequest cancellationToken CancellationToken Returns Task<long> CreateAsync(ICommandRequest<TEntity>, CancellationToken) Task<TEntity> CreateAsync(ICommandRequest<TEntity> request, CancellationToken cancellationToken = default) Parameters request ICommandRequest<TEntity> cancellationToken CancellationToken Returns Task<TEntity> DeleteAsync(TId, CancellationToken) Task<TEntity> DeleteAsync(TId id, CancellationToken cancellationToken = default) Parameters id TId cancellationToken CancellationToken Returns Task<TEntity> FindAsync(IQueryRequest, CancellationToken) Task<IList<TEntity>> FindAsync(IQueryRequest request, CancellationToken cancellationToken = default) Parameters request IQueryRequest cancellationToken CancellationToken Returns Task<IList<TEntity>> GetAsync(TId, CancellationToken) Task<TEntity> GetAsync(TId id, CancellationToken cancellationToken = default) Parameters id TId cancellationToken CancellationToken Returns Task<TEntity> PatchAsync(TId, ICommandRequest<JsonPatchDocument<TEntity>>, CancellationToken) Task<TEntity> PatchAsync(TId id, ICommandRequest<JsonPatchDocument<TEntity>> request, CancellationToken cancellationToken = default) Parameters id TId request ICommandRequest<JsonPatchDocument<TEntity>> cancellationToken CancellationToken Returns Task<TEntity> QueryAsync(IQueryRequest, CancellationToken) Task<IList<JObject>> QueryAsync(IQueryRequest request, CancellationToken cancellationToken = default) Parameters request IQueryRequest cancellationToken CancellationToken Returns Task<IList<JObject>> UpdateAsync(TId, ICommandRequest<TEntity>, CancellationToken) Task<TEntity> UpdateAsync(TId id, ICommandRequest<TEntity> request, CancellationToken cancellationToken = default) Parameters id TId request ICommandRequest<TEntity> cancellationToken CancellationToken Returns Task<TEntity>"
  },
  "api/Falcon.Domain.Abstractions.Interfaces.Repositories.html": {
    "href": "api/Falcon.Domain.Abstractions.Interfaces.Repositories.html",
    "title": "Namespace Falcon.Domain.Abstractions.Interfaces.Repositories | Falcon Documentation",
    "keywords": "Namespace Falcon.Domain.Abstractions.Interfaces.Repositories Interfaces IAggregateRoot IRepository<TId, TEntity>"
  },
  "api/Falcon.Domain.Abstractions.html": {
    "href": "api/Falcon.Domain.Abstractions.html",
    "title": "Namespace Falcon.Domain.Abstractions | Falcon Documentation",
    "keywords": "Namespace Falcon.Domain.Abstractions Classes Entity<TId>"
  },
  "api/Falcon.Infrastructure.Abstractions.AssemblyCache.html": {
    "href": "api/Falcon.Infrastructure.Abstractions.AssemblyCache.html",
    "title": "Class AssemblyCache | Falcon Documentation",
    "keywords": "Class AssemblyCache Namespace Falcon.Infrastructure.Abstractions Assembly Falcon.Infrastructure.Abstractions.dll public static class AssemblyCache Inheritance object AssemblyCache Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Assemblies public static Assembly[] Assemblies { get; } Property Value Assembly[] EntityTypeConfiguration public static Type[] EntityTypeConfiguration { get; } Property Value Type[] Types public static IEnumerable<Type> Types { get; } Property Value IEnumerable<Type>"
  },
  "api/Falcon.Infrastructure.Abstractions.Attributes.HomeDbAttribute.html": {
    "href": "api/Falcon.Infrastructure.Abstractions.Attributes.HomeDbAttribute.html",
    "title": "Class HomeDbAttribute | Falcon Documentation",
    "keywords": "Class HomeDbAttribute Namespace Falcon.Infrastructure.Abstractions.Attributes Assembly Falcon.Infrastructure.Abstractions.dll [AttributeUsage(AttributeTargets.Class, AllowMultiple = false)] public class HomeDbAttribute : Attribute Inheritance object Attribute HomeDbAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime)"
  },
  "api/Falcon.Infrastructure.Abstractions.Attributes.TenantDbAttribute.html": {
    "href": "api/Falcon.Infrastructure.Abstractions.Attributes.TenantDbAttribute.html",
    "title": "Class TenantDbAttribute | Falcon Documentation",
    "keywords": "Class TenantDbAttribute Namespace Falcon.Infrastructure.Abstractions.Attributes Assembly Falcon.Infrastructure.Abstractions.dll [AttributeUsage(AttributeTargets.Class, AllowMultiple = false)] public class TenantDbAttribute : Attribute Inheritance object Attribute TenantDbAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime)"
  },
  "api/Falcon.Infrastructure.Abstractions.Attributes.html": {
    "href": "api/Falcon.Infrastructure.Abstractions.Attributes.html",
    "title": "Namespace Falcon.Infrastructure.Abstractions.Attributes | Falcon Documentation",
    "keywords": "Namespace Falcon.Infrastructure.Abstractions.Attributes Classes HomeDbAttribute TenantDbAttribute"
  },
  "api/Falcon.Infrastructure.Abstractions.CreateEntityException.html": {
    "href": "api/Falcon.Infrastructure.Abstractions.CreateEntityException.html",
    "title": "Class CreateEntityException | Falcon Documentation",
    "keywords": "Class CreateEntityException Namespace Falcon.Infrastructure.Abstractions Assembly Falcon.Infrastructure.Abstractions.dll [Serializable] public class CreateEntityException : PersistenceException, ISerializable Inheritance object Exception PersistenceException CreateEntityException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) ExceptionExtension.GetInnerStackTrace(Exception?) Constructors CreateEntityException() public CreateEntityException() CreateEntityException(string?) public CreateEntityException(string? message) Parameters message string CreateEntityException(string?, Exception?) public CreateEntityException(string? message, Exception? innerException) Parameters message string innerException Exception"
  },
  "api/Falcon.Infrastructure.Abstractions.DbConfig.html": {
    "href": "api/Falcon.Infrastructure.Abstractions.DbConfig.html",
    "title": "Class DbConfig | Falcon Documentation",
    "keywords": "Class DbConfig Namespace Falcon.Infrastructure.Abstractions Assembly Falcon.Infrastructure.Abstractions.dll public class DbConfig Inheritance object DbConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties ConnectionString public string ConnectionString { get; set; } Property Value string"
  },
  "api/Falcon.Infrastructure.Abstractions.DeleteEntityException.html": {
    "href": "api/Falcon.Infrastructure.Abstractions.DeleteEntityException.html",
    "title": "Class DeleteEntityException | Falcon Documentation",
    "keywords": "Class DeleteEntityException Namespace Falcon.Infrastructure.Abstractions Assembly Falcon.Infrastructure.Abstractions.dll [Serializable] public class DeleteEntityException : PersistenceException, ISerializable Inheritance object Exception PersistenceException DeleteEntityException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) ExceptionExtension.GetInnerStackTrace(Exception?) Constructors DeleteEntityException() public DeleteEntityException() DeleteEntityException(string?) public DeleteEntityException(string? message) Parameters message string DeleteEntityException(string?, Exception?) public DeleteEntityException(string? message, Exception? innerException) Parameters message string innerException Exception"
  },
  "api/Falcon.Infrastructure.Abstractions.EntityAuditExtensions.html": {
    "href": "api/Falcon.Infrastructure.Abstractions.EntityAuditExtensions.html",
    "title": "Class EntityAuditExtensions | Falcon Documentation",
    "keywords": "Class EntityAuditExtensions Namespace Falcon.Infrastructure.Abstractions Assembly Falcon.Infrastructure.Abstractions.dll public static class EntityAuditExtensions Inheritance object EntityAuditExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) public static TEntity AuditForCreate<TId, TEntity>(this TEntity entity, TId userId, DateTime currentTime) where TEntity : class, IEntity<TId> Parameters entity TEntity userId TId currentTime DateTime Returns TEntity Type Parameters TId TEntity AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) public static TEntity AuditForUpdate<TId, TEntity>(this TEntity entity, TId userId, DateTime currentTime) where TEntity : class, IEntity<TId> Parameters entity TEntity userId TId currentTime DateTime Returns TEntity Type Parameters TId TEntity"
  },
  "api/Falcon.Infrastructure.Abstractions.IDbContextOptionsProvider.html": {
    "href": "api/Falcon.Infrastructure.Abstractions.IDbContextOptionsProvider.html",
    "title": "Interface IDbContextOptionsProvider | Falcon Documentation",
    "keywords": "Interface IDbContextOptionsProvider Namespace Falcon.Infrastructure.Abstractions Assembly Falcon.Infrastructure.Abstractions.dll public interface IDbContextOptionsProvider Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Methods GetDbContextOption(string) DbContextOptions GetDbContextOption(string connectionString) Parameters connectionString string Returns DbContextOptions"
  },
  "api/Falcon.Infrastructure.Abstractions.IRepositoryProvider.html": {
    "href": "api/Falcon.Infrastructure.Abstractions.IRepositoryProvider.html",
    "title": "Interface IRepositoryProvider | Falcon Documentation",
    "keywords": "Interface IRepositoryProvider Namespace Falcon.Infrastructure.Abstractions Assembly Falcon.Infrastructure.Abstractions.dll public interface IRepositoryProvider Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Methods GetRepository<TId, TEntity>() IRepository<TId, TEntity> GetRepository<TId, TEntity>() where TEntity : class, IEntity<TId>, new() Returns IRepository<TId, TEntity> Type Parameters TId TEntity"
  },
  "api/Falcon.Infrastructure.Abstractions.IRequestContext-1.html": {
    "href": "api/Falcon.Infrastructure.Abstractions.IRequestContext-1.html",
    "title": "Interface IRequestContext<TId> | Falcon Documentation",
    "keywords": "Interface IRequestContext<TId> Namespace Falcon.Infrastructure.Abstractions Assembly Falcon.Infrastructure.Abstractions.dll public interface IRequestContext<out TId> Type Parameters TId Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties UserId TId UserId { get; } Property Value TId"
  },
  "api/Falcon.Infrastructure.Abstractions.ITenant.html": {
    "href": "api/Falcon.Infrastructure.Abstractions.ITenant.html",
    "title": "Interface ITenant | Falcon Documentation",
    "keywords": "Interface ITenant Namespace Falcon.Infrastructure.Abstractions Assembly Falcon.Infrastructure.Abstractions.dll public interface ITenant Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties Options IDictionary<string, string?> Options { get; } Property Value IDictionary<string, string>"
  },
  "api/Falcon.Infrastructure.Abstractions.ITenantOptions-1.html": {
    "href": "api/Falcon.Infrastructure.Abstractions.ITenantOptions-1.html",
    "title": "Interface ITenantOptions<TOptions> | Falcon Documentation",
    "keywords": "Interface ITenantOptions<TOptions> Namespace Falcon.Infrastructure.Abstractions Assembly Falcon.Infrastructure.Abstractions.dll public interface ITenantOptions<out TOptions> where TOptions : new() Type Parameters TOptions Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties Value TOptions Value { get; } Property Value TOptions"
  },
  "api/Falcon.Infrastructure.Abstractions.Middlewares.ExceptionHandlingMiddleware.html": {
    "href": "api/Falcon.Infrastructure.Abstractions.Middlewares.ExceptionHandlingMiddleware.html",
    "title": "Class ExceptionHandlingMiddleware | Falcon Documentation",
    "keywords": "Class ExceptionHandlingMiddleware Namespace Falcon.Infrastructure.Abstractions.Middlewares Assembly Falcon.Infrastructure.Abstractions.dll public class ExceptionHandlingMiddleware Inheritance object ExceptionHandlingMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors ExceptionHandlingMiddleware(RequestDelegate) public ExceptionHandlingMiddleware(RequestDelegate next) Parameters next RequestDelegate Methods InvokeAsync(HttpContext) public Task InvokeAsync(HttpContext context) Parameters context HttpContext Returns Task"
  },
  "api/Falcon.Infrastructure.Abstractions.Middlewares.html": {
    "href": "api/Falcon.Infrastructure.Abstractions.Middlewares.html",
    "title": "Namespace Falcon.Infrastructure.Abstractions.Middlewares | Falcon Documentation",
    "keywords": "Namespace Falcon.Infrastructure.Abstractions.Middlewares Classes ExceptionHandlingMiddleware"
  },
  "api/Falcon.Infrastructure.Abstractions.PagedResult-1.html": {
    "href": "api/Falcon.Infrastructure.Abstractions.PagedResult-1.html",
    "title": "Class PagedResult<TResult> | Falcon Documentation",
    "keywords": "Class PagedResult<TResult> Namespace Falcon.Infrastructure.Abstractions Assembly Falcon.Infrastructure.Abstractions.dll public record PagedResult<TResult> : IEquatable<PagedResult<TResult>> Type Parameters TResult Inheritance object PagedResult<TResult> Implements IEquatable<PagedResult<TResult>> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors PagedResult(IEnumerable<TResult>, long) public PagedResult(IEnumerable<TResult> items, long count) Parameters items IEnumerable<TResult> count long Properties Count public long Count { get; set; } Property Value long Items public IEnumerable<TResult> Items { get; set; } Property Value IEnumerable<TResult>"
  },
  "api/Falcon.Infrastructure.Abstractions.PersistenceException.html": {
    "href": "api/Falcon.Infrastructure.Abstractions.PersistenceException.html",
    "title": "Class PersistenceException | Falcon Documentation",
    "keywords": "Class PersistenceException Namespace Falcon.Infrastructure.Abstractions Assembly Falcon.Infrastructure.Abstractions.dll [Serializable] public class PersistenceException : Exception, ISerializable Inheritance object Exception PersistenceException Implements ISerializable Derived CreateEntityException DeleteEntityException QueryEntityException UpdateEntityException Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) ExceptionExtension.GetInnerStackTrace(Exception?) Constructors PersistenceException() public PersistenceException() PersistenceException(string?) public PersistenceException(string? message) Parameters message string PersistenceException(string?, Exception?) public PersistenceException(string? message, Exception? innerException) Parameters message string innerException Exception"
  },
  "api/Falcon.Infrastructure.Abstractions.QueryEntityException.html": {
    "href": "api/Falcon.Infrastructure.Abstractions.QueryEntityException.html",
    "title": "Class QueryEntityException | Falcon Documentation",
    "keywords": "Class QueryEntityException Namespace Falcon.Infrastructure.Abstractions Assembly Falcon.Infrastructure.Abstractions.dll [Serializable] public class QueryEntityException : PersistenceException, ISerializable Inheritance object Exception PersistenceException QueryEntityException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) ExceptionExtension.GetInnerStackTrace(Exception?) Constructors QueryEntityException() public QueryEntityException() QueryEntityException(string?) public QueryEntityException(string? message) Parameters message string QueryEntityException(string?, Exception?) public QueryEntityException(string? message, Exception? innerException) Parameters message string innerException Exception"
  },
  "api/Falcon.Infrastructure.Abstractions.RequestContext-1.html": {
    "href": "api/Falcon.Infrastructure.Abstractions.RequestContext-1.html",
    "title": "Class RequestContext<TId> | Falcon Documentation",
    "keywords": "Class RequestContext<TId> Namespace Falcon.Infrastructure.Abstractions Assembly Falcon.Infrastructure.Abstractions.dll public class RequestContext<TId> : IRequestContext<TId> where TId : new() Type Parameters TId Inheritance object RequestContext<TId> Implements IRequestContext<TId> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties UserId public TId UserId { get; set; } Property Value TId"
  },
  "api/Falcon.Infrastructure.Abstractions.ServiceCollectionExtensions.html": {
    "href": "api/Falcon.Infrastructure.Abstractions.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | Falcon Documentation",
    "keywords": "Class ServiceCollectionExtensions Namespace Falcon.Infrastructure.Abstractions Assembly Falcon.Infrastructure.Abstractions.dll public static class ServiceCollectionExtensions Inheritance object ServiceCollectionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddInfrasttructureModule(IServiceCollection) public static IServiceCollection AddInfrasttructureModule(this IServiceCollection services) Parameters services IServiceCollection Returns IServiceCollection UseInfrastructureMiddelwares(IApplicationBuilder) public static IApplicationBuilder UseInfrastructureMiddelwares(this IApplicationBuilder app) Parameters app IApplicationBuilder Returns IApplicationBuilder UseInfrastructureModule(IApplicationBuilder) public static IApplicationBuilder UseInfrastructureModule(this IApplicationBuilder app) Parameters app IApplicationBuilder Returns IApplicationBuilder"
  },
  "api/Falcon.Infrastructure.Abstractions.TenantOptions-1.html": {
    "href": "api/Falcon.Infrastructure.Abstractions.TenantOptions-1.html",
    "title": "Class TenantOptions<TOptions> | Falcon Documentation",
    "keywords": "Class TenantOptions<TOptions> Namespace Falcon.Infrastructure.Abstractions Assembly Falcon.Infrastructure.Abstractions.dll public class TenantOptions<TOptions> : ITenantOptions<TOptions> where TOptions : new() Type Parameters TOptions Inheritance object TenantOptions<TOptions> Implements ITenantOptions<TOptions> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors TenantOptions(ITenant) public TenantOptions(ITenant tenant) Parameters tenant ITenant Properties Value public TOptions Value { get; } Property Value TOptions"
  },
  "api/Falcon.Infrastructure.Abstractions.UpdateEntityException.html": {
    "href": "api/Falcon.Infrastructure.Abstractions.UpdateEntityException.html",
    "title": "Class UpdateEntityException | Falcon Documentation",
    "keywords": "Class UpdateEntityException Namespace Falcon.Infrastructure.Abstractions Assembly Falcon.Infrastructure.Abstractions.dll [Serializable] public class UpdateEntityException : PersistenceException, ISerializable Inheritance object Exception PersistenceException UpdateEntityException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) ExceptionExtension.GetInnerStackTrace(Exception?) Constructors UpdateEntityException() public UpdateEntityException() UpdateEntityException(string?) public UpdateEntityException(string? message) Parameters message string UpdateEntityException(string?, Exception?) public UpdateEntityException(string? message, Exception? innerException) Parameters message string innerException Exception"
  },
  "api/Falcon.Infrastructure.Abstractions.html": {
    "href": "api/Falcon.Infrastructure.Abstractions.html",
    "title": "Namespace Falcon.Infrastructure.Abstractions | Falcon Documentation",
    "keywords": "Namespace Falcon.Infrastructure.Abstractions Classes AssemblyCache CreateEntityException DbConfig DeleteEntityException EntityAuditExtensions PagedResult<TResult> PersistenceException QueryEntityException RequestContext<TId> ServiceCollectionExtensions TenantOptions<TOptions> UpdateEntityException Interfaces IDbContextOptionsProvider IRepositoryProvider IRequestContext<TId> ITenant ITenantOptions<TOptions>"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Configurations.SqlDbOptions.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Configurations.SqlDbOptions.html",
    "title": "Class SqlDbOptions | Falcon Documentation",
    "keywords": "Class SqlDbOptions Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Configurations Assembly Falcon.Infrastructure.EntityFramework.Abstractions.dll public class SqlDbOptions Inheritance object SqlDbOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties ConnectionString public required string ConnectionString { get; set; } Property Value string"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Configurations.SqlDbOptionsBuilder.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Configurations.SqlDbOptionsBuilder.html",
    "title": "Class SqlDbOptionsBuilder | Falcon Documentation",
    "keywords": "Class SqlDbOptionsBuilder Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Configurations Assembly Falcon.Infrastructure.EntityFramework.Abstractions.dll public class SqlDbOptionsBuilder Inheritance object SqlDbOptionsBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Methods Build() public SqlDbOptions Build() Returns SqlDbOptions ConnectionString(string) public SqlDbOptionsBuilder ConnectionString(string connectionString) Parameters connectionString string Returns SqlDbOptionsBuilder New() public static SqlDbOptionsBuilder New() Returns SqlDbOptionsBuilder"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Configurations.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Configurations.html",
    "title": "Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Configurations | Falcon Documentation",
    "keywords": "Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Configurations Classes SqlDbOptions SqlDbOptionsBuilder"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.HomeDb.HomeDbContext.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.HomeDb.HomeDbContext.html",
    "title": "Class HomeDbContext | Falcon Documentation",
    "keywords": "Class HomeDbContext Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.HomeDb Assembly Falcon.Infrastructure.EntityFramework.Abstractions.dll public class HomeDbContext : SqlDbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext SqlDbContext HomeDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members SqlDbContext.OnModelCreating(ModelBuilder) SqlDbContext.SaveChangesAsync<TId>(TId, CancellationToken) SqlDbContext.GetCurrentTransaction() SqlDbContext.HasActiveTransaction SqlDbContext.BeginTransactionAsync() SqlDbContext.CommitTransactionAsync(IDbContextTransaction) SqlDbContext.RollbackTransaction() DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors HomeDbContext(IHomeDbModelConfiguration, HomeDbContextOptions) public HomeDbContext(IHomeDbModelConfiguration modelConfigProvider, HomeDbContextOptions sqlOptions) Parameters modelConfigProvider IHomeDbModelConfiguration sqlOptions HomeDbContextOptions Properties ModelConfigProvider protected override ISqlDbModelConfiguration ModelConfigProvider { get; } Property Value ISqlDbModelConfiguration"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.HomeDb.HomeDbContextOptions.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.HomeDb.HomeDbContextOptions.html",
    "title": "Class HomeDbContextOptions | Falcon Documentation",
    "keywords": "Class HomeDbContextOptions Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.HomeDb Assembly Falcon.Infrastructure.EntityFramework.Abstractions.dll public class HomeDbContextOptions : SqlDbContextOptions Inheritance object SqlDbContextOptions HomeDbContextOptions Inherited Members SqlDbContextOptions.Value object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors HomeDbContextOptions(IDbContextOptionsProvider, IOptions<DbConfig>) public HomeDbContextOptions(IDbContextOptionsProvider dbContextOptionsProvider, IOptions<DbConfig> dbConfig) Parameters dbContextOptionsProvider IDbContextOptionsProvider dbConfig IOptions<DbConfig>"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.HomeDb.HomeModelConfigurations.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.HomeDb.HomeModelConfigurations.html",
    "title": "Class HomeModelConfigurations | Falcon Documentation",
    "keywords": "Class HomeModelConfigurations Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.HomeDb Assembly Falcon.Infrastructure.EntityFramework.Abstractions.dll public class HomeModelConfigurations : ModelConfigurations, IHomeDbModelConfiguration, ISqlDbModelConfiguration Inheritance object ModelConfigurations HomeModelConfigurations Implements IHomeDbModelConfiguration ISqlDbModelConfiguration Inherited Members ModelConfigurations.Configure<T>(ModelBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Methods Configure(ModelBuilder) public void Configure(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.HomeDb.IHomeDbModelConfiguration.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.HomeDb.IHomeDbModelConfiguration.html",
    "title": "Interface IHomeDbModelConfiguration | Falcon Documentation",
    "keywords": "Interface IHomeDbModelConfiguration Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.HomeDb Assembly Falcon.Infrastructure.EntityFramework.Abstractions.dll public interface IHomeDbModelConfiguration : ISqlDbModelConfiguration Inherited Members ISqlDbModelConfiguration.Configure(ModelBuilder) Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime)"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.HomeDb.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.HomeDb.html",
    "title": "Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.HomeDb | Falcon Documentation",
    "keywords": "Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.HomeDb Classes HomeDbContext HomeDbContextOptions HomeModelConfigurations Interfaces IHomeDbModelConfiguration"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.ISqlDbModelConfiguration.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.ISqlDbModelConfiguration.html",
    "title": "Interface ISqlDbModelConfiguration | Falcon Documentation",
    "keywords": "Interface ISqlDbModelConfiguration Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Contexts Assembly Falcon.Infrastructure.EntityFramework.Abstractions.dll public interface ISqlDbModelConfiguration Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Methods Configure(ModelBuilder) void Configure(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.ModelConfigurations.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.ModelConfigurations.html",
    "title": "Class ModelConfigurations | Falcon Documentation",
    "keywords": "Class ModelConfigurations Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Contexts Assembly Falcon.Infrastructure.EntityFramework.Abstractions.dll public abstract class ModelConfigurations Inheritance object ModelConfigurations Derived HomeModelConfigurations TenantModelConfigurations Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Methods Configure<T>(ModelBuilder) public void Configure<T>(ModelBuilder modelBuilder) where T : Attribute Parameters modelBuilder ModelBuilder Type Parameters T"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.SqlDbContext.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.SqlDbContext.html",
    "title": "Class SqlDbContext | Falcon Documentation",
    "keywords": "Class SqlDbContext Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Contexts Assembly Falcon.Infrastructure.EntityFramework.Abstractions.dll public abstract class SqlDbContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext SqlDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Derived HomeDbContext TenantDbContext Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors SqlDbContext(DbContextOptions) protected SqlDbContext(DbContextOptions sqlOptions) Parameters sqlOptions DbContextOptions Properties HasActiveTransaction public bool HasActiveTransaction { get; } Property Value bool ModelConfigProvider protected abstract ISqlDbModelConfiguration ModelConfigProvider { get; } Property Value ISqlDbModelConfiguration Methods BeginTransactionAsync() public Task<IDbContextTransaction?> BeginTransactionAsync() Returns Task<IDbContextTransaction> CommitTransactionAsync(IDbContextTransaction) public Task CommitTransactionAsync(IDbContextTransaction transaction) Parameters transaction IDbContextTransaction Returns Task GetCurrentTransaction() public IDbContextTransaction? GetCurrentTransaction() Returns IDbContextTransaction OnModelCreating(ModelBuilder) Override this method to further configure the model that was discovered by convention from the entity types exposed in DbSet<TEntity> properties on your derived context. The resulting model may be cached and re-used for subsequent instances of your derived context. protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The builder being used to construct the model for this context. Databases (and other extensions) typically define extension methods on this object that allow you to configure aspects of the model that are specific to a given database. Remarks If a model is explicitly set on the options for this context (via UseModel(IModel)) then this method will not be run. However, it will still run when creating a compiled model. See Modeling entity types and relationships for more information and examples. RollbackTransaction() public void RollbackTransaction() SaveChangesAsync<TId>(TId, CancellationToken) public Task<int> SaveChangesAsync<TId>(TId userId, CancellationToken cancellationToken) Parameters userId TId cancellationToken CancellationToken Returns Task<int> Type Parameters TId"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.SqlDbContextOptions.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.SqlDbContextOptions.html",
    "title": "Class SqlDbContextOptions | Falcon Documentation",
    "keywords": "Class SqlDbContextOptions Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Contexts Assembly Falcon.Infrastructure.EntityFramework.Abstractions.dll public abstract class SqlDbContextOptions Inheritance object SqlDbContextOptions Derived HomeDbContextOptions TenantDbContextOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors SqlDbContextOptions(IDbContextOptionsProvider, string) protected SqlDbContextOptions(IDbContextOptionsProvider dbContextOptionsProvider, string connectionString) Parameters dbContextOptionsProvider IDbContextOptionsProvider connectionString string Properties Value public DbContextOptions Value { get; } Property Value DbContextOptions"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.TenantDb.ITenantDbModelConfiguration.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.TenantDb.ITenantDbModelConfiguration.html",
    "title": "Interface ITenantDbModelConfiguration | Falcon Documentation",
    "keywords": "Interface ITenantDbModelConfiguration Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.TenantDb Assembly Falcon.Infrastructure.EntityFramework.Abstractions.dll public interface ITenantDbModelConfiguration : ISqlDbModelConfiguration Inherited Members ISqlDbModelConfiguration.Configure(ModelBuilder) Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime)"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.TenantDb.TenantDbContext.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.TenantDb.TenantDbContext.html",
    "title": "Class TenantDbContext | Falcon Documentation",
    "keywords": "Class TenantDbContext Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.TenantDb Assembly Falcon.Infrastructure.EntityFramework.Abstractions.dll public class TenantDbContext : SqlDbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext SqlDbContext TenantDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members SqlDbContext.OnModelCreating(ModelBuilder) SqlDbContext.SaveChangesAsync<TId>(TId, CancellationToken) SqlDbContext.GetCurrentTransaction() SqlDbContext.HasActiveTransaction SqlDbContext.BeginTransactionAsync() SqlDbContext.CommitTransactionAsync(IDbContextTransaction) SqlDbContext.RollbackTransaction() DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors TenantDbContext(ITenantDbModelConfiguration, TenantDbContextOptions) public TenantDbContext(ITenantDbModelConfiguration modelConfigProvider, TenantDbContextOptions sqlOptions) Parameters modelConfigProvider ITenantDbModelConfiguration sqlOptions TenantDbContextOptions Properties ModelConfigProvider protected override ISqlDbModelConfiguration ModelConfigProvider { get; } Property Value ISqlDbModelConfiguration"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.TenantDb.TenantDbContextOptions.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.TenantDb.TenantDbContextOptions.html",
    "title": "Class TenantDbContextOptions | Falcon Documentation",
    "keywords": "Class TenantDbContextOptions Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.TenantDb Assembly Falcon.Infrastructure.EntityFramework.Abstractions.dll public class TenantDbContextOptions : SqlDbContextOptions Inheritance object SqlDbContextOptions TenantDbContextOptions Inherited Members SqlDbContextOptions.Value object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors TenantDbContextOptions(IDbContextOptionsProvider, ITenantOptions<DbConfig>) public TenantDbContextOptions(IDbContextOptionsProvider dbContextOptionsProvider, ITenantOptions<DbConfig> dbConfig) Parameters dbContextOptionsProvider IDbContextOptionsProvider dbConfig ITenantOptions<DbConfig>"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.TenantDb.TenantDbMigrationContext.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.TenantDb.TenantDbMigrationContext.html",
    "title": "Class TenantDbMigrationContext | Falcon Documentation",
    "keywords": "Class TenantDbMigrationContext Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.TenantDb Assembly Falcon.Infrastructure.EntityFramework.Abstractions.dll public class TenantDbMigrationContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext TenantDbMigrationContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors TenantDbMigrationContext(ITenantDbModelConfiguration, TenantDbContextOptions) public TenantDbMigrationContext(ITenantDbModelConfiguration modelConfigProvider, TenantDbContextOptions options) Parameters modelConfigProvider ITenantDbModelConfiguration options TenantDbContextOptions Methods OnModelCreating(ModelBuilder) Override this method to further configure the model that was discovered by convention from the entity types exposed in DbSet<TEntity> properties on your derived context. The resulting model may be cached and re-used for subsequent instances of your derived context. protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The builder being used to construct the model for this context. Databases (and other extensions) typically define extension methods on this object that allow you to configure aspects of the model that are specific to a given database. Remarks If a model is explicitly set on the options for this context (via UseModel(IModel)) then this method will not be run. However, it will still run when creating a compiled model. See Modeling entity types and relationships for more information and examples."
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.TenantDb.TenantModelConfigurations.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.TenantDb.TenantModelConfigurations.html",
    "title": "Class TenantModelConfigurations | Falcon Documentation",
    "keywords": "Class TenantModelConfigurations Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.TenantDb Assembly Falcon.Infrastructure.EntityFramework.Abstractions.dll public class TenantModelConfigurations : ModelConfigurations, ITenantDbModelConfiguration, ISqlDbModelConfiguration Inheritance object ModelConfigurations TenantModelConfigurations Implements ITenantDbModelConfiguration ISqlDbModelConfiguration Inherited Members ModelConfigurations.Configure<T>(ModelBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Methods Configure(ModelBuilder) public void Configure(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.TenantDb.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.TenantDb.html",
    "title": "Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.TenantDb | Falcon Documentation",
    "keywords": "Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.TenantDb Classes TenantDbContext TenantDbContextOptions TenantDbMigrationContext TenantModelConfigurations Interfaces ITenantDbModelConfiguration"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Contexts.html",
    "title": "Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Contexts | Falcon Documentation",
    "keywords": "Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Contexts Classes ModelConfigurations SqlDbContext SqlDbContextOptions Interfaces ISqlDbModelConfiguration"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.HealthCheck.SqlDbHealthCheck.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.HealthCheck.SqlDbHealthCheck.html",
    "title": "Class SqlDbHealthCheck | Falcon Documentation",
    "keywords": "Class SqlDbHealthCheck Namespace Falcon.Infrastructure.EntityFramework.Abstractions.HealthCheck Assembly Falcon.Infrastructure.EntityFramework.Abstractions.dll public class SqlDbHealthCheck : IHealthCheck Inheritance object SqlDbHealthCheck Implements IHealthCheck Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors SqlDbHealthCheck(HomeDbContext) public SqlDbHealthCheck(HomeDbContext context) Parameters context HomeDbContext Methods CheckHealthAsync(HealthCheckContext, CancellationToken) Runs the health check, returning the status of the component being checked. public Task<HealthCheckResult> CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken = default) Parameters context HealthCheckContext A context object associated with the current execution. cancellationToken CancellationToken A CancellationToken that can be used to cancel the health check. Returns Task<HealthCheckResult> A Task<TResult> that completes when the health check has finished, yielding the status of the component being checked."
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.HealthCheck.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.HealthCheck.html",
    "title": "Namespace Falcon.Infrastructure.EntityFramework.Abstractions.HealthCheck | Falcon Documentation",
    "keywords": "Namespace Falcon.Infrastructure.EntityFramework.Abstractions.HealthCheck Classes SqlDbHealthCheck"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.PersistanceEntityFrameworkExtensions.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.PersistanceEntityFrameworkExtensions.html",
    "title": "Class PersistanceEntityFrameworkExtensions | Falcon Documentation",
    "keywords": "Class PersistanceEntityFrameworkExtensions Namespace Falcon.Infrastructure.EntityFramework.Abstractions Assembly Falcon.Infrastructure.EntityFramework.Abstractions.dll public static class PersistanceEntityFrameworkExtensions Inheritance object PersistanceEntityFrameworkExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ApplyMigrations(IApplicationBuilder) public static void ApplyMigrations(this IApplicationBuilder app) Parameters app IApplicationBuilder"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Repository.HomeOptions-1.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Repository.HomeOptions-1.html",
    "title": "Class HomeOptions<TOptions> | Falcon Documentation",
    "keywords": "Class HomeOptions<TOptions> Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Repository Assembly Falcon.Infrastructure.EntityFramework.Abstractions.dll Represents options for the home-database functionality. public class HomeOptions<TOptions> : IOptions<TOptions> where TOptions : class, new() Type Parameters TOptions The type of options. Inheritance object HomeOptions<TOptions> Implements IOptions<TOptions> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors HomeOptions(IOptions<SqlDbOptions>) Initializes a new instance of the HomeOptions<TOptions> class. public HomeOptions(IOptions<SqlDbOptions> options) Parameters options IOptions<SqlDbOptions> The options containing SQL database configuration. Properties Value Gets the value of the options. public TOptions Value { get; } Property Value TOptions"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Repository.HomeRepository-2.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Repository.HomeRepository-2.html",
    "title": "Class HomeRepository<TId, TEntity> | Falcon Documentation",
    "keywords": "Class HomeRepository<TId, TEntity> Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Repository Assembly Falcon.Infrastructure.EntityFramework.Abstractions.dll public class HomeRepository<TId, TEntity> : SqlRepository<TId, TEntity>, IRepository<TId, TEntity> where TEntity : class, IEntity<TId>, new() Type Parameters TId TEntity Inheritance object SqlRepository<TId, TEntity> HomeRepository<TId, TEntity> Implements IRepository<TId, TEntity> Inherited Members SqlRepository<TId, TEntity>.DbContext SqlRepository<TId, TEntity>.DbSet SqlRepository<TId, TEntity>.GetDbSet() SqlRepository<TId, TEntity>.GetDbSet<Entity>() SqlRepository<TId, TEntity>.QueryAsync(IQueryRequest, CancellationToken) SqlRepository<TId, TEntity>.FindAsync(IQueryRequest, CancellationToken) SqlRepository<TId, TEntity>.CountAsync(IQueryRequest, CancellationToken) SqlRepository<TId, TEntity>.GetAsync(TId, CancellationToken) SqlRepository<TId, TEntity>.GetManyAsync(TId[], CancellationToken) SqlRepository<TId, TEntity>.CreateAsync(ICommandRequest<TEntity>, CancellationToken) SqlRepository<TId, TEntity>.CreateManyAsync(ICommandRequest<TEntity[]>, CancellationToken) SqlRepository<TId, TEntity>.UpdateAsync(TId, ICommandRequest<TEntity>, CancellationToken) SqlRepository<TId, TEntity>.DeleteAsync(TId, CancellationToken) SqlRepository<TId, TEntity>.PatchAsync(TId, ICommandRequest<JsonPatchDocument<TEntity>>, CancellationToken) SqlRepository<TId, TEntity>.ReplaceAsync(TId, ICommandRequest<TEntity>, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors HomeRepository(IServiceProvider, HomeDbContext) public HomeRepository(IServiceProvider serviceProvider, HomeDbContext dbContext) Parameters serviceProvider IServiceProvider dbContext HomeDbContext"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Repository.SingleTenant.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Repository.SingleTenant.html",
    "title": "Class SingleTenant | Falcon Documentation",
    "keywords": "Class SingleTenant Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Repository Assembly Falcon.Infrastructure.EntityFramework.Abstractions.dll public class SingleTenant : ITenant Inheritance object SingleTenant Implements ITenant Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors SingleTenant(IOptions<SqlDbOptions>) public SingleTenant(IOptions<SqlDbOptions> options) Parameters options IOptions<SqlDbOptions> Properties Options public IDictionary<string, string?> Options { get; } Property Value IDictionary<string, string>"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Repository.SqlRepository-2.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Repository.SqlRepository-2.html",
    "title": "Class SqlRepository<TId, TEntity> | Falcon Documentation",
    "keywords": "Class SqlRepository<TId, TEntity> Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Repository Assembly Falcon.Infrastructure.EntityFramework.Abstractions.dll public abstract class SqlRepository<TId, TEntity> : IRepository<TId, TEntity> where TEntity : class, IEntity<TId>, new() Type Parameters TId TEntity Inheritance object SqlRepository<TId, TEntity> Implements IRepository<TId, TEntity> Derived HomeRepository<TId, TEntity> TenantRepository<TId, TEntity> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors SqlRepository(IServiceProvider, SqlDbContext) protected SqlRepository(IServiceProvider serviceProvider, SqlDbContext dbContext) Parameters serviceProvider IServiceProvider dbContext SqlDbContext Properties DbContext public SqlDbContext DbContext { get; } Property Value SqlDbContext DbSet public virtual DbSet<TEntity> DbSet { get; } Property Value DbSet<TEntity> Methods CountAsync(IQueryRequest, CancellationToken) public Task<long> CountAsync(IQueryRequest request, CancellationToken cancellationToken = default) Parameters request IQueryRequest cancellationToken CancellationToken Returns Task<long> CreateAsync(ICommandRequest<TEntity>, CancellationToken) public Task<TEntity> CreateAsync(ICommandRequest<TEntity> request, CancellationToken cancellationToken = default) Parameters request ICommandRequest<TEntity> cancellationToken CancellationToken Returns Task<TEntity> CreateManyAsync(ICommandRequest<TEntity[]>, CancellationToken) public Task<IEnumerable<TEntity>> CreateManyAsync(ICommandRequest<TEntity[]> request, CancellationToken cancellationToken = default) Parameters request ICommandRequest<TEntity[]> cancellationToken CancellationToken Returns Task<IEnumerable<TEntity>> DeleteAsync(TId, CancellationToken) public Task<TEntity> DeleteAsync(TId id, CancellationToken cancellationToken) Parameters id TId cancellationToken CancellationToken Returns Task<TEntity> FindAsync(IQueryRequest, CancellationToken) public Task<IList<TEntity>> FindAsync(IQueryRequest request, CancellationToken cancellationToken = default) Parameters request IQueryRequest cancellationToken CancellationToken Returns Task<IList<TEntity>> GetAsync(TId, CancellationToken) public Task<TEntity> GetAsync(TId id, CancellationToken cancellationToken = default) Parameters id TId cancellationToken CancellationToken Returns Task<TEntity> GetDbSet() public DbSet<TEntity> GetDbSet() Returns DbSet<TEntity> GetDbSet<Entity>() public DbSet<Entity> GetDbSet<Entity>() where Entity : class, IEntity<TId>, new() Returns DbSet<Entity> Type Parameters Entity GetManyAsync(TId[], CancellationToken) public Task<IEnumerable<TEntity>> GetManyAsync(TId[] ids, CancellationToken cancellationToken = default) Parameters ids TId[] cancellationToken CancellationToken Returns Task<IEnumerable<TEntity>> PatchAsync(TId, ICommandRequest<JsonPatchDocument<TEntity>>, CancellationToken) public Task<TEntity> PatchAsync(TId id, ICommandRequest<JsonPatchDocument<TEntity>> request, CancellationToken cancellationToken = default) Parameters id TId request ICommandRequest<JsonPatchDocument<TEntity>> cancellationToken CancellationToken Returns Task<TEntity> QueryAsync(IQueryRequest, CancellationToken) public Task<IList<JObject>> QueryAsync(IQueryRequest request, CancellationToken cancellationToken = default) Parameters request IQueryRequest cancellationToken CancellationToken Returns Task<IList<JObject>> ReplaceAsync(TId, ICommandRequest<TEntity>, CancellationToken) public Task<TEntity> ReplaceAsync(TId id, ICommandRequest<TEntity> request, CancellationToken cancellationToken) Parameters id TId request ICommandRequest<TEntity> cancellationToken CancellationToken Returns Task<TEntity> UpdateAsync(TId, ICommandRequest<TEntity>, CancellationToken) public Task<TEntity> UpdateAsync(TId id, ICommandRequest<TEntity> request, CancellationToken cancellationToken = default) Parameters id TId request ICommandRequest<TEntity> cancellationToken CancellationToken Returns Task<TEntity>"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Repository.SqlRepositoryProvider.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Repository.SqlRepositoryProvider.html",
    "title": "Class SqlRepositoryProvider | Falcon Documentation",
    "keywords": "Class SqlRepositoryProvider Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Repository Assembly Falcon.Infrastructure.EntityFramework.Abstractions.dll public class SqlRepositoryProvider : IRepositoryProvider Inheritance object SqlRepositoryProvider Implements IRepositoryProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors SqlRepositoryProvider(IServiceProvider) public SqlRepositoryProvider(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider Methods GetRepository<TId, TEntity>() public IRepository<TId, TEntity> GetRepository<TId, TEntity>() where TEntity : class, IEntity<TId>, new() Returns IRepository<TId, TEntity> Type Parameters TId TEntity"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Repository.TenantRepository-2.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Repository.TenantRepository-2.html",
    "title": "Class TenantRepository<TId, TEntity> | Falcon Documentation",
    "keywords": "Class TenantRepository<TId, TEntity> Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Repository Assembly Falcon.Infrastructure.EntityFramework.Abstractions.dll public class TenantRepository<TId, TEntity> : SqlRepository<TId, TEntity>, IRepository<TId, TEntity> where TEntity : class, IEntity<TId>, new() Type Parameters TId TEntity Inheritance object SqlRepository<TId, TEntity> TenantRepository<TId, TEntity> Implements IRepository<TId, TEntity> Inherited Members SqlRepository<TId, TEntity>.DbContext SqlRepository<TId, TEntity>.DbSet SqlRepository<TId, TEntity>.GetDbSet() SqlRepository<TId, TEntity>.GetDbSet<Entity>() SqlRepository<TId, TEntity>.QueryAsync(IQueryRequest, CancellationToken) SqlRepository<TId, TEntity>.FindAsync(IQueryRequest, CancellationToken) SqlRepository<TId, TEntity>.CountAsync(IQueryRequest, CancellationToken) SqlRepository<TId, TEntity>.GetAsync(TId, CancellationToken) SqlRepository<TId, TEntity>.GetManyAsync(TId[], CancellationToken) SqlRepository<TId, TEntity>.CreateAsync(ICommandRequest<TEntity>, CancellationToken) SqlRepository<TId, TEntity>.CreateManyAsync(ICommandRequest<TEntity[]>, CancellationToken) SqlRepository<TId, TEntity>.UpdateAsync(TId, ICommandRequest<TEntity>, CancellationToken) SqlRepository<TId, TEntity>.DeleteAsync(TId, CancellationToken) SqlRepository<TId, TEntity>.PatchAsync(TId, ICommandRequest<JsonPatchDocument<TEntity>>, CancellationToken) SqlRepository<TId, TEntity>.ReplaceAsync(TId, ICommandRequest<TEntity>, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors TenantRepository(IServiceProvider, TenantDbContext) public TenantRepository(IServiceProvider serviceProvider, TenantDbContext dbContext) Parameters serviceProvider IServiceProvider dbContext TenantDbContext"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.Repository.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.Repository.html",
    "title": "Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Repository | Falcon Documentation",
    "keywords": "Namespace Falcon.Infrastructure.EntityFramework.Abstractions.Repository Classes HomeOptions<TOptions> Represents options for the home-database functionality. HomeRepository<TId, TEntity> SingleTenant SqlRepositoryProvider SqlRepository<TId, TEntity> TenantRepository<TId, TEntity>"
  },
  "api/Falcon.Infrastructure.EntityFramework.Abstractions.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.Abstractions.html",
    "title": "Namespace Falcon.Infrastructure.EntityFramework.Abstractions | Falcon Documentation",
    "keywords": "Namespace Falcon.Infrastructure.EntityFramework.Abstractions Classes PersistanceEntityFrameworkExtensions"
  },
  "api/Falcon.Infrastructure.EntityFramework.PostgreSql.PostgreSqlDbContextOptionsProvider.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.PostgreSql.PostgreSqlDbContextOptionsProvider.html",
    "title": "Class PostgreSqlDbContextOptionsProvider | Falcon Documentation",
    "keywords": "Class PostgreSqlDbContextOptionsProvider Namespace Falcon.Infrastructure.EntityFramework.PostgreSql Assembly Falcon.Infrastructure.EntityFramework.PostgreSql.dll public class PostgreSqlDbContextOptionsProvider : IDbContextOptionsProvider Inheritance object PostgreSqlDbContextOptionsProvider Implements IDbContextOptionsProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Methods GetDbContextOption(string) public DbContextOptions GetDbContextOption(string connectionString) Parameters connectionString string Returns DbContextOptions"
  },
  "api/Falcon.Infrastructure.EntityFramework.PostgreSql.ServiceCollectionExtensions.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.PostgreSql.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | Falcon Documentation",
    "keywords": "Class ServiceCollectionExtensions Namespace Falcon.Infrastructure.EntityFramework.PostgreSql Assembly Falcon.Infrastructure.EntityFramework.PostgreSql.dll public static class ServiceCollectionExtensions Inheritance object ServiceCollectionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddInfrastructureEntityFrameworkPostgreSql(IServiceCollection) public static IServiceCollection AddInfrastructureEntityFrameworkPostgreSql(IServiceCollection services) Parameters services IServiceCollection Returns IServiceCollection UseInfrastructureEntityFrameworkPostgreSqlMiddelwares(IApplicationBuilder) public static IApplicationBuilder UseInfrastructureEntityFrameworkPostgreSqlMiddelwares(IApplicationBuilder app) Parameters app IApplicationBuilder Returns IApplicationBuilder UseInfrastructureEntityFrameworkPostgreSqlModule(IApplicationBuilder) public static IApplicationBuilder UseInfrastructureEntityFrameworkPostgreSqlModule(IApplicationBuilder app) Parameters app IApplicationBuilder Returns IApplicationBuilder"
  },
  "api/Falcon.Infrastructure.EntityFramework.PostgreSql.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.PostgreSql.html",
    "title": "Namespace Falcon.Infrastructure.EntityFramework.PostgreSql | Falcon Documentation",
    "keywords": "Namespace Falcon.Infrastructure.EntityFramework.PostgreSql Classes PostgreSqlDbContextOptionsProvider ServiceCollectionExtensions"
  },
  "api/Falcon.Infrastructure.EntityFramework.QueryBuilder.Exceptions.QueryBuilderException.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.QueryBuilder.Exceptions.QueryBuilderException.html",
    "title": "Class QueryBuilderException | Falcon Documentation",
    "keywords": "Class QueryBuilderException Namespace Falcon.Infrastructure.EntityFramework.QueryBuilder.Exceptions Assembly Falcon.Infrastructure.EntityFramework.QueryBuilder.dll [Serializable] public class QueryBuilderException : Exception, ISerializable Inheritance object Exception QueryBuilderException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) ExceptionExtension.GetInnerStackTrace(Exception?) Constructors QueryBuilderException(string) public QueryBuilderException(string message) Parameters message string QueryBuilderException(string, Exception) public QueryBuilderException(string message, Exception innerException) Parameters message string innerException Exception"
  },
  "api/Falcon.Infrastructure.EntityFramework.QueryBuilder.Exceptions.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.QueryBuilder.Exceptions.html",
    "title": "Namespace Falcon.Infrastructure.EntityFramework.QueryBuilder.Exceptions | Falcon Documentation",
    "keywords": "Namespace Falcon.Infrastructure.EntityFramework.QueryBuilder.Exceptions Classes QueryBuilderException"
  },
  "api/Falcon.Infrastructure.EntityFramework.QueryBuilder.Expressions.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.QueryBuilder.Expressions.html",
    "title": "Class Expressions | Falcon Documentation",
    "keywords": "Class Expressions Namespace Falcon.Infrastructure.EntityFramework.QueryBuilder Assembly Falcon.Infrastructure.EntityFramework.QueryBuilder.dll public static class Expressions Inheritance object Expressions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Parse(object?, Type) public static Expression Parse(object? value, Type type) Parameters value object type Type Returns Expression ToDateOnly(object) public static Expression ToDateOnly(object value) Parameters value object Returns Expression ToUniversalTime(object) public static Expression ToUniversalTime(object value) Parameters value object Returns Expression"
  },
  "api/Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtensions.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.QueryBuilder.FilterExtensions.html",
    "title": "Class FilterExtensions | Falcon Documentation",
    "keywords": "Class FilterExtensions Namespace Falcon.Infrastructure.EntityFramework.QueryBuilder Assembly Falcon.Infrastructure.EntityFramework.QueryBuilder.dll public static class FilterExtensions Inheritance object FilterExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetFilterExpression<TEntity>(IFilter) public static Expression<Func<TEntity, bool>>? GetFilterExpression<TEntity>(this IFilter filter) Parameters filter IFilter Returns Expression<Func<TEntity, bool>> Type Parameters TEntity GetFilterExpressions<TEntity>(IFilter[]) public static IEnumerable<Expression<Func<TEntity, bool>>?> GetFilterExpressions<TEntity>(this IFilter[] filters) Parameters filters IFilter[] Returns IEnumerable<Expression<Func<TEntity, bool>>> Type Parameters TEntity MergeExpressions<TEntity>(IEnumerable<Expression<Func<TEntity, bool>>?>, CompositeOperator) public static Expression<Func<TEntity, bool>>? MergeExpressions<TEntity>(this IEnumerable<Expression<Func<TEntity, bool>>?> expressions, CompositeOperator op) Parameters expressions IEnumerable<Expression<Func<TEntity, bool>>> op CompositeOperator Returns Expression<Func<TEntity, bool>> Type Parameters TEntity"
  },
  "api/Falcon.Infrastructure.EntityFramework.QueryBuilder.Names.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.QueryBuilder.Names.html",
    "title": "Class Names | Falcon Documentation",
    "keywords": "Class Names Namespace Falcon.Infrastructure.EntityFramework.QueryBuilder Assembly Falcon.Infrastructure.EntityFramework.QueryBuilder.dll public static class Names Inheritance object Names Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DateOnly public const string DateOnly = \"System.DateOnly\" Field Value string DateTime public const string DateTime = \"System.DateTime\" Field Value string EnumerableContains public static readonly string EnumerableContains Field Value string Int32 public const string Int32 = \"System.Int32\" Field Value string Int64 public const string Int64 = \"System.Int64\" Field Value string"
  },
  "api/Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryBuilder-1.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryBuilder-1.html",
    "title": "Class QueryBuilder<TEntity> | Falcon Documentation",
    "keywords": "Class QueryBuilder<TEntity> Namespace Falcon.Infrastructure.EntityFramework.QueryBuilder Assembly Falcon.Infrastructure.EntityFramework.QueryBuilder.dll public class QueryBuilder<TEntity> where TEntity : class Type Parameters TEntity Inheritance object QueryBuilder<TEntity> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Methods BuildCountAsync(DbSet<TEntity>, CancellationToken) public Task<long> BuildCountAsync(DbSet<TEntity> dbSet, CancellationToken cancellationToken = default) Parameters dbSet DbSet<TEntity> cancellationToken CancellationToken Returns Task<long> BuildProjection(DbSet<TEntity>) public IQueryable<JObject> BuildProjection(DbSet<TEntity> dbSet) Parameters dbSet DbSet<TEntity> Returns IQueryable<JObject> BuildSelection(DbSet<TEntity>) public IQueryable<TEntity> BuildSelection(DbSet<TEntity> dbSet) Parameters dbSet DbSet<TEntity> Returns IQueryable<TEntity> Includes(Include[]?) public QueryBuilder<TEntity> Includes(Include[]? includes) Parameters includes Include[] Returns QueryBuilder<TEntity> New() public static QueryBuilder<TEntity> New() Returns QueryBuilder<TEntity> PageContext(PageContext?) public QueryBuilder<TEntity> PageContext(PageContext? pageContext) Parameters pageContext PageContext Returns QueryBuilder<TEntity> Select(string[]?) public QueryBuilder<TEntity> Select(string[]? select) Parameters select string[] Returns QueryBuilder<TEntity> Sort(Sort[]?) public QueryBuilder<TEntity> Sort(Sort[]? sort) Parameters sort Sort[] Returns QueryBuilder<TEntity> Where(Filter?) public QueryBuilder<TEntity> Where(Filter? filter) Parameters filter Filter Returns QueryBuilder<TEntity>"
  },
  "api/Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtensions.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.QueryBuilder.QueryableExtensions.html",
    "title": "Class QueryableExtensions | Falcon Documentation",
    "keywords": "Class QueryableExtensions Namespace Falcon.Infrastructure.EntityFramework.QueryBuilder Assembly Falcon.Infrastructure.EntityFramework.QueryBuilder.dll public static class QueryableExtensions Inheritance object QueryableExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ApplyInclude<TEntity>(IQueryable<TEntity>, Include, string?) public static IQueryable<TEntity> ApplyInclude<TEntity>(this IQueryable<TEntity> query, Include include, string? parent = null) where TEntity : class Parameters query IQueryable<TEntity> include Include parent string Returns IQueryable<TEntity> Type Parameters TEntity ApplyIncludes<TEntity>(IQueryable<TEntity>, Include[]?, string?) public static IQueryable<TEntity> ApplyIncludes<TEntity>(this IQueryable<TEntity> query, Include[]? includes, string? parent = null) where TEntity : class Parameters query IQueryable<TEntity> includes Include[] parent string Returns IQueryable<TEntity> Type Parameters TEntity ApplyPageContext<TEntity>(IQueryable<TEntity>, PageContext?) public static IQueryable<TEntity> ApplyPageContext<TEntity>(this IQueryable<TEntity> query, PageContext? pageContext) Parameters query IQueryable<TEntity> pageContext PageContext Returns IQueryable<TEntity> Type Parameters TEntity ApplyProjection<TEntity>(IQueryable<TEntity>, string[]?, Include[]?) public static IQueryable<JObject> ApplyProjection<TEntity>(this IQueryable<TEntity> query, string[]? select, Include[]? includes) Parameters query IQueryable<TEntity> select string[] includes Include[] Returns IQueryable<JObject> Type Parameters TEntity ApplySelector<TEntity>(IQueryable<TEntity>, string[]?, Include[]?) public static IQueryable<TEntity> ApplySelector<TEntity>(this IQueryable<TEntity> query, string[]? select, Include[]? includes) Parameters query IQueryable<TEntity> select string[] includes Include[] Returns IQueryable<TEntity> Type Parameters TEntity ApplySort<TEntity>(IQueryable<TEntity>, Sort[]?) public static IQueryable<TEntity> ApplySort<TEntity>(this IQueryable<TEntity> query, Sort[]? sort) Parameters query IQueryable<TEntity> sort Sort[] Returns IQueryable<TEntity> Type Parameters TEntity ApplyWhere<TEntity>(IQueryable<TEntity>, Filter?) public static IQueryable<TEntity> ApplyWhere<TEntity>(this IQueryable<TEntity> query, Filter? filter) Parameters query IQueryable<TEntity> filter Filter Returns IQueryable<TEntity> Type Parameters TEntity GetCollectionValueExpression(Type, MemberExpression, string[]?, Include[]?) public static Expression GetCollectionValueExpression(Type elementType, MemberExpression propAccessExpression, string[]? select, Include[]? includes) Parameters elementType Type propAccessExpression MemberExpression select string[] includes Include[] Returns Expression GetEnumValueExpression(MemberExpression) public static Expression GetEnumValueExpression(MemberExpression propAccessExpression) Parameters propAccessExpression MemberExpression Returns Expression GetJObjectValueExpression(Type, Expression, string[]?, Include[]?) public static Expression GetJObjectValueExpression(Type elementType, Expression sourceParameter, string[]? select, Include[]? includes) Parameters elementType Type sourceParameter Expression select string[] includes Include[] Returns Expression GetObjectMethodCallException(Type, MemberExpression, string[]?, Include[]?) public static MethodCallExpression GetObjectMethodCallException(Type elementType, MemberExpression propAccessExpression, string[]? select, Include[]? includes) Parameters elementType Type propAccessExpression MemberExpression select string[] includes Include[] Returns MethodCallExpression GetPrimitiveMethodCallExpression(Type, MemberExpression) public static MethodCallExpression GetPrimitiveMethodCallExpression(Type elementType, MemberExpression propAccessExpression) Parameters elementType Type propAccessExpression MemberExpression Returns MethodCallExpression GetProperties(Type) public static IEnumerable<string> GetProperties(Type type) Parameters type Type Returns IEnumerable<string> GetValueExpression(MemberExpression) public static Expression GetValueExpression(MemberExpression propAccessExpression) Parameters propAccessExpression MemberExpression Returns Expression ToCamelCase(string) public static string ToCamelCase(this string str) Parameters str string Returns string"
  },
  "api/Falcon.Infrastructure.EntityFramework.QueryBuilder.Types.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.QueryBuilder.Types.html",
    "title": "Class Types | Falcon Documentation",
    "keywords": "Class Types Namespace Falcon.Infrastructure.EntityFramework.QueryBuilder Assembly Falcon.Infrastructure.EntityFramework.QueryBuilder.dll public static class Types Inheritance object Types Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DateTimeType public static readonly Type DateTimeType Field Value Type EnumerableType public static readonly Type EnumerableType Field Value Type IntType public static readonly Type IntType Field Value Type JArrayType public static readonly Type JArrayType Field Value Type JObjectType public static readonly Type JObjectType Field Value Type JTokenType public static readonly Type JTokenType Field Value Type JsonIgnoreAttributeType public static readonly Type JsonIgnoreAttributeType Field Value Type LongType public static readonly Type LongType Field Value Type ObjectType public static readonly Type ObjectType Field Value Type StringType public static readonly Type StringType Field Value Type"
  },
  "api/Falcon.Infrastructure.EntityFramework.QueryBuilder.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.QueryBuilder.html",
    "title": "Namespace Falcon.Infrastructure.EntityFramework.QueryBuilder | Falcon Documentation",
    "keywords": "Namespace Falcon.Infrastructure.EntityFramework.QueryBuilder Classes Expressions FilterExtensions Names QueryBuilder<TEntity> QueryableExtensions Types"
  },
  "api/Falcon.Infrastructure.EntityFramework.ServiceCollectionExtensions.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | Falcon Documentation",
    "keywords": "Class ServiceCollectionExtensions Namespace Falcon.Infrastructure.EntityFramework Assembly Falcon.Infrastructure.EntityFramework.Abstractions.dll public static class ServiceCollectionExtensions Inheritance object ServiceCollectionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddInfrastructureEntityFramework(IServiceCollection, IConfiguration, string) public static IServiceCollection AddInfrastructureEntityFramework(this IServiceCollection services, IConfiguration configuration, string configPath) Parameters services IServiceCollection configuration IConfiguration configPath string Returns IServiceCollection AddInfrastructureEntityFramework(IServiceCollection, IConfigurationSection) public static IServiceCollection AddInfrastructureEntityFramework(this IServiceCollection services, IConfigurationSection section) Parameters services IServiceCollection section IConfigurationSection Returns IServiceCollection AddInfrastructureEntityFramework(IServiceCollection, Action<SqlDbOptions>) public static IServiceCollection AddInfrastructureEntityFramework(this IServiceCollection services, Action<SqlDbOptions> configure) Parameters services IServiceCollection configure Action<SqlDbOptions> Returns IServiceCollection UseInfrastructureEntityFramework(IApplicationBuilder) public static IApplicationBuilder UseInfrastructureEntityFramework(this IApplicationBuilder app) Parameters app IApplicationBuilder Returns IApplicationBuilder UseInfrastructureEntityFrameworkMiddelwares(IApplicationBuilder) public static IApplicationBuilder UseInfrastructureEntityFrameworkMiddelwares(this IApplicationBuilder app) Parameters app IApplicationBuilder Returns IApplicationBuilder"
  },
  "api/Falcon.Infrastructure.EntityFramework.html": {
    "href": "api/Falcon.Infrastructure.EntityFramework.html",
    "title": "Namespace Falcon.Infrastructure.EntityFramework | Falcon Documentation",
    "keywords": "Namespace Falcon.Infrastructure.EntityFramework Classes ServiceCollectionExtensions"
  },
  "api/Falcon.Messaging.Abstractions.IApplicationEvent.html": {
    "href": "api/Falcon.Messaging.Abstractions.IApplicationEvent.html",
    "title": "Interface IApplicationEvent | Falcon Documentation",
    "keywords": "Interface IApplicationEvent Namespace Falcon.Messaging.Abstractions Assembly Falcon.Messaging.dll public interface IApplicationEvent : IEvent Inherited Members IEvent.Id IEvent.OccurredOn Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) EventPublisherExtensions.PublishAsync<TEvent>(TEvent, CancellationToken) Properties EventType string EventType { get; } Property Value string UserId string UserId { get; } Property Value string"
  },
  "api/Falcon.Messaging.Abstractions.IDomainEvent.html": {
    "href": "api/Falcon.Messaging.Abstractions.IDomainEvent.html",
    "title": "Interface IDomainEvent | Falcon Documentation",
    "keywords": "Interface IDomainEvent Namespace Falcon.Messaging.Abstractions Assembly Falcon.Messaging.dll public interface IDomainEvent : IEvent Inherited Members IEvent.Id IEvent.OccurredOn Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) EventPublisherExtensions.PublishAsync<TEvent>(TEvent, CancellationToken) Properties AggregateId Guid AggregateId { get; set; } Property Value Guid Version int Version { get; set; } Property Value int Methods GetEventType() string GetEventType() Returns string"
  },
  "api/Falcon.Messaging.Abstractions.IEvent.html": {
    "href": "api/Falcon.Messaging.Abstractions.IEvent.html",
    "title": "Interface IEvent | Falcon Documentation",
    "keywords": "Interface IEvent Namespace Falcon.Messaging.Abstractions Assembly Falcon.Messaging.dll public interface IEvent Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) EventPublisherExtensions.PublishAsync<TEvent>(TEvent, CancellationToken) Properties Id Guid Id { get; } Property Value Guid OccurredOn DateTime OccurredOn { get; } Property Value DateTime"
  },
  "api/Falcon.Messaging.Abstractions.IEventPublisher.html": {
    "href": "api/Falcon.Messaging.Abstractions.IEventPublisher.html",
    "title": "Interface IEventPublisher | Falcon Documentation",
    "keywords": "Interface IEventPublisher Namespace Falcon.Messaging.Abstractions Assembly Falcon.Messaging.dll public interface IEventPublisher Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Methods PublishAsync<TEvent>(TEvent, CancellationToken) Task PublishAsync<TEvent>(TEvent @event, CancellationToken cancellationToken = default) where TEvent : class, IEvent Parameters event TEvent cancellationToken CancellationToken Returns Task Type Parameters TEvent"
  },
  "api/Falcon.Messaging.Abstractions.IIntegrationEvent.html": {
    "href": "api/Falcon.Messaging.Abstractions.IIntegrationEvent.html",
    "title": "Interface IIntegrationEvent | Falcon Documentation",
    "keywords": "Interface IIntegrationEvent Namespace Falcon.Messaging.Abstractions Assembly Falcon.Messaging.dll public interface IIntegrationEvent : IEvent Inherited Members IEvent.Id IEvent.OccurredOn Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) EventPublisherExtensions.PublishAsync<TEvent>(TEvent, CancellationToken) Properties EventSource string EventSource { get; } Property Value string"
  },
  "api/Falcon.Messaging.Abstractions.html": {
    "href": "api/Falcon.Messaging.Abstractions.html",
    "title": "Namespace Falcon.Messaging.Abstractions | Falcon Documentation",
    "keywords": "Namespace Falcon.Messaging.Abstractions Interfaces IApplicationEvent IDomainEvent IEvent IEventPublisher IIntegrationEvent"
  },
  "api/Falcon.Messaging.ApplicationEvents.ApplicationEvent.html": {
    "href": "api/Falcon.Messaging.ApplicationEvents.ApplicationEvent.html",
    "title": "Class ApplicationEvent | Falcon Documentation",
    "keywords": "Class ApplicationEvent Namespace Falcon.Messaging.ApplicationEvents Assembly Falcon.Messaging.dll public abstract class ApplicationEvent : IApplicationEvent, IEvent Inheritance object ApplicationEvent Implements IApplicationEvent IEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) EventPublisherExtensions.PublishAsync<TEvent>(TEvent, CancellationToken) Constructors ApplicationEvent(string, string) protected ApplicationEvent(string userId, string eventType) Parameters userId string eventType string Properties EventType public string EventType { get; } Property Value string Id public Guid Id { get; } Property Value Guid OccurredOn public DateTime OccurredOn { get; } Property Value DateTime UserId public string UserId { get; } Property Value string"
  },
  "api/Falcon.Messaging.ApplicationEvents.ApplicationEventBus.html": {
    "href": "api/Falcon.Messaging.ApplicationEvents.ApplicationEventBus.html",
    "title": "Class ApplicationEventBus | Falcon Documentation",
    "keywords": "Class ApplicationEventBus Namespace Falcon.Messaging.ApplicationEvents Assembly Falcon.Messaging.dll public class ApplicationEventBus : BusInstance<IApplicationEventBus>, IApplicationEventBus, IBusControl, IBus, IPublishEndpoint, IPublishEndpointProvider, IPublishObserverConnector, ISendEndpointProvider, ISendObserverConnector, IConsumePipeConnector, IRequestPipeConnector, IConsumeMessageObserverConnector, IConsumeObserverConnector, IReceiveObserverConnector, IReceiveEndpointObserverConnector, IReceiveConnector, IEndpointConfigurationObserverConnector, IProbeSite Inheritance object BusInstance<IApplicationEventBus> ApplicationEventBus Implements IApplicationEventBus IBusControl IBus IPublishEndpoint IPublishEndpointProvider IPublishObserverConnector ISendEndpointProvider ISendObserverConnector IConsumePipeConnector IRequestPipeConnector IConsumeMessageObserverConnector IConsumeObserverConnector IReceiveObserverConnector IReceiveEndpointObserverConnector IReceiveConnector IEndpointConfigurationObserverConnector IProbeSite Inherited Members BusInstance<IApplicationEventBus>.ConnectPublishObserver(IPublishObserver) BusInstance<IApplicationEventBus>.Publish<T>(T, CancellationToken) BusInstance<IApplicationEventBus>.Publish<T>(T, IPipe<PublishContext<T>>, CancellationToken) BusInstance<IApplicationEventBus>.Publish<T>(T, IPipe<PublishContext>, CancellationToken) BusInstance<IApplicationEventBus>.Publish(object, CancellationToken) BusInstance<IApplicationEventBus>.Publish(object, IPipe<PublishContext>, CancellationToken) BusInstance<IApplicationEventBus>.Publish(object, Type, CancellationToken) BusInstance<IApplicationEventBus>.Publish(object, Type, IPipe<PublishContext>, CancellationToken) BusInstance<IApplicationEventBus>.Publish<T>(object, CancellationToken) BusInstance<IApplicationEventBus>.Publish<T>(object, IPipe<PublishContext<T>>, CancellationToken) BusInstance<IApplicationEventBus>.Publish<T>(object, IPipe<PublishContext>, CancellationToken) BusInstance<IApplicationEventBus>.GetPublishSendEndpoint<T>() BusInstance<IApplicationEventBus>.ConnectSendObserver(ISendObserver) BusInstance<IApplicationEventBus>.GetSendEndpoint(Uri) BusInstance<IApplicationEventBus>.ConnectConsumePipe<T>(IPipe<ConsumeContext<T>>) BusInstance<IApplicationEventBus>.ConnectConsumePipe<T>(IPipe<ConsumeContext<T>>, ConnectPipeOptions) BusInstance<IApplicationEventBus>.ConnectRequestPipe<T>(Guid, IPipe<ConsumeContext<T>>) BusInstance<IApplicationEventBus>.ConnectConsumeMessageObserver<T>(IConsumeMessageObserver<T>) BusInstance<IApplicationEventBus>.ConnectConsumeObserver(IConsumeObserver) BusInstance<IApplicationEventBus>.ConnectReceiveObserver(IReceiveObserver) BusInstance<IApplicationEventBus>.ConnectReceiveEndpointObserver(IReceiveEndpointObserver) BusInstance<IApplicationEventBus>.ConnectEndpointConfigurationObserver(IEndpointConfigurationObserver) BusInstance<IApplicationEventBus>.ConnectReceiveEndpoint(IEndpointDefinition, IEndpointNameFormatter, Action<IReceiveEndpointConfigurator>) BusInstance<IApplicationEventBus>.ConnectReceiveEndpoint(string, Action<IReceiveEndpointConfigurator>) BusInstance<IApplicationEventBus>.Probe(ProbeContext) BusInstance<IApplicationEventBus>.StartAsync(CancellationToken) BusInstance<IApplicationEventBus>.StopAsync(CancellationToken) BusInstance<IApplicationEventBus>.CheckHealth() BusInstance<IApplicationEventBus>.Address BusInstance<IApplicationEventBus>.Topology object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors ApplicationEventBus(IBusControl) public ApplicationEventBus(IBusControl busControl) Parameters busControl IBusControl"
  },
  "api/Falcon.Messaging.ApplicationEvents.ApplicationEventPublisher.html": {
    "href": "api/Falcon.Messaging.ApplicationEvents.ApplicationEventPublisher.html",
    "title": "Class ApplicationEventPublisher | Falcon Documentation",
    "keywords": "Class ApplicationEventPublisher Namespace Falcon.Messaging.ApplicationEvents Assembly Falcon.Messaging.dll public class ApplicationEventPublisher : IEventPublisher Inheritance object ApplicationEventPublisher Implements IEventPublisher Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors ApplicationEventPublisher(ApplicationEventBus) public ApplicationEventPublisher(ApplicationEventBus applicationEventBus) Parameters applicationEventBus ApplicationEventBus Methods PublishAsync<TEvent>(TEvent, CancellationToken) public Task PublishAsync<TEvent>(TEvent @event, CancellationToken cancellationToken = default) where TEvent : class, IEvent Parameters event TEvent cancellationToken CancellationToken Returns Task Type Parameters TEvent"
  },
  "api/Falcon.Messaging.ApplicationEvents.IApplicationEventBus.html": {
    "href": "api/Falcon.Messaging.ApplicationEvents.IApplicationEventBus.html",
    "title": "Interface IApplicationEventBus | Falcon Documentation",
    "keywords": "Interface IApplicationEventBus Namespace Falcon.Messaging.ApplicationEvents Assembly Falcon.Messaging.dll public interface IApplicationEventBus : IBusControl, IBus, IPublishEndpoint, IPublishEndpointProvider, IPublishObserverConnector, ISendEndpointProvider, ISendObserverConnector, IConsumePipeConnector, IRequestPipeConnector, IConsumeMessageObserverConnector, IConsumeObserverConnector, IReceiveObserverConnector, IReceiveEndpointObserverConnector, IReceiveConnector, IEndpointConfigurationObserverConnector, IProbeSite Inherited Members IBusControl.StartAsync(CancellationToken) IBusControl.StopAsync(CancellationToken) IBusControl.CheckHealth() IBus.Address IBus.Topology IPublishEndpoint.Publish<T>(T, CancellationToken) IPublishEndpoint.Publish<T>(T, IPipe<PublishContext<T>>, CancellationToken) IPublishEndpoint.Publish<T>(T, IPipe<PublishContext>, CancellationToken) IPublishEndpoint.Publish(object, CancellationToken) IPublishEndpoint.Publish(object, IPipe<PublishContext>, CancellationToken) IPublishEndpoint.Publish(object, Type, CancellationToken) IPublishEndpoint.Publish(object, Type, IPipe<PublishContext>, CancellationToken) IPublishEndpoint.Publish<T>(object, CancellationToken) IPublishEndpoint.Publish<T>(object, IPipe<PublishContext<T>>, CancellationToken) IPublishEndpoint.Publish<T>(object, IPipe<PublishContext>, CancellationToken) IPublishEndpointProvider.GetPublishSendEndpoint<T>() IPublishObserverConnector.ConnectPublishObserver(IPublishObserver) ISendEndpointProvider.GetSendEndpoint(Uri) ISendObserverConnector.ConnectSendObserver(ISendObserver) IConsumePipeConnector.ConnectConsumePipe<T>(IPipe<ConsumeContext<T>>) IConsumePipeConnector.ConnectConsumePipe<T>(IPipe<ConsumeContext<T>>, ConnectPipeOptions) IRequestPipeConnector.ConnectRequestPipe<T>(Guid, IPipe<ConsumeContext<T>>) IConsumeMessageObserverConnector.ConnectConsumeMessageObserver<T>(IConsumeMessageObserver<T>) IConsumeObserverConnector.ConnectConsumeObserver(IConsumeObserver) IReceiveObserverConnector.ConnectReceiveObserver(IReceiveObserver) IReceiveEndpointObserverConnector.ConnectReceiveEndpointObserver(IReceiveEndpointObserver) IReceiveConnector.ConnectReceiveEndpoint(IEndpointDefinition, IEndpointNameFormatter, Action<IReceiveEndpointConfigurator>) IReceiveConnector.ConnectReceiveEndpoint(string, Action<IReceiveEndpointConfigurator>) IEndpointConfigurationObserverConnector.ConnectEndpointConfigurationObserver(IEndpointConfigurationObserver) IProbeSite.Probe(ProbeContext) Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime)"
  },
  "api/Falcon.Messaging.ApplicationEvents.IApplicationEventConsumer-1.html": {
    "href": "api/Falcon.Messaging.ApplicationEvents.IApplicationEventConsumer-1.html",
    "title": "Interface IApplicationEventConsumer<TApplicationEvent> | Falcon Documentation",
    "keywords": "Interface IApplicationEventConsumer<TApplicationEvent> Namespace Falcon.Messaging.ApplicationEvents Assembly Falcon.Messaging.dll public interface IApplicationEventConsumer<in TApplicationEvent> : IConsumer<TApplicationEvent>, IConsumer where TApplicationEvent : class, IApplicationEvent Type Parameters TApplicationEvent Inherited Members IConsumer<TApplicationEvent>.Consume(ConsumeContext<TApplicationEvent>) Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime)"
  },
  "api/Falcon.Messaging.ApplicationEvents.html": {
    "href": "api/Falcon.Messaging.ApplicationEvents.html",
    "title": "Namespace Falcon.Messaging.ApplicationEvents | Falcon Documentation",
    "keywords": "Namespace Falcon.Messaging.ApplicationEvents Classes ApplicationEvent ApplicationEventBus ApplicationEventPublisher Interfaces IApplicationEventBus IApplicationEventConsumer<TApplicationEvent>"
  },
  "api/Falcon.Messaging.Command.CommandBus.html": {
    "href": "api/Falcon.Messaging.Command.CommandBus.html",
    "title": "Class CommandBus | Falcon Documentation",
    "keywords": "Class CommandBus Namespace Falcon.Messaging.Command Assembly Falcon.Messaging.dll public class CommandBus : BusInstance<ICommandBus>, ICommandBus, IBusControl, IBus, IPublishEndpoint, IPublishEndpointProvider, IPublishObserverConnector, ISendEndpointProvider, ISendObserverConnector, IConsumePipeConnector, IRequestPipeConnector, IConsumeMessageObserverConnector, IConsumeObserverConnector, IReceiveObserverConnector, IReceiveEndpointObserverConnector, IReceiveConnector, IEndpointConfigurationObserverConnector, IProbeSite Inheritance object BusInstance<ICommandBus> CommandBus Implements ICommandBus IBusControl IBus IPublishEndpoint IPublishEndpointProvider IPublishObserverConnector ISendEndpointProvider ISendObserverConnector IConsumePipeConnector IRequestPipeConnector IConsumeMessageObserverConnector IConsumeObserverConnector IReceiveObserverConnector IReceiveEndpointObserverConnector IReceiveConnector IEndpointConfigurationObserverConnector IProbeSite Inherited Members BusInstance<ICommandBus>.ConnectPublishObserver(IPublishObserver) BusInstance<ICommandBus>.Publish<T>(T, CancellationToken) BusInstance<ICommandBus>.Publish<T>(T, IPipe<PublishContext<T>>, CancellationToken) BusInstance<ICommandBus>.Publish<T>(T, IPipe<PublishContext>, CancellationToken) BusInstance<ICommandBus>.Publish(object, CancellationToken) BusInstance<ICommandBus>.Publish(object, IPipe<PublishContext>, CancellationToken) BusInstance<ICommandBus>.Publish(object, Type, CancellationToken) BusInstance<ICommandBus>.Publish(object, Type, IPipe<PublishContext>, CancellationToken) BusInstance<ICommandBus>.Publish<T>(object, CancellationToken) BusInstance<ICommandBus>.Publish<T>(object, IPipe<PublishContext<T>>, CancellationToken) BusInstance<ICommandBus>.Publish<T>(object, IPipe<PublishContext>, CancellationToken) BusInstance<ICommandBus>.GetPublishSendEndpoint<T>() BusInstance<ICommandBus>.ConnectSendObserver(ISendObserver) BusInstance<ICommandBus>.GetSendEndpoint(Uri) BusInstance<ICommandBus>.ConnectConsumePipe<T>(IPipe<ConsumeContext<T>>) BusInstance<ICommandBus>.ConnectConsumePipe<T>(IPipe<ConsumeContext<T>>, ConnectPipeOptions) BusInstance<ICommandBus>.ConnectRequestPipe<T>(Guid, IPipe<ConsumeContext<T>>) BusInstance<ICommandBus>.ConnectConsumeMessageObserver<T>(IConsumeMessageObserver<T>) BusInstance<ICommandBus>.ConnectConsumeObserver(IConsumeObserver) BusInstance<ICommandBus>.ConnectReceiveObserver(IReceiveObserver) BusInstance<ICommandBus>.ConnectReceiveEndpointObserver(IReceiveEndpointObserver) BusInstance<ICommandBus>.ConnectEndpointConfigurationObserver(IEndpointConfigurationObserver) BusInstance<ICommandBus>.ConnectReceiveEndpoint(IEndpointDefinition, IEndpointNameFormatter, Action<IReceiveEndpointConfigurator>) BusInstance<ICommandBus>.ConnectReceiveEndpoint(string, Action<IReceiveEndpointConfigurator>) BusInstance<ICommandBus>.Probe(ProbeContext) BusInstance<ICommandBus>.StartAsync(CancellationToken) BusInstance<ICommandBus>.StopAsync(CancellationToken) BusInstance<ICommandBus>.CheckHealth() BusInstance<ICommandBus>.Address BusInstance<ICommandBus>.Topology object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors CommandBus(IBusControl) public CommandBus(IBusControl busControl) Parameters busControl IBusControl"
  },
  "api/Falcon.Messaging.Command.CommandSender.html": {
    "href": "api/Falcon.Messaging.Command.CommandSender.html",
    "title": "Class CommandSender | Falcon Documentation",
    "keywords": "Class CommandSender Namespace Falcon.Messaging.Command Assembly Falcon.Messaging.dll public class CommandSender Inheritance object CommandSender Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors CommandSender(CommandBus) public CommandSender(CommandBus commandBus) Parameters commandBus CommandBus Methods SendAsync<TCommand>(TCommand, CancellationToken) public Task SendAsync<TCommand>(TCommand command, CancellationToken cancellationToken = default) where TCommand : ICommand Parameters command TCommand cancellationToken CancellationToken Returns Task Type Parameters TCommand"
  },
  "api/Falcon.Messaging.Command.ICommand.html": {
    "href": "api/Falcon.Messaging.Command.ICommand.html",
    "title": "Interface ICommand | Falcon Documentation",
    "keywords": "Interface ICommand Namespace Falcon.Messaging.Command Assembly Falcon.Messaging.dll public interface ICommand Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) EventPublisherExtensions.SendAsync<TEvent>(TEvent, CancellationToken)"
  },
  "api/Falcon.Messaging.Command.ICommandBus.html": {
    "href": "api/Falcon.Messaging.Command.ICommandBus.html",
    "title": "Interface ICommandBus | Falcon Documentation",
    "keywords": "Interface ICommandBus Namespace Falcon.Messaging.Command Assembly Falcon.Messaging.dll public interface ICommandBus : IBusControl, IBus, IPublishEndpoint, IPublishEndpointProvider, IPublishObserverConnector, ISendEndpointProvider, ISendObserverConnector, IConsumePipeConnector, IRequestPipeConnector, IConsumeMessageObserverConnector, IConsumeObserverConnector, IReceiveObserverConnector, IReceiveEndpointObserverConnector, IReceiveConnector, IEndpointConfigurationObserverConnector, IProbeSite Inherited Members IBusControl.StartAsync(CancellationToken) IBusControl.StopAsync(CancellationToken) IBusControl.CheckHealth() IBus.Address IBus.Topology IPublishEndpoint.Publish<T>(T, CancellationToken) IPublishEndpoint.Publish<T>(T, IPipe<PublishContext<T>>, CancellationToken) IPublishEndpoint.Publish<T>(T, IPipe<PublishContext>, CancellationToken) IPublishEndpoint.Publish(object, CancellationToken) IPublishEndpoint.Publish(object, IPipe<PublishContext>, CancellationToken) IPublishEndpoint.Publish(object, Type, CancellationToken) IPublishEndpoint.Publish(object, Type, IPipe<PublishContext>, CancellationToken) IPublishEndpoint.Publish<T>(object, CancellationToken) IPublishEndpoint.Publish<T>(object, IPipe<PublishContext<T>>, CancellationToken) IPublishEndpoint.Publish<T>(object, IPipe<PublishContext>, CancellationToken) IPublishEndpointProvider.GetPublishSendEndpoint<T>() IPublishObserverConnector.ConnectPublishObserver(IPublishObserver) ISendEndpointProvider.GetSendEndpoint(Uri) ISendObserverConnector.ConnectSendObserver(ISendObserver) IConsumePipeConnector.ConnectConsumePipe<T>(IPipe<ConsumeContext<T>>) IConsumePipeConnector.ConnectConsumePipe<T>(IPipe<ConsumeContext<T>>, ConnectPipeOptions) IRequestPipeConnector.ConnectRequestPipe<T>(Guid, IPipe<ConsumeContext<T>>) IConsumeMessageObserverConnector.ConnectConsumeMessageObserver<T>(IConsumeMessageObserver<T>) IConsumeObserverConnector.ConnectConsumeObserver(IConsumeObserver) IReceiveObserverConnector.ConnectReceiveObserver(IReceiveObserver) IReceiveEndpointObserverConnector.ConnectReceiveEndpointObserver(IReceiveEndpointObserver) IReceiveConnector.ConnectReceiveEndpoint(IEndpointDefinition, IEndpointNameFormatter, Action<IReceiveEndpointConfigurator>) IReceiveConnector.ConnectReceiveEndpoint(string, Action<IReceiveEndpointConfigurator>) IEndpointConfigurationObserverConnector.ConnectEndpointConfigurationObserver(IEndpointConfigurationObserver) IProbeSite.Probe(ProbeContext) Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime)"
  },
  "api/Falcon.Messaging.Command.ICommandConsumer-1.html": {
    "href": "api/Falcon.Messaging.Command.ICommandConsumer-1.html",
    "title": "Interface ICommandConsumer<TEntity> | Falcon Documentation",
    "keywords": "Interface ICommandConsumer<TEntity> Namespace Falcon.Messaging.Command Assembly Falcon.Messaging.dll public interface ICommandConsumer<in TEntity> : IConsumer<TEntity>, IConsumer where TEntity : class, ICommand Type Parameters TEntity Inherited Members IConsumer<TEntity>.Consume(ConsumeContext<TEntity>) Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime)"
  },
  "api/Falcon.Messaging.Command.html": {
    "href": "api/Falcon.Messaging.Command.html",
    "title": "Namespace Falcon.Messaging.Command | Falcon Documentation",
    "keywords": "Namespace Falcon.Messaging.Command Classes CommandBus CommandSender Interfaces ICommand ICommandBus ICommandConsumer<TEntity>"
  },
  "api/Falcon.Messaging.DomainEvents.DomainEvent.html": {
    "href": "api/Falcon.Messaging.DomainEvents.DomainEvent.html",
    "title": "Class DomainEvent | Falcon Documentation",
    "keywords": "Class DomainEvent Namespace Falcon.Messaging.DomainEvents Assembly Falcon.Messaging.dll public abstract class DomainEvent : IDomainEvent, IEvent Inheritance object DomainEvent Implements IDomainEvent IEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) EventPublisherExtensions.PublishAsync<TEvent>(TEvent, CancellationToken) Constructors DomainEvent(Guid, int) protected DomainEvent(Guid aggregateId, int version) Parameters aggregateId Guid version int Properties AggregateId public Guid AggregateId { get; set; } Property Value Guid Id public Guid Id { get; set; } Property Value Guid OccurredOn public DateTime OccurredOn { get; set; } Property Value DateTime Version public int Version { get; set; } Property Value int Methods GetEventType() public string GetEventType() Returns string"
  },
  "api/Falcon.Messaging.DomainEvents.DomainEventBus.html": {
    "href": "api/Falcon.Messaging.DomainEvents.DomainEventBus.html",
    "title": "Class DomainEventBus | Falcon Documentation",
    "keywords": "Class DomainEventBus Namespace Falcon.Messaging.DomainEvents Assembly Falcon.Messaging.dll public class DomainEventBus : BusInstance<IDomainEventBus>, IDomainEventBus, IBusControl, IBus, IPublishEndpoint, IPublishEndpointProvider, IPublishObserverConnector, ISendEndpointProvider, ISendObserverConnector, IConsumePipeConnector, IRequestPipeConnector, IConsumeMessageObserverConnector, IConsumeObserverConnector, IReceiveObserverConnector, IReceiveEndpointObserverConnector, IReceiveConnector, IEndpointConfigurationObserverConnector, IProbeSite Inheritance object BusInstance<IDomainEventBus> DomainEventBus Implements IDomainEventBus IBusControl IBus IPublishEndpoint IPublishEndpointProvider IPublishObserverConnector ISendEndpointProvider ISendObserverConnector IConsumePipeConnector IRequestPipeConnector IConsumeMessageObserverConnector IConsumeObserverConnector IReceiveObserverConnector IReceiveEndpointObserverConnector IReceiveConnector IEndpointConfigurationObserverConnector IProbeSite Inherited Members BusInstance<IDomainEventBus>.ConnectPublishObserver(IPublishObserver) BusInstance<IDomainEventBus>.Publish<T>(T, CancellationToken) BusInstance<IDomainEventBus>.Publish<T>(T, IPipe<PublishContext<T>>, CancellationToken) BusInstance<IDomainEventBus>.Publish<T>(T, IPipe<PublishContext>, CancellationToken) BusInstance<IDomainEventBus>.Publish(object, CancellationToken) BusInstance<IDomainEventBus>.Publish(object, IPipe<PublishContext>, CancellationToken) BusInstance<IDomainEventBus>.Publish(object, Type, CancellationToken) BusInstance<IDomainEventBus>.Publish(object, Type, IPipe<PublishContext>, CancellationToken) BusInstance<IDomainEventBus>.Publish<T>(object, CancellationToken) BusInstance<IDomainEventBus>.Publish<T>(object, IPipe<PublishContext<T>>, CancellationToken) BusInstance<IDomainEventBus>.Publish<T>(object, IPipe<PublishContext>, CancellationToken) BusInstance<IDomainEventBus>.GetPublishSendEndpoint<T>() BusInstance<IDomainEventBus>.ConnectSendObserver(ISendObserver) BusInstance<IDomainEventBus>.GetSendEndpoint(Uri) BusInstance<IDomainEventBus>.ConnectConsumePipe<T>(IPipe<ConsumeContext<T>>) BusInstance<IDomainEventBus>.ConnectConsumePipe<T>(IPipe<ConsumeContext<T>>, ConnectPipeOptions) BusInstance<IDomainEventBus>.ConnectRequestPipe<T>(Guid, IPipe<ConsumeContext<T>>) BusInstance<IDomainEventBus>.ConnectConsumeMessageObserver<T>(IConsumeMessageObserver<T>) BusInstance<IDomainEventBus>.ConnectConsumeObserver(IConsumeObserver) BusInstance<IDomainEventBus>.ConnectReceiveObserver(IReceiveObserver) BusInstance<IDomainEventBus>.ConnectReceiveEndpointObserver(IReceiveEndpointObserver) BusInstance<IDomainEventBus>.ConnectEndpointConfigurationObserver(IEndpointConfigurationObserver) BusInstance<IDomainEventBus>.ConnectReceiveEndpoint(IEndpointDefinition, IEndpointNameFormatter, Action<IReceiveEndpointConfigurator>) BusInstance<IDomainEventBus>.ConnectReceiveEndpoint(string, Action<IReceiveEndpointConfigurator>) BusInstance<IDomainEventBus>.Probe(ProbeContext) BusInstance<IDomainEventBus>.StartAsync(CancellationToken) BusInstance<IDomainEventBus>.StopAsync(CancellationToken) BusInstance<IDomainEventBus>.CheckHealth() BusInstance<IDomainEventBus>.Address BusInstance<IDomainEventBus>.Topology object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors DomainEventBus(IBusControl) public DomainEventBus(IBusControl busControl) Parameters busControl IBusControl"
  },
  "api/Falcon.Messaging.DomainEvents.DomainEventPublisher.html": {
    "href": "api/Falcon.Messaging.DomainEvents.DomainEventPublisher.html",
    "title": "Class DomainEventPublisher | Falcon Documentation",
    "keywords": "Class DomainEventPublisher Namespace Falcon.Messaging.DomainEvents Assembly Falcon.Messaging.dll public class DomainEventPublisher : IEventPublisher Inheritance object DomainEventPublisher Implements IEventPublisher Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors DomainEventPublisher(DomainEventBus) public DomainEventPublisher(DomainEventBus domainEventBus) Parameters domainEventBus DomainEventBus Methods PublishAsync<TEvent>(TEvent, CancellationToken) public Task PublishAsync<TEvent>(TEvent @event, CancellationToken cancellationToken = default) where TEvent : class, IEvent Parameters event TEvent cancellationToken CancellationToken Returns Task Type Parameters TEvent"
  },
  "api/Falcon.Messaging.DomainEvents.IDomainEventBus.html": {
    "href": "api/Falcon.Messaging.DomainEvents.IDomainEventBus.html",
    "title": "Interface IDomainEventBus | Falcon Documentation",
    "keywords": "Interface IDomainEventBus Namespace Falcon.Messaging.DomainEvents Assembly Falcon.Messaging.dll public interface IDomainEventBus : IBusControl, IBus, IPublishEndpoint, IPublishEndpointProvider, IPublishObserverConnector, ISendEndpointProvider, ISendObserverConnector, IConsumePipeConnector, IRequestPipeConnector, IConsumeMessageObserverConnector, IConsumeObserverConnector, IReceiveObserverConnector, IReceiveEndpointObserverConnector, IReceiveConnector, IEndpointConfigurationObserverConnector, IProbeSite Inherited Members IBusControl.StartAsync(CancellationToken) IBusControl.StopAsync(CancellationToken) IBusControl.CheckHealth() IBus.Address IBus.Topology IPublishEndpoint.Publish<T>(T, CancellationToken) IPublishEndpoint.Publish<T>(T, IPipe<PublishContext<T>>, CancellationToken) IPublishEndpoint.Publish<T>(T, IPipe<PublishContext>, CancellationToken) IPublishEndpoint.Publish(object, CancellationToken) IPublishEndpoint.Publish(object, IPipe<PublishContext>, CancellationToken) IPublishEndpoint.Publish(object, Type, CancellationToken) IPublishEndpoint.Publish(object, Type, IPipe<PublishContext>, CancellationToken) IPublishEndpoint.Publish<T>(object, CancellationToken) IPublishEndpoint.Publish<T>(object, IPipe<PublishContext<T>>, CancellationToken) IPublishEndpoint.Publish<T>(object, IPipe<PublishContext>, CancellationToken) IPublishEndpointProvider.GetPublishSendEndpoint<T>() IPublishObserverConnector.ConnectPublishObserver(IPublishObserver) ISendEndpointProvider.GetSendEndpoint(Uri) ISendObserverConnector.ConnectSendObserver(ISendObserver) IConsumePipeConnector.ConnectConsumePipe<T>(IPipe<ConsumeContext<T>>) IConsumePipeConnector.ConnectConsumePipe<T>(IPipe<ConsumeContext<T>>, ConnectPipeOptions) IRequestPipeConnector.ConnectRequestPipe<T>(Guid, IPipe<ConsumeContext<T>>) IConsumeMessageObserverConnector.ConnectConsumeMessageObserver<T>(IConsumeMessageObserver<T>) IConsumeObserverConnector.ConnectConsumeObserver(IConsumeObserver) IReceiveObserverConnector.ConnectReceiveObserver(IReceiveObserver) IReceiveEndpointObserverConnector.ConnectReceiveEndpointObserver(IReceiveEndpointObserver) IReceiveConnector.ConnectReceiveEndpoint(IEndpointDefinition, IEndpointNameFormatter, Action<IReceiveEndpointConfigurator>) IReceiveConnector.ConnectReceiveEndpoint(string, Action<IReceiveEndpointConfigurator>) IEndpointConfigurationObserverConnector.ConnectEndpointConfigurationObserver(IEndpointConfigurationObserver) IProbeSite.Probe(ProbeContext) Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime)"
  },
  "api/Falcon.Messaging.DomainEvents.IDomainEventConsumer-1.html": {
    "href": "api/Falcon.Messaging.DomainEvents.IDomainEventConsumer-1.html",
    "title": "Interface IDomainEventConsumer<TDomainEvent> | Falcon Documentation",
    "keywords": "Interface IDomainEventConsumer<TDomainEvent> Namespace Falcon.Messaging.DomainEvents Assembly Falcon.Messaging.dll public interface IDomainEventConsumer<in TDomainEvent> : IConsumer<TDomainEvent>, IConsumer where TDomainEvent : class, IDomainEvent Type Parameters TDomainEvent Inherited Members IConsumer<TDomainEvent>.Consume(ConsumeContext<TDomainEvent>) Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime)"
  },
  "api/Falcon.Messaging.DomainEvents.html": {
    "href": "api/Falcon.Messaging.DomainEvents.html",
    "title": "Namespace Falcon.Messaging.DomainEvents | Falcon Documentation",
    "keywords": "Namespace Falcon.Messaging.DomainEvents Classes DomainEvent DomainEventBus DomainEventPublisher Interfaces IDomainEventBus IDomainEventConsumer<TDomainEvent>"
  },
  "api/Falcon.Messaging.EventPublisherExtensions.html": {
    "href": "api/Falcon.Messaging.EventPublisherExtensions.html",
    "title": "Class EventPublisherExtensions | Falcon Documentation",
    "keywords": "Class EventPublisherExtensions Namespace Falcon.Messaging Assembly Falcon.Messaging.dll public static class EventPublisherExtensions Inheritance object EventPublisherExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetAsync<TRequest, TResponse>(TRequest, CancellationToken) public static Task<TResponse> GetAsync<TRequest, TResponse>(this TRequest @event, CancellationToken cancellationToken = default) where TRequest : class, IQuery where TResponse : class Parameters event TRequest cancellationToken CancellationToken Returns Task<TResponse> Type Parameters TRequest TResponse PublishAsync<TEvent>(TEvent, CancellationToken) public static Task PublishAsync<TEvent>(this TEvent @event, CancellationToken cancellationToken = default) where TEvent : class, IEvent Parameters event TEvent cancellationToken CancellationToken Returns Task Type Parameters TEvent SendAsync<TEvent>(TEvent, CancellationToken) public static Task SendAsync<TEvent>(this TEvent @event, CancellationToken cancellationToken = default) where TEvent : class, ICommand Parameters event TEvent cancellationToken CancellationToken Returns Task Type Parameters TEvent"
  },
  "api/Falcon.Messaging.IntegrationEvents.IIntegrationEventBus.html": {
    "href": "api/Falcon.Messaging.IntegrationEvents.IIntegrationEventBus.html",
    "title": "Interface IIntegrationEventBus | Falcon Documentation",
    "keywords": "Interface IIntegrationEventBus Namespace Falcon.Messaging.IntegrationEvents Assembly Falcon.Messaging.dll public interface IIntegrationEventBus : IBusControl, IBus, IPublishEndpoint, IPublishEndpointProvider, IPublishObserverConnector, ISendEndpointProvider, ISendObserverConnector, IConsumePipeConnector, IRequestPipeConnector, IConsumeMessageObserverConnector, IConsumeObserverConnector, IReceiveObserverConnector, IReceiveEndpointObserverConnector, IReceiveConnector, IEndpointConfigurationObserverConnector, IProbeSite Inherited Members IBusControl.StartAsync(CancellationToken) IBusControl.StopAsync(CancellationToken) IBusControl.CheckHealth() IBus.Address IBus.Topology IPublishEndpoint.Publish<T>(T, CancellationToken) IPublishEndpoint.Publish<T>(T, IPipe<PublishContext<T>>, CancellationToken) IPublishEndpoint.Publish<T>(T, IPipe<PublishContext>, CancellationToken) IPublishEndpoint.Publish(object, CancellationToken) IPublishEndpoint.Publish(object, IPipe<PublishContext>, CancellationToken) IPublishEndpoint.Publish(object, Type, CancellationToken) IPublishEndpoint.Publish(object, Type, IPipe<PublishContext>, CancellationToken) IPublishEndpoint.Publish<T>(object, CancellationToken) IPublishEndpoint.Publish<T>(object, IPipe<PublishContext<T>>, CancellationToken) IPublishEndpoint.Publish<T>(object, IPipe<PublishContext>, CancellationToken) IPublishEndpointProvider.GetPublishSendEndpoint<T>() IPublishObserverConnector.ConnectPublishObserver(IPublishObserver) ISendEndpointProvider.GetSendEndpoint(Uri) ISendObserverConnector.ConnectSendObserver(ISendObserver) IConsumePipeConnector.ConnectConsumePipe<T>(IPipe<ConsumeContext<T>>) IConsumePipeConnector.ConnectConsumePipe<T>(IPipe<ConsumeContext<T>>, ConnectPipeOptions) IRequestPipeConnector.ConnectRequestPipe<T>(Guid, IPipe<ConsumeContext<T>>) IConsumeMessageObserverConnector.ConnectConsumeMessageObserver<T>(IConsumeMessageObserver<T>) IConsumeObserverConnector.ConnectConsumeObserver(IConsumeObserver) IReceiveObserverConnector.ConnectReceiveObserver(IReceiveObserver) IReceiveEndpointObserverConnector.ConnectReceiveEndpointObserver(IReceiveEndpointObserver) IReceiveConnector.ConnectReceiveEndpoint(IEndpointDefinition, IEndpointNameFormatter, Action<IReceiveEndpointConfigurator>) IReceiveConnector.ConnectReceiveEndpoint(string, Action<IReceiveEndpointConfigurator>) IEndpointConfigurationObserverConnector.ConnectEndpointConfigurationObserver(IEndpointConfigurationObserver) IProbeSite.Probe(ProbeContext) Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime)"
  },
  "api/Falcon.Messaging.IntegrationEvents.IIntegrationEventConsumer-1.html": {
    "href": "api/Falcon.Messaging.IntegrationEvents.IIntegrationEventConsumer-1.html",
    "title": "Interface IIntegrationEventConsumer<TIntegrationEvent> | Falcon Documentation",
    "keywords": "Interface IIntegrationEventConsumer<TIntegrationEvent> Namespace Falcon.Messaging.IntegrationEvents Assembly Falcon.Messaging.dll public interface IIntegrationEventConsumer<in TIntegrationEvent> : IConsumer<TIntegrationEvent>, IConsumer where TIntegrationEvent : class, IIntegrationEvent Type Parameters TIntegrationEvent Inherited Members IConsumer<TIntegrationEvent>.Consume(ConsumeContext<TIntegrationEvent>) Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime)"
  },
  "api/Falcon.Messaging.IntegrationEvents.IntegrationEvent.html": {
    "href": "api/Falcon.Messaging.IntegrationEvents.IntegrationEvent.html",
    "title": "Class IntegrationEvent | Falcon Documentation",
    "keywords": "Class IntegrationEvent Namespace Falcon.Messaging.IntegrationEvents Assembly Falcon.Messaging.dll public abstract class IntegrationEvent : IIntegrationEvent, IEvent Inheritance object IntegrationEvent Implements IIntegrationEvent IEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) EventPublisherExtensions.PublishAsync<TEvent>(TEvent, CancellationToken) Constructors IntegrationEvent(string) protected IntegrationEvent(string eventSource) Parameters eventSource string Properties EventSource public string EventSource { get; } Property Value string Id public Guid Id { get; } Property Value Guid OccurredOn public DateTime OccurredOn { get; } Property Value DateTime"
  },
  "api/Falcon.Messaging.IntegrationEvents.IntegrationEventBus.html": {
    "href": "api/Falcon.Messaging.IntegrationEvents.IntegrationEventBus.html",
    "title": "Class IntegrationEventBus | Falcon Documentation",
    "keywords": "Class IntegrationEventBus Namespace Falcon.Messaging.IntegrationEvents Assembly Falcon.Messaging.dll public class IntegrationEventBus : BusInstance<IIntegrationEventBus>, IIntegrationEventBus, IBusControl, IBus, IPublishEndpoint, IPublishEndpointProvider, IPublishObserverConnector, ISendEndpointProvider, ISendObserverConnector, IConsumePipeConnector, IRequestPipeConnector, IConsumeMessageObserverConnector, IConsumeObserverConnector, IReceiveObserverConnector, IReceiveEndpointObserverConnector, IReceiveConnector, IEndpointConfigurationObserverConnector, IProbeSite Inheritance object BusInstance<IIntegrationEventBus> IntegrationEventBus Implements IIntegrationEventBus IBusControl IBus IPublishEndpoint IPublishEndpointProvider IPublishObserverConnector ISendEndpointProvider ISendObserverConnector IConsumePipeConnector IRequestPipeConnector IConsumeMessageObserverConnector IConsumeObserverConnector IReceiveObserverConnector IReceiveEndpointObserverConnector IReceiveConnector IEndpointConfigurationObserverConnector IProbeSite Inherited Members BusInstance<IIntegrationEventBus>.ConnectPublishObserver(IPublishObserver) BusInstance<IIntegrationEventBus>.Publish<T>(T, CancellationToken) BusInstance<IIntegrationEventBus>.Publish<T>(T, IPipe<PublishContext<T>>, CancellationToken) BusInstance<IIntegrationEventBus>.Publish<T>(T, IPipe<PublishContext>, CancellationToken) BusInstance<IIntegrationEventBus>.Publish(object, CancellationToken) BusInstance<IIntegrationEventBus>.Publish(object, IPipe<PublishContext>, CancellationToken) BusInstance<IIntegrationEventBus>.Publish(object, Type, CancellationToken) BusInstance<IIntegrationEventBus>.Publish(object, Type, IPipe<PublishContext>, CancellationToken) BusInstance<IIntegrationEventBus>.Publish<T>(object, CancellationToken) BusInstance<IIntegrationEventBus>.Publish<T>(object, IPipe<PublishContext<T>>, CancellationToken) BusInstance<IIntegrationEventBus>.Publish<T>(object, IPipe<PublishContext>, CancellationToken) BusInstance<IIntegrationEventBus>.GetPublishSendEndpoint<T>() BusInstance<IIntegrationEventBus>.ConnectSendObserver(ISendObserver) BusInstance<IIntegrationEventBus>.GetSendEndpoint(Uri) BusInstance<IIntegrationEventBus>.ConnectConsumePipe<T>(IPipe<ConsumeContext<T>>) BusInstance<IIntegrationEventBus>.ConnectConsumePipe<T>(IPipe<ConsumeContext<T>>, ConnectPipeOptions) BusInstance<IIntegrationEventBus>.ConnectRequestPipe<T>(Guid, IPipe<ConsumeContext<T>>) BusInstance<IIntegrationEventBus>.ConnectConsumeMessageObserver<T>(IConsumeMessageObserver<T>) BusInstance<IIntegrationEventBus>.ConnectConsumeObserver(IConsumeObserver) BusInstance<IIntegrationEventBus>.ConnectReceiveObserver(IReceiveObserver) BusInstance<IIntegrationEventBus>.ConnectReceiveEndpointObserver(IReceiveEndpointObserver) BusInstance<IIntegrationEventBus>.ConnectEndpointConfigurationObserver(IEndpointConfigurationObserver) BusInstance<IIntegrationEventBus>.ConnectReceiveEndpoint(IEndpointDefinition, IEndpointNameFormatter, Action<IReceiveEndpointConfigurator>) BusInstance<IIntegrationEventBus>.ConnectReceiveEndpoint(string, Action<IReceiveEndpointConfigurator>) BusInstance<IIntegrationEventBus>.Probe(ProbeContext) BusInstance<IIntegrationEventBus>.StartAsync(CancellationToken) BusInstance<IIntegrationEventBus>.StopAsync(CancellationToken) BusInstance<IIntegrationEventBus>.CheckHealth() BusInstance<IIntegrationEventBus>.Address BusInstance<IIntegrationEventBus>.Topology object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors IntegrationEventBus(IBusControl) public IntegrationEventBus(IBusControl busControl) Parameters busControl IBusControl"
  },
  "api/Falcon.Messaging.IntegrationEvents.IntegrationEventPublisher.html": {
    "href": "api/Falcon.Messaging.IntegrationEvents.IntegrationEventPublisher.html",
    "title": "Class IntegrationEventPublisher | Falcon Documentation",
    "keywords": "Class IntegrationEventPublisher Namespace Falcon.Messaging.IntegrationEvents Assembly Falcon.Messaging.dll public class IntegrationEventPublisher : IEventPublisher Inheritance object IntegrationEventPublisher Implements IEventPublisher Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors IntegrationEventPublisher(IntegrationEventBus) public IntegrationEventPublisher(IntegrationEventBus integrationEventBus) Parameters integrationEventBus IntegrationEventBus Methods PublishAsync<TEvent>(TEvent, CancellationToken) public Task PublishAsync<TEvent>(TEvent @event, CancellationToken cancellationToken = default) where TEvent : class, IEvent Parameters event TEvent cancellationToken CancellationToken Returns Task Type Parameters TEvent"
  },
  "api/Falcon.Messaging.IntegrationEvents.html": {
    "href": "api/Falcon.Messaging.IntegrationEvents.html",
    "title": "Namespace Falcon.Messaging.IntegrationEvents | Falcon Documentation",
    "keywords": "Namespace Falcon.Messaging.IntegrationEvents Classes IntegrationEvent IntegrationEventBus IntegrationEventPublisher Interfaces IIntegrationEventBus IIntegrationEventConsumer<TIntegrationEvent>"
  },
  "api/Falcon.Messaging.MessagingOptions.html": {
    "href": "api/Falcon.Messaging.MessagingOptions.html",
    "title": "Class MessagingOptions | Falcon Documentation",
    "keywords": "Class MessagingOptions Namespace Falcon.Messaging Assembly Falcon.Messaging.dll public class MessagingOptions Inheritance object MessagingOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Properties ApplicationBusConfigurator public required Action<IBusRegistrationConfigurator> ApplicationBusConfigurator { get; set; } Property Value Action<IBusRegistrationConfigurator> CommandBusConfigurator public required Action<IBusRegistrationConfigurator> CommandBusConfigurator { get; set; } Property Value Action<IBusRegistrationConfigurator> DomainBusConfigurator public required Action<IBusRegistrationConfigurator> DomainBusConfigurator { get; set; } Property Value Action<IBusRegistrationConfigurator> InfrastructureBusConfigurator public required Action<IBusRegistrationConfigurator> InfrastructureBusConfigurator { get; set; } Property Value Action<IBusRegistrationConfigurator> QueryBusConfigurator public required Action<IBusRegistrationConfigurator> QueryBusConfigurator { get; set; } Property Value Action<IBusRegistrationConfigurator>"
  },
  "api/Falcon.Messaging.MessagingOptionsBuilder.html": {
    "href": "api/Falcon.Messaging.MessagingOptionsBuilder.html",
    "title": "Class MessagingOptionsBuilder | Falcon Documentation",
    "keywords": "Class MessagingOptionsBuilder Namespace Falcon.Messaging Assembly Falcon.Messaging.dll public class MessagingOptionsBuilder Inheritance object MessagingOptionsBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Methods AddApplicationEvent(Action<IBusRegistrationConfigurator>) public MessagingOptionsBuilder AddApplicationEvent(Action<IBusRegistrationConfigurator> applicationBusConfigurator) Parameters applicationBusConfigurator Action<IBusRegistrationConfigurator> Returns MessagingOptionsBuilder AddCommand(Action<IBusRegistrationConfigurator>) public MessagingOptionsBuilder AddCommand(Action<IBusRegistrationConfigurator> commandBusConfigurator) Parameters commandBusConfigurator Action<IBusRegistrationConfigurator> Returns MessagingOptionsBuilder AddDomainEvent(Action<IBusRegistrationConfigurator>) public MessagingOptionsBuilder AddDomainEvent(Action<IBusRegistrationConfigurator> domainBusConfigurator) Parameters domainBusConfigurator Action<IBusRegistrationConfigurator> Returns MessagingOptionsBuilder AddIntegrationEvent(Action<IBusRegistrationConfigurator>) public MessagingOptionsBuilder AddIntegrationEvent(Action<IBusRegistrationConfigurator> integrationBusConfigurator) Parameters integrationBusConfigurator Action<IBusRegistrationConfigurator> Returns MessagingOptionsBuilder AddQuery(Action<IBusRegistrationConfigurator>) public MessagingOptionsBuilder AddQuery(Action<IBusRegistrationConfigurator> queryBusConfigurator) Parameters queryBusConfigurator Action<IBusRegistrationConfigurator> Returns MessagingOptionsBuilder Build() public MessagingOptions Build() Returns MessagingOptions New() public static MessagingOptionsBuilder New() Returns MessagingOptionsBuilder"
  },
  "api/Falcon.Messaging.Query.IQuery.html": {
    "href": "api/Falcon.Messaging.Query.IQuery.html",
    "title": "Interface IQuery | Falcon Documentation",
    "keywords": "Interface IQuery Namespace Falcon.Messaging.Query Assembly Falcon.Messaging.dll public interface IQuery Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) EventPublisherExtensions.GetAsync<TRequest, TResponse>(TRequest, CancellationToken)"
  },
  "api/Falcon.Messaging.Query.IQueryConsumer-1.html": {
    "href": "api/Falcon.Messaging.Query.IQueryConsumer-1.html",
    "title": "Interface IQueryConsumer<TEntity> | Falcon Documentation",
    "keywords": "Interface IQueryConsumer<TEntity> Namespace Falcon.Messaging.Query Assembly Falcon.Messaging.dll public interface IQueryConsumer<in TEntity> : IConsumer<TEntity>, IConsumer where TEntity : class, IQuery Type Parameters TEntity Inherited Members IConsumer<TEntity>.Consume(ConsumeContext<TEntity>) Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime)"
  },
  "api/Falcon.Messaging.Query.QueryClient.html": {
    "href": "api/Falcon.Messaging.Query.QueryClient.html",
    "title": "Class QueryClient | Falcon Documentation",
    "keywords": "Class QueryClient Namespace Falcon.Messaging.Query Assembly Falcon.Messaging.dll public class QueryClient Inheritance object QueryClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EntityAuditExtensions.AuditForCreate<TId, TEntity>(TEntity, TId, DateTime) EntityAuditExtensions.AuditForUpdate<TId, TEntity>(TEntity, TId, DateTime) Constructors QueryClient(IServiceProvider) public QueryClient(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider Methods GetAsync<TRequest, TResponse>(TRequest, CancellationToken) public Task<TResponse> GetAsync<TRequest, TResponse>(TRequest requeset, CancellationToken cancellationToken = default) where TRequest : class, IQuery where TResponse : class Parameters requeset TRequest cancellationToken CancellationToken Returns Task<TResponse> Type Parameters TRequest TResponse"
  },
  "api/Falcon.Messaging.Query.html": {
    "href": "api/Falcon.Messaging.Query.html",
    "title": "Namespace Falcon.Messaging.Query | Falcon Documentation",
    "keywords": "Namespace Falcon.Messaging.Query Classes QueryClient Interfaces IQuery IQueryConsumer<TEntity>"
  },
  "api/Falcon.Messaging.ServiceCollectionExtensions.html": {
    "href": "api/Falcon.Messaging.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | Falcon Documentation",
    "keywords": "Class ServiceCollectionExtensions Namespace Falcon.Messaging Assembly Falcon.Messaging.dll public static class ServiceCollectionExtensions Inheritance object ServiceCollectionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddDefaultApplicationEventConsumers(IBusRegistrationConfigurator) public static void AddDefaultApplicationEventConsumers(this IBusRegistrationConfigurator cfg) Parameters cfg IBusRegistrationConfigurator AddDefaultCommandConsumers(IBusRegistrationConfigurator) public static void AddDefaultCommandConsumers(this IBusRegistrationConfigurator cfg) Parameters cfg IBusRegistrationConfigurator AddDefaultDomainEventConsumers(IBusRegistrationConfigurator) public static void AddDefaultDomainEventConsumers(this IBusRegistrationConfigurator cfg) Parameters cfg IBusRegistrationConfigurator AddDefaultIntegrationEventConsumers(IBusRegistrationConfigurator) public static void AddDefaultIntegrationEventConsumers(this IBusRegistrationConfigurator cfg) Parameters cfg IBusRegistrationConfigurator AddDefaultQueryConsumers(IBusRegistrationConfigurator) public static void AddDefaultQueryConsumers(this IBusRegistrationConfigurator cfg) Parameters cfg IBusRegistrationConfigurator AddDefaultQueryRequestClient(IBusRegistrationConfigurator) public static void AddDefaultQueryRequestClient(this IBusRegistrationConfigurator cfg) Parameters cfg IBusRegistrationConfigurator AddMessaging(IServiceCollection, Action<MessagingOptionsBuilder>?) public static IServiceCollection AddMessaging(this IServiceCollection services, Action<MessagingOptionsBuilder>? messagingOptionsBuilder = null) Parameters services IServiceCollection messagingOptionsBuilder Action<MessagingOptionsBuilder> Returns IServiceCollection LogQueryConsumers(IServiceCollection) public static void LogQueryConsumers(this IServiceCollection services) Parameters services IServiceCollection UseMessaging(IServiceProvider) public static IServiceProvider UseMessaging(this IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider Returns IServiceProvider"
  },
  "api/Falcon.Messaging.html": {
    "href": "api/Falcon.Messaging.html",
    "title": "Namespace Falcon.Messaging | Falcon Documentation",
    "keywords": "Namespace Falcon.Messaging Classes EventPublisherExtensions MessagingOptions MessagingOptionsBuilder ServiceCollectionExtensions"
  },
  "articles/events.html": {
    "href": "articles/events.html",
    "title": "| Falcon Documentation",
    "keywords": "Events Application Events Application Events Raised from Application layer 1. UserLoggedIn 2. UserLoggedOut 3. SessionExpired 4. PasswordChanged Raised from Infrastructure Components 5. UserRegistered 6. CacheRefreshed 7. ApplicationStarted 8. ApplicationShutdown Domain Domain Events 1. OrderPlaced 2. PaymentProcessed 3. ItemShipped Integration Events Integration Events: (communication between different bounded contexts)"
  },
  "articles/index.html": {
    "href": "articles/index.html",
    "title": "Articles | Falcon Documentation",
    "keywords": "Articles"
  },
  "articles/references.html": {
    "href": "articles/references.html",
    "title": "Refences | Falcon Documentation",
    "keywords": "Refences Architecure References Clean Architecture Clean Architecture Aspire Samples Development Refernce Endpoint Groupgings Implement Keycloak Authentication CQRS MediatR Ref.1, Ref. 2, Ref. 3 Azure Service Bus Ref. 1, Ref. 2, Ref. 3 (Topic) Authentication & Authrization: Ref. 1 External Identity Provider Ref. 2 Ref. 3 Ref. 4 for Mobile Ref. 5 OpenIdConnect Authentication Swashbuckle Configuration Reference (Depricated in Dotnet 9.0) Ref. 1 Ref. 2 Authorization Configuration in Swagger Ref.3 Microsoft Open API Environmnt Variable Template Engines WebApi Samples WebApi History 2.0 to 7.0 Dynamically Generate Controller Dotnet Tools SAST - Sonar Cloud - Code Coverage SAST - Sonar Cloud - Code Coverage DAST - owasp-zap-api-scan DAST - owasp-zap Structured Query Structured Query Example Mongo DB MongoDb Changestream Mongo DB Sample Query in JS Create Custom Configuration Provider Ref. 1, Ref. 2 Web API Dev Reference Multi Tenancy Ref. 1 Ref. 2 REST Patch Api Javascript JSON Patch Document C# Github Readme File Reference Nuget, Build, Other dotnet setup Web Api Development Reference ABP Framework Database Migration Fluent Migration Open Policy Agent OPA Playground Elsa (Dotnet code sample & EF migration code sample) ELSA DevOps Reference Bump Version Number C# Development - VS Code Extensions Top 10 VS Code Extension Shared Kernal DDD Reference Sample Source Reference Builder Pattern Understandings Service layers a. Domain Service Domain logics b. Application Service Orchestrating domain operations c. Infrastructure Service sending emails, handling file storage, or managing database connections—essentially anything that supports application and domain layers by abstracting external systems or libraries."
  },
  "articles/todo.html": {
    "href": "articles/todo.html",
    "title": "Todo: | Falcon Documentation",
    "keywords": "Todo: a. Messaging for Query (CQRS) using MassTransit (singel response) - Done. b. Messaging for Query (CQRS) using MassTransit (multi response) - Rejected Messaging for Command (CQRS) using MassTransit - Done Falcon API Sample application (DDD based) - In-progress"
  },
  "examples/index.html": {
    "href": "examples/index.html",
    "title": "Examples | Falcon Documentation",
    "keywords": "Examples"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Falcon Documentation",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}